package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from LAUXMES1FM physical file
 * definition.
 * 
* File level identifier is 1140313221821. Record format level identifier is
 * 45ECA845793D9.
 */
public class LAUXMES1FMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "AREAD",
        "AREAH",
        "TIPFID",
        "DESFID",
        "FECPRO",
        "PRODPRO",
        "CATEGO",
        "DESCAT",
        "FINIQUI"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "AREAD",
        "AREAH",
        "TIPFID",
        "DESFID",
        "FECPRO",
        "PRODPRO",
        "CATEGO",
        "DESCAT",
        "FINIQUI"
    };
    final static String fid = "1140313221821";
    final static String rid = "45ECA845793D9";
    final static String fmtname = "LAUXMES1FM";
    final int FIELDCOUNT = 18;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldAREAD = null;
    private CharacterField fieldAREAH = null;
    private DecimalField fieldTIPFID = null;
    private CharacterField fieldDESFID = null;
    private DecimalField fieldFECPRO = null;
    private DecimalField fieldPRODPRO = null;
    private DecimalField fieldCATEGO = null;
    private CharacterField fieldDESCAT = null;
    private CharacterField fieldFINIQUI = null;

    /**
     * Constructor for LAUXMES1FMMessage.
     */
    public LAUXMES1FMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 231;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldAREAD
                = new CharacterField(message, HEADERSIZE + 161, 4, "AREAD");
        fields[10] = fieldAREAH
                = new CharacterField(message, HEADERSIZE + 165, 4, "AREAH");
        fields[11] = fieldTIPFID
                = new DecimalField(message, HEADERSIZE + 169, 3, 0, "TIPFID");
        fields[12] = fieldDESFID
                = new CharacterField(message, HEADERSIZE + 172, 14, "DESFID");
        fields[13] = fieldFECPRO
                = new DecimalField(message, HEADERSIZE + 186, 7, 0, "FECPRO");
        fields[14] = fieldPRODPRO
                = new DecimalField(message, HEADERSIZE + 193, 4, 0, "PRODPRO");
        fields[15] = fieldCATEGO
                = new DecimalField(message, HEADERSIZE + 197, 3, 0, "CATEGO");
        fields[16] = fieldDESCAT
                = new CharacterField(message, HEADERSIZE + 200, 30, "DESCAT");
        fields[17] = fieldFINIQUI
                = new CharacterField(message, HEADERSIZE + 230, 1, "FINIQUI");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field AREAD using a String value.
     */
    public void setAREAD(String newvalue) {
        fieldAREAD.setString(newvalue);
    }

    /**
     * Get value of field AREAD as a String.
     */
    public String getAREAD() {
        return fieldAREAD.getString();
    }

    /**
     * Set field AREAH using a String value.
     */
    public void setAREAH(String newvalue) {
        fieldAREAH.setString(newvalue);
    }

    /**
     * Get value of field AREAH as a String.
     */
    public String getAREAH() {
        return fieldAREAH.getString();
    }

    /**
     * Set field TIPFID using a String value.
     */
    public void setTIPFID(String newvalue) {
        fieldTIPFID.setString(newvalue);
    }

    /**
     * Get value of field TIPFID as a String.
     */
    public String getTIPFID() {
        return fieldTIPFID.getString();
    }

    /**
     * Set numeric field TIPFID using a BigDecimal value.
     */
    public void setTIPFID(BigDecimal newvalue) {
        fieldTIPFID.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field TIPFID as a BigDecimal.
     */
    public BigDecimal getBigDecimalTIPFID() {
        return fieldTIPFID.getBigDecimal();
    }

    /**
     * Set field DESFID using a String value.
     */
    public void setDESFID(String newvalue) {
        fieldDESFID.setString(newvalue);
    }

    /**
     * Get value of field DESFID as a String.
     */
    public String getDESFID() {
        return fieldDESFID.getString();
    }

    /**
     * Set field FECPRO using a String value.
     */
    public void setFECPRO(String newvalue) {
        fieldFECPRO.setString(newvalue);
    }

    /**
     * Get value of field FECPRO as a String.
     */
    public String getFECPRO() {
        return fieldFECPRO.getString();
    }

    /**
     * Set numeric field FECPRO using a BigDecimal value.
     */
    public void setFECPRO(BigDecimal newvalue) {
        fieldFECPRO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECPRO as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECPRO() {
        return fieldFECPRO.getBigDecimal();
    }

    /**
     * Set field PRODPRO using a String value.
     */
    public void setPRODPRO(String newvalue) {
        fieldPRODPRO.setString(newvalue);
    }

    /**
     * Get value of field PRODPRO as a String.
     */
    public String getPRODPRO() {
        return fieldPRODPRO.getString();
    }

    /**
     * Set numeric field PRODPRO using a BigDecimal value.
     */
    public void setPRODPRO(BigDecimal newvalue) {
        fieldPRODPRO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PRODPRO as a BigDecimal.
     */
    public BigDecimal getBigDecimalPRODPRO() {
        return fieldPRODPRO.getBigDecimal();
    }

    /**
     * Set field CATEGO using a String value.
     */
    public void setCATEGO(String newvalue) {
        fieldCATEGO.setString(newvalue);
    }

    /**
     * Get value of field CATEGO as a String.
     */
    public String getCATEGO() {
        return fieldCATEGO.getString();
    }

    /**
     * Set numeric field CATEGO using a BigDecimal value.
     */
    public void setCATEGO(BigDecimal newvalue) {
        fieldCATEGO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CATEGO as a BigDecimal.
     */
    public BigDecimal getBigDecimalCATEGO() {
        return fieldCATEGO.getBigDecimal();
    }

    /**
     * Set field DESCAT using a String value.
     */
    public void setDESCAT(String newvalue) {
        fieldDESCAT.setString(newvalue);
    }

    /**
     * Get value of field DESCAT as a String.
     */
    public String getDESCAT() {
        return fieldDESCAT.getString();
    }

    /**
     * Set field FINIQUI using a String value.
     */
    public void setFINIQUI(String newvalue) {
        fieldFINIQUI.setString(newvalue);
    }

    /**
     * Get value of field FINIQUI as a String.
     */
    public String getFINIQUI() {
        return fieldFINIQUI.getString();
    }

}
