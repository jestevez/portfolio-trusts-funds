package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from FLUCAJRFM physical file
 * definition.
 * 
* File level identifier is 1140213201923. Record format level identifier is
 * 343EB63E7D6AA.
 */
public class FLUCAJRFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "FECHA",
        "SFNOM",
        "SFCDI",
        "SFCIN",
        "SFTOT",
        "NRR",
        "CODFID",
        "FIDEP",
        "SALTEF",
        "SALTIN",
        "SALGEN"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "FECHA",
        "SFNOM",
        "SFCDI",
        "SFCIN",
        "SFTOT",
        "NRR",
        "CODFID",
        "FIDEP",
        "SALTEF",
        "SALTIN",
        "SALGEN"
    };
    final static String fid = "1140213201923";
    final static String rid = "343EB63E7D6AA";
    final static String fmtname = "FLUCAJRFM";
    final int FIELDCOUNT = 20;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private DecimalField fieldFECHA = null;
    private CharacterField fieldSFNOM = null;
    private DecimalField fieldSFCDI = null;
    private DecimalField fieldSFCIN = null;
    private DecimalField fieldSFTOT = null;
    private DecimalField fieldNRR = null;
    private CharacterField fieldCODFID = null;
    private CharacterField fieldFIDEP = null;
    private DecimalField fieldSALTEF = null;
    private DecimalField fieldSALTIN = null;
    private DecimalField fieldSALGEN = null;

    /**
     * Constructor for FLUCAJRFMMessage.
     */
    public FLUCAJRFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 322;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldFECHA
                = new DecimalField(message, HEADERSIZE + 161, 7, 0, "FECHA");
        fields[10] = fieldSFNOM
                = new CharacterField(message, HEADERSIZE + 168, 20, "SFNOM");
        fields[11] = fieldSFCDI
                = new DecimalField(message, HEADERSIZE + 188, 14, 2, "SFCDI");
        fields[12] = fieldSFCIN
                = new DecimalField(message, HEADERSIZE + 202, 14, 2, "SFCIN");
        fields[13] = fieldSFTOT
                = new DecimalField(message, HEADERSIZE + 216, 17, 2, "SFTOT");
        fields[14] = fieldNRR
                = new DecimalField(message, HEADERSIZE + 233, 5, 0, "NRR");
        fields[15] = fieldCODFID
                = new CharacterField(message, HEADERSIZE + 238, 4, "CODFID");
        fields[16] = fieldFIDEP
                = new CharacterField(message, HEADERSIZE + 242, 35, "FIDEP");
        fields[17] = fieldSALTEF
                = new DecimalField(message, HEADERSIZE + 277, 14, 2, "SALTEF");
        fields[18] = fieldSALTIN
                = new DecimalField(message, HEADERSIZE + 291, 14, 2, "SALTIN");
        fields[19] = fieldSALGEN
                = new DecimalField(message, HEADERSIZE + 305, 17, 2, "SALGEN");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field FECHA using a String value.
     */
    public void setFECHA(String newvalue) {
        fieldFECHA.setString(newvalue);
    }

    /**
     * Get value of field FECHA as a String.
     */
    public String getFECHA() {
        return fieldFECHA.getString();
    }

    /**
     * Set numeric field FECHA using a BigDecimal value.
     */
    public void setFECHA(BigDecimal newvalue) {
        fieldFECHA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECHA as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECHA() {
        return fieldFECHA.getBigDecimal();
    }

    /**
     * Set field SFNOM using a String value.
     */
    public void setSFNOM(String newvalue) {
        fieldSFNOM.setString(newvalue);
    }

    /**
     * Get value of field SFNOM as a String.
     */
    public String getSFNOM() {
        return fieldSFNOM.getString();
    }

    /**
     * Set field SFCDI using a String value.
     */
    public void setSFCDI(String newvalue) {
        fieldSFCDI.setString(newvalue);
    }

    /**
     * Get value of field SFCDI as a String.
     */
    public String getSFCDI() {
        return fieldSFCDI.getString();
    }

    /**
     * Set numeric field SFCDI using a BigDecimal value.
     */
    public void setSFCDI(BigDecimal newvalue) {
        fieldSFCDI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFCDI as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFCDI() {
        return fieldSFCDI.getBigDecimal();
    }

    /**
     * Set field SFCIN using a String value.
     */
    public void setSFCIN(String newvalue) {
        fieldSFCIN.setString(newvalue);
    }

    /**
     * Get value of field SFCIN as a String.
     */
    public String getSFCIN() {
        return fieldSFCIN.getString();
    }

    /**
     * Set numeric field SFCIN using a BigDecimal value.
     */
    public void setSFCIN(BigDecimal newvalue) {
        fieldSFCIN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFCIN as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFCIN() {
        return fieldSFCIN.getBigDecimal();
    }

    /**
     * Set field SFTOT using a String value.
     */
    public void setSFTOT(String newvalue) {
        fieldSFTOT.setString(newvalue);
    }

    /**
     * Get value of field SFTOT as a String.
     */
    public String getSFTOT() {
        return fieldSFTOT.getString();
    }

    /**
     * Set numeric field SFTOT using a BigDecimal value.
     */
    public void setSFTOT(BigDecimal newvalue) {
        fieldSFTOT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFTOT as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFTOT() {
        return fieldSFTOT.getBigDecimal();
    }

    /**
     * Set field NRR using a String value.
     */
    public void setNRR(String newvalue) {
        fieldNRR.setString(newvalue);
    }

    /**
     * Get value of field NRR as a String.
     */
    public String getNRR() {
        return fieldNRR.getString();
    }

    /**
     * Set numeric field NRR using a BigDecimal value.
     */
    public void setNRR(BigDecimal newvalue) {
        fieldNRR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field NRR as a BigDecimal.
     */
    public BigDecimal getBigDecimalNRR() {
        return fieldNRR.getBigDecimal();
    }

    /**
     * Set field CODFID using a String value.
     */
    public void setCODFID(String newvalue) {
        fieldCODFID.setString(newvalue);
    }

    /**
     * Get value of field CODFID as a String.
     */
    public String getCODFID() {
        return fieldCODFID.getString();
    }

    /**
     * Set field FIDEP using a String value.
     */
    public void setFIDEP(String newvalue) {
        fieldFIDEP.setString(newvalue);
    }

    /**
     * Get value of field FIDEP as a String.
     */
    public String getFIDEP() {
        return fieldFIDEP.getString();
    }

    /**
     * Set field SALTEF using a String value.
     */
    public void setSALTEF(String newvalue) {
        fieldSALTEF.setString(newvalue);
    }

    /**
     * Get value of field SALTEF as a String.
     */
    public String getSALTEF() {
        return fieldSALTEF.getString();
    }

    /**
     * Set numeric field SALTEF using a BigDecimal value.
     */
    public void setSALTEF(BigDecimal newvalue) {
        fieldSALTEF.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SALTEF as a BigDecimal.
     */
    public BigDecimal getBigDecimalSALTEF() {
        return fieldSALTEF.getBigDecimal();
    }

    /**
     * Set field SALTIN using a String value.
     */
    public void setSALTIN(String newvalue) {
        fieldSALTIN.setString(newvalue);
    }

    /**
     * Get value of field SALTIN as a String.
     */
    public String getSALTIN() {
        return fieldSALTIN.getString();
    }

    /**
     * Set numeric field SALTIN using a BigDecimal value.
     */
    public void setSALTIN(BigDecimal newvalue) {
        fieldSALTIN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SALTIN as a BigDecimal.
     */
    public BigDecimal getBigDecimalSALTIN() {
        return fieldSALTIN.getBigDecimal();
    }

    /**
     * Set field SALGEN using a String value.
     */
    public void setSALGEN(String newvalue) {
        fieldSALGEN.setString(newvalue);
    }

    /**
     * Get value of field SALGEN as a String.
     */
    public String getSALGEN() {
        return fieldSALGEN.getString();
    }

    /**
     * Set numeric field SALGEN using a BigDecimal value.
     */
    public void setSALGEN(BigDecimal newvalue) {
        fieldSALGEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SALGEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalSALGEN() {
        return fieldSALGEN.getBigDecimal();
    }

}
