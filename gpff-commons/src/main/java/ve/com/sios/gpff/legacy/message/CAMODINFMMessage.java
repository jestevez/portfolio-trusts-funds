package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from CAMODINFM physical file
 * definition.
 * 
* File level identifier is 1140216203933. Record format level identifier is
 * 31B3113536A28.
 */
public class CAMODINFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "INVEMP",
        "INVDEL",
        "INVCLI",
        "INVNOP",
        "SEL",
        "INVVAL",
        "INVINI",
        "INVVTO",
        "INVVNO",
        "INVPOP",
        "CODCLI",
        "NOMCLI",
        "INVCLA",
        "VALCAP",
        "INVEFI",
        "INV036",
        "INVBAD",
        "CLANUE",
        "FECHAC"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "INVEMP",
        "INVDEL",
        "INVCLI",
        "INVNOP",
        "SEL",
        "INVVAL",
        "INVINI",
        "INVVTO",
        "INVVNO",
        "INVPOP",
        "CODCLI",
        "NOMCLI",
        "INVCLA",
        "VALCAP",
        "INVEFI",
        "INV036",
        "INVBAD",
        "CLANUE",
        "FECHAC"
    };
    final static String fid = "1140216203933";
    final static String rid = "31B3113536A28";
    final static String fmtname = "CAMODINFM";
    final int FIELDCOUNT = 28;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldINVEMP = null;
    private CharacterField fieldINVDEL = null;
    private DecimalField fieldINVCLI = null;
    private DecimalField fieldINVNOP = null;
    private CharacterField fieldSEL = null;
    private CharacterField fieldINVVAL = null;
    private DecimalField fieldINVINI = null;
    private DecimalField fieldINVVTO = null;
    private DecimalField fieldINVVNO = null;
    private DecimalField fieldINVPOP = null;
    private DecimalField fieldCODCLI = null;
    private CharacterField fieldNOMCLI = null;
    private CharacterField fieldINVCLA = null;
    private DecimalField fieldVALCAP = null;
    private DecimalField fieldINVEFI = null;
    private CharacterField fieldINV036 = null;
    private DecimalField fieldINVBAD = null;
    private CharacterField fieldCLANUE = null;
    private DecimalField fieldFECHAC = null;

    /**
     * Constructor for CAMODINFMMessage.
     */
    public CAMODINFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 334;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldINVEMP
                = new CharacterField(message, HEADERSIZE + 161, 2, "INVEMP");
        fields[10] = fieldINVDEL
                = new CharacterField(message, HEADERSIZE + 163, 2, "INVDEL");
        fields[11] = fieldINVCLI
                = new DecimalField(message, HEADERSIZE + 165, 8, 0, "INVCLI");
        fields[12] = fieldINVNOP
                = new DecimalField(message, HEADERSIZE + 173, 11, 0, "INVNOP");
        fields[13] = fieldSEL
                = new CharacterField(message, HEADERSIZE + 184, 1, "SEL");
        fields[14] = fieldINVVAL
                = new CharacterField(message, HEADERSIZE + 185, 12, "INVVAL");
        fields[15] = fieldINVINI
                = new DecimalField(message, HEADERSIZE + 197, 7, 0, "INVINI");
        fields[16] = fieldINVVTO
                = new DecimalField(message, HEADERSIZE + 204, 7, 0, "INVVTO");
        fields[17] = fieldINVVNO
                = new DecimalField(message, HEADERSIZE + 211, 17, 2, "INVVNO");
        fields[18] = fieldINVPOP
                = new DecimalField(message, HEADERSIZE + 228, 11, 6, "INVPOP");
        fields[19] = fieldCODCLI
                = new DecimalField(message, HEADERSIZE + 239, 8, 0, "CODCLI");
        fields[20] = fieldNOMCLI
                = new CharacterField(message, HEADERSIZE + 247, 39, "NOMCLI");
        fields[21] = fieldINVCLA
                = new CharacterField(message, HEADERSIZE + 286, 3, "INVCLA");
        fields[22] = fieldVALCAP
                = new DecimalField(message, HEADERSIZE + 289, 17, 2, "VALCAP");
        fields[23] = fieldINVEFI
                = new DecimalField(message, HEADERSIZE + 306, 15, 2, "INVEFI");
        fields[24] = fieldINV036
                = new CharacterField(message, HEADERSIZE + 321, 1, "INV036");
        fields[25] = fieldINVBAD
                = new DecimalField(message, HEADERSIZE + 322, 2, 0, "INVBAD");
        fields[26] = fieldCLANUE
                = new CharacterField(message, HEADERSIZE + 324, 3, "CLANUE");
        fields[27] = fieldFECHAC
                = new DecimalField(message, HEADERSIZE + 327, 7, 0, "FECHAC");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field INVEMP using a String value.
     */
    public void setINVEMP(String newvalue) {
        fieldINVEMP.setString(newvalue);
    }

    /**
     * Get value of field INVEMP as a String.
     */
    public String getINVEMP() {
        return fieldINVEMP.getString();
    }

    /**
     * Set field INVDEL using a String value.
     */
    public void setINVDEL(String newvalue) {
        fieldINVDEL.setString(newvalue);
    }

    /**
     * Get value of field INVDEL as a String.
     */
    public String getINVDEL() {
        return fieldINVDEL.getString();
    }

    /**
     * Set field INVCLI using a String value.
     */
    public void setINVCLI(String newvalue) {
        fieldINVCLI.setString(newvalue);
    }

    /**
     * Get value of field INVCLI as a String.
     */
    public String getINVCLI() {
        return fieldINVCLI.getString();
    }

    /**
     * Set numeric field INVCLI using a BigDecimal value.
     */
    public void setINVCLI(BigDecimal newvalue) {
        fieldINVCLI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVCLI as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVCLI() {
        return fieldINVCLI.getBigDecimal();
    }

    /**
     * Set field INVNOP using a String value.
     */
    public void setINVNOP(String newvalue) {
        fieldINVNOP.setString(newvalue);
    }

    /**
     * Get value of field INVNOP as a String.
     */
    public String getINVNOP() {
        return fieldINVNOP.getString();
    }

    /**
     * Set numeric field INVNOP using a BigDecimal value.
     */
    public void setINVNOP(BigDecimal newvalue) {
        fieldINVNOP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVNOP as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVNOP() {
        return fieldINVNOP.getBigDecimal();
    }

    /**
     * Set field SEL using a String value.
     */
    public void setSEL(String newvalue) {
        fieldSEL.setString(newvalue);
    }

    /**
     * Get value of field SEL as a String.
     */
    public String getSEL() {
        return fieldSEL.getString();
    }

    /**
     * Set field INVVAL using a String value.
     */
    public void setINVVAL(String newvalue) {
        fieldINVVAL.setString(newvalue);
    }

    /**
     * Get value of field INVVAL as a String.
     */
    public String getINVVAL() {
        return fieldINVVAL.getString();
    }

    /**
     * Set field INVINI using a String value.
     */
    public void setINVINI(String newvalue) {
        fieldINVINI.setString(newvalue);
    }

    /**
     * Get value of field INVINI as a String.
     */
    public String getINVINI() {
        return fieldINVINI.getString();
    }

    /**
     * Set numeric field INVINI using a BigDecimal value.
     */
    public void setINVINI(BigDecimal newvalue) {
        fieldINVINI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVINI as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVINI() {
        return fieldINVINI.getBigDecimal();
    }

    /**
     * Set field INVVTO using a String value.
     */
    public void setINVVTO(String newvalue) {
        fieldINVVTO.setString(newvalue);
    }

    /**
     * Get value of field INVVTO as a String.
     */
    public String getINVVTO() {
        return fieldINVVTO.getString();
    }

    /**
     * Set numeric field INVVTO using a BigDecimal value.
     */
    public void setINVVTO(BigDecimal newvalue) {
        fieldINVVTO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVVTO as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVVTO() {
        return fieldINVVTO.getBigDecimal();
    }

    /**
     * Set field INVVNO using a String value.
     */
    public void setINVVNO(String newvalue) {
        fieldINVVNO.setString(newvalue);
    }

    /**
     * Get value of field INVVNO as a String.
     */
    public String getINVVNO() {
        return fieldINVVNO.getString();
    }

    /**
     * Set numeric field INVVNO using a BigDecimal value.
     */
    public void setINVVNO(BigDecimal newvalue) {
        fieldINVVNO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVVNO as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVVNO() {
        return fieldINVVNO.getBigDecimal();
    }

    /**
     * Set field INVPOP using a String value.
     */
    public void setINVPOP(String newvalue) {
        fieldINVPOP.setString(newvalue);
    }

    /**
     * Get value of field INVPOP as a String.
     */
    public String getINVPOP() {
        return fieldINVPOP.getString();
    }

    /**
     * Set numeric field INVPOP using a BigDecimal value.
     */
    public void setINVPOP(BigDecimal newvalue) {
        fieldINVPOP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVPOP as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVPOP() {
        return fieldINVPOP.getBigDecimal();
    }

    /**
     * Set field CODCLI using a String value.
     */
    public void setCODCLI(String newvalue) {
        fieldCODCLI.setString(newvalue);
    }

    /**
     * Get value of field CODCLI as a String.
     */
    public String getCODCLI() {
        return fieldCODCLI.getString();
    }

    /**
     * Set numeric field CODCLI using a BigDecimal value.
     */
    public void setCODCLI(BigDecimal newvalue) {
        fieldCODCLI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CODCLI as a BigDecimal.
     */
    public BigDecimal getBigDecimalCODCLI() {
        return fieldCODCLI.getBigDecimal();
    }

    /**
     * Set field NOMCLI using a String value.
     */
    public void setNOMCLI(String newvalue) {
        fieldNOMCLI.setString(newvalue);
    }

    /**
     * Get value of field NOMCLI as a String.
     */
    public String getNOMCLI() {
        return fieldNOMCLI.getString();
    }

    /**
     * Set field INVCLA using a String value.
     */
    public void setINVCLA(String newvalue) {
        fieldINVCLA.setString(newvalue);
    }

    /**
     * Get value of field INVCLA as a String.
     */
    public String getINVCLA() {
        return fieldINVCLA.getString();
    }

    /**
     * Set field VALCAP using a String value.
     */
    public void setVALCAP(String newvalue) {
        fieldVALCAP.setString(newvalue);
    }

    /**
     * Get value of field VALCAP as a String.
     */
    public String getVALCAP() {
        return fieldVALCAP.getString();
    }

    /**
     * Set numeric field VALCAP using a BigDecimal value.
     */
    public void setVALCAP(BigDecimal newvalue) {
        fieldVALCAP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field VALCAP as a BigDecimal.
     */
    public BigDecimal getBigDecimalVALCAP() {
        return fieldVALCAP.getBigDecimal();
    }

    /**
     * Set field INVEFI using a String value.
     */
    public void setINVEFI(String newvalue) {
        fieldINVEFI.setString(newvalue);
    }

    /**
     * Get value of field INVEFI as a String.
     */
    public String getINVEFI() {
        return fieldINVEFI.getString();
    }

    /**
     * Set numeric field INVEFI using a BigDecimal value.
     */
    public void setINVEFI(BigDecimal newvalue) {
        fieldINVEFI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVEFI as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVEFI() {
        return fieldINVEFI.getBigDecimal();
    }

    /**
     * Set field INV036 using a String value.
     */
    public void setINV036(String newvalue) {
        fieldINV036.setString(newvalue);
    }

    /**
     * Get value of field INV036 as a String.
     */
    public String getINV036() {
        return fieldINV036.getString();
    }

    /**
     * Set field INVBAD using a String value.
     */
    public void setINVBAD(String newvalue) {
        fieldINVBAD.setString(newvalue);
    }

    /**
     * Get value of field INVBAD as a String.
     */
    public String getINVBAD() {
        return fieldINVBAD.getString();
    }

    /**
     * Set numeric field INVBAD using a BigDecimal value.
     */
    public void setINVBAD(BigDecimal newvalue) {
        fieldINVBAD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field INVBAD as a BigDecimal.
     */
    public BigDecimal getBigDecimalINVBAD() {
        return fieldINVBAD.getBigDecimal();
    }

    /**
     * Set field CLANUE using a String value.
     */
    public void setCLANUE(String newvalue) {
        fieldCLANUE.setString(newvalue);
    }

    /**
     * Get value of field CLANUE as a String.
     */
    public String getCLANUE() {
        return fieldCLANUE.getString();
    }

    /**
     * Set field FECHAC using a String value.
     */
    public void setFECHAC(String newvalue) {
        fieldFECHAC.setString(newvalue);
    }

    /**
     * Get value of field FECHAC as a String.
     */
    public String getFECHAC() {
        return fieldFECHAC.getString();
    }

    /**
     * Set numeric field FECHAC using a BigDecimal value.
     */
    public void setFECHAC(BigDecimal newvalue) {
        fieldFECHAC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECHAC as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECHAC() {
        return fieldFECHAC.getBigDecimal();
    }

}
