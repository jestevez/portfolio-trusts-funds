package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from CLIEN1FM physical file
 * definition.
 * 
* File level identifier is 1140215075757. Record format level identifier is
 * 3F733E9658F56.
 */
public class CLIEN1FMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "OPCION",
        "REGCUR",
        "CAMCUR",
        "CUR",
        "CLICLA",
        "CLINIF",
        "CLIASO",
        "FECNAC",
        "CLINOM",
        "CLIAPE",
        "CLIAP2",
        "CLICAL",
        "CLIDI1",
        "CLIDI2",
        "CLIPOS1",
        "CLIPOS2",
        "CLIPOS3",
        "CLIPRO",
        "CLIPAI",
        "CLIPOB",
        "CLIGES",
        "GESNOM",
        "CLITC1",
        "TICNOM",
        "CLICLS",
        "CLSTXT",
        "CLISEX",
        "SEXTXT",
        "CLITEL",
        "CLITE2",
        "CLITE3",
        "CLIFAX",
        "CLIFA2",
        "CLIFA3",
        "CLITC2",
        "NOMDIV",
        "CLIRES",
        "CLICOR",
        "CLITCO",
        "CLIEXC",
        "CLIUSU",
        "CLIOBS",
        "CLIDPR",
        "CLIVOZ",
        "SEX",
        "SEL",
        "SEL1"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "OPCION",
        "REGCUR",
        "CAMCUR",
        "CUR",
        "CLICLA",
        "CLINIF",
        "CLIASO",
        "FECNAC",
        "CLINOM",
        "CLIAPE",
        "CLIAP2",
        "CLICAL",
        "CLIDI1",
        "CLIDI2",
        "CLIPOS1",
        "CLIPOS2",
        "CLIPOS3",
        "CLIPRO",
        "CLIPAI",
        "CLIPOB",
        "CLIGES",
        "GESNOM",
        "CLITC1",
        "TICNOM",
        "CLICLS",
        "CLSTXT",
        "CLISEX",
        "SEXTXT",
        "CLITEL",
        "CLITE2",
        "CLITE3",
        "CLIFAX",
        "CLIFA2",
        "CLIFA3",
        "CLITC2",
        "NOMDIV",
        "CLIRES",
        "CLICOR",
        "CLITCO",
        "CLIEXC",
        "CLIUSU",
        "CLIOBS",
        "CLIDPR",
        "CLIVOZ",
        "SEX",
        "SEL",
        "SEL1"
    };
    final static String fid = "1140215075757";
    final static String rid = "3F733E9658F56";
    final static String fmtname = "CLIEN1FM";
    final int FIELDCOUNT = 56;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private DecimalField fieldOPCION = null;
    private CharacterField fieldREGCUR = null;
    private CharacterField fieldCAMCUR = null;
    private DecimalField fieldCUR = null;
    private DecimalField fieldCLICLA = null;
    private CharacterField fieldCLINIF = null;
    private DecimalField fieldCLIASO = null;
    private DecimalField fieldFECNAC = null;
    private CharacterField fieldCLINOM = null;
    private CharacterField fieldCLIAPE = null;
    private CharacterField fieldCLIAP2 = null;
    private CharacterField fieldCLICAL = null;
    private CharacterField fieldCLIDI1 = null;
    private CharacterField fieldCLIDI2 = null;
    private DecimalField fieldCLIPOS1 = null;
    private DecimalField fieldCLIPOS2 = null;
    private DecimalField fieldCLIPOS3 = null;
    private CharacterField fieldCLIPRO = null;
    private DecimalField fieldCLIPAI = null;
    private CharacterField fieldCLIPOB = null;
    private DecimalField fieldCLIGES = null;
    private CharacterField fieldGESNOM = null;
    private DecimalField fieldCLITC1 = null;
    private CharacterField fieldTICNOM = null;
    private DecimalField fieldCLICLS = null;
    private CharacterField fieldCLSTXT = null;
    private CharacterField fieldCLISEX = null;
    private CharacterField fieldSEXTXT = null;
    private DecimalField fieldCLITEL = null;
    private DecimalField fieldCLITE2 = null;
    private DecimalField fieldCLITE3 = null;
    private CharacterField fieldCLIFAX = null;
    private CharacterField fieldCLIFA2 = null;
    private CharacterField fieldCLIFA3 = null;
    private DecimalField fieldCLITC2 = null;
    private CharacterField fieldNOMDIV = null;
    private DecimalField fieldCLIRES = null;
    private DecimalField fieldCLICOR = null;
    private CharacterField fieldCLITCO = null;
    private CharacterField fieldCLIEXC = null;
    private CharacterField fieldCLIUSU = null;
    private CharacterField fieldCLIOBS = null;
    private CharacterField fieldCLIDPR = null;
    private DecimalField fieldCLIVOZ = null;
    private CharacterField fieldSEX = null;
    private CharacterField fieldSEL = null;
    private CharacterField fieldSEL1 = null;

    /**
     * Constructor for CLIEN1FMMessage.
     */
    public CLIEN1FMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 727;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldOPCION
                = new DecimalField(message, HEADERSIZE + 161, 3, 0, "OPCION");
        fields[10] = fieldREGCUR
                = new CharacterField(message, HEADERSIZE + 164, 10, "REGCUR");
        fields[11] = fieldCAMCUR
                = new CharacterField(message, HEADERSIZE + 174, 10, "CAMCUR");
        fields[12] = fieldCUR
                = new DecimalField(message, HEADERSIZE + 184, 5, 0, "CUR");
        fields[13] = fieldCLICLA
                = new DecimalField(message, HEADERSIZE + 189, 8, 0, "CLICLA");
        fields[14] = fieldCLINIF
                = new CharacterField(message, HEADERSIZE + 197, 12, "CLINIF");
        fields[15] = fieldCLIASO
                = new DecimalField(message, HEADERSIZE + 209, 8, 0, "CLIASO");
        fields[16] = fieldFECNAC
                = new DecimalField(message, HEADERSIZE + 217, 7, 0, "FECNAC");
        fields[17] = fieldCLINOM
                = new CharacterField(message, HEADERSIZE + 224, 20, "CLINOM");
        fields[18] = fieldCLIAPE
                = new CharacterField(message, HEADERSIZE + 244, 15, "CLIAPE");
        fields[19] = fieldCLIAP2
                = new CharacterField(message, HEADERSIZE + 259, 15, "CLIAP2");
        fields[20] = fieldCLICAL
                = new CharacterField(message, HEADERSIZE + 274, 2, "CLICAL");
        fields[21] = fieldCLIDI1
                = new CharacterField(message, HEADERSIZE + 276, 30, "CLIDI1");
        fields[22] = fieldCLIDI2
                = new CharacterField(message, HEADERSIZE + 306, 30, "CLIDI2");
        fields[23] = fieldCLIPOS1
                = new DecimalField(message, HEADERSIZE + 336, 3, 0, "CLIPOS1");
        fields[24] = fieldCLIPOS2
                = new DecimalField(message, HEADERSIZE + 339, 3, 0, "CLIPOS2");
        fields[25] = fieldCLIPOS3
                = new DecimalField(message, HEADERSIZE + 342, 6, 0, "CLIPOS3");
        fields[26] = fieldCLIPRO
                = new CharacterField(message, HEADERSIZE + 348, 25, "CLIPRO");
        fields[27] = fieldCLIPAI
                = new DecimalField(message, HEADERSIZE + 373, 4, 0, "CLIPAI");
        fields[28] = fieldCLIPOB
                = new CharacterField(message, HEADERSIZE + 377, 27, "CLIPOB");
        fields[29] = fieldCLIGES
                = new DecimalField(message, HEADERSIZE + 404, 3, 0, "CLIGES");
        fields[30] = fieldGESNOM
                = new CharacterField(message, HEADERSIZE + 407, 40, "GESNOM");
        fields[31] = fieldCLITC1
                = new DecimalField(message, HEADERSIZE + 447, 3, 0, "CLITC1");
        fields[32] = fieldTICNOM
                = new CharacterField(message, HEADERSIZE + 450, 40, "TICNOM");
        fields[33] = fieldCLICLS
                = new DecimalField(message, HEADERSIZE + 490, 3, 0, "CLICLS");
        fields[34] = fieldCLSTXT
                = new CharacterField(message, HEADERSIZE + 493, 30, "CLSTXT");
        fields[35] = fieldCLISEX
                = new CharacterField(message, HEADERSIZE + 523, 1, "CLISEX");
        fields[36] = fieldSEXTXT
                = new CharacterField(message, HEADERSIZE + 524, 9, "SEXTXT");
        fields[37] = fieldCLITEL
                = new DecimalField(message, HEADERSIZE + 533, 11, 0, "CLITEL");
        fields[38] = fieldCLITE2
                = new DecimalField(message, HEADERSIZE + 544, 11, 0, "CLITE2");
        fields[39] = fieldCLITE3
                = new DecimalField(message, HEADERSIZE + 555, 11, 0, "CLITE3");
        fields[40] = fieldCLIFAX
                = new CharacterField(message, HEADERSIZE + 566, 15, "CLIFAX");
        fields[41] = fieldCLIFA2
                = new CharacterField(message, HEADERSIZE + 581, 15, "CLIFA2");
        fields[42] = fieldCLIFA3
                = new CharacterField(message, HEADERSIZE + 596, 15, "CLIFA3");
        fields[43] = fieldCLITC2
                = new DecimalField(message, HEADERSIZE + 611, 4, 0, "CLITC2");
        fields[44] = fieldNOMDIV
                = new CharacterField(message, HEADERSIZE + 615, 14, "NOMDIV");
        fields[45] = fieldCLIRES
                = new DecimalField(message, HEADERSIZE + 629, 2, 0, "CLIRES");
        fields[46] = fieldCLICOR
                = new DecimalField(message, HEADERSIZE + 631, 10, 0, "CLICOR");
        fields[47] = fieldCLITCO
                = new CharacterField(message, HEADERSIZE + 641, 1, "CLITCO");
        fields[48] = fieldCLIEXC
                = new CharacterField(message, HEADERSIZE + 642, 1, "CLIEXC");
        fields[49] = fieldCLIUSU
                = new CharacterField(message, HEADERSIZE + 643, 10, "CLIUSU");
        fields[50] = fieldCLIOBS
                = new CharacterField(message, HEADERSIZE + 653, 50, "CLIOBS");
        fields[51] = fieldCLIDPR
                = new CharacterField(message, HEADERSIZE + 703, 16, "CLIDPR");
        fields[52] = fieldCLIVOZ
                = new DecimalField(message, HEADERSIZE + 719, 5, 0, "CLIVOZ");
        fields[53] = fieldSEX
                = new CharacterField(message, HEADERSIZE + 724, 1, "SEX");
        fields[54] = fieldSEL
                = new CharacterField(message, HEADERSIZE + 725, 1, "SEL");
        fields[55] = fieldSEL1
                = new CharacterField(message, HEADERSIZE + 726, 1, "SEL1");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field OPCION using a String value.
     */
    public void setOPCION(String newvalue) {
        fieldOPCION.setString(newvalue);
    }

    /**
     * Get value of field OPCION as a String.
     */
    public String getOPCION() {
        return fieldOPCION.getString();
    }

    /**
     * Set numeric field OPCION using a BigDecimal value.
     */
    public void setOPCION(BigDecimal newvalue) {
        fieldOPCION.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPCION as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPCION() {
        return fieldOPCION.getBigDecimal();
    }

    /**
     * Set field REGCUR using a String value.
     */
    public void setREGCUR(String newvalue) {
        fieldREGCUR.setString(newvalue);
    }

    /**
     * Get value of field REGCUR as a String.
     */
    public String getREGCUR() {
        return fieldREGCUR.getString();
    }

    /**
     * Set field CAMCUR using a String value.
     */
    public void setCAMCUR(String newvalue) {
        fieldCAMCUR.setString(newvalue);
    }

    /**
     * Get value of field CAMCUR as a String.
     */
    public String getCAMCUR() {
        return fieldCAMCUR.getString();
    }

    /**
     * Set field CUR using a String value.
     */
    public void setCUR(String newvalue) {
        fieldCUR.setString(newvalue);
    }

    /**
     * Get value of field CUR as a String.
     */
    public String getCUR() {
        return fieldCUR.getString();
    }

    /**
     * Set numeric field CUR using a BigDecimal value.
     */
    public void setCUR(BigDecimal newvalue) {
        fieldCUR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CUR as a BigDecimal.
     */
    public BigDecimal getBigDecimalCUR() {
        return fieldCUR.getBigDecimal();
    }

    /**
     * Set field CLICLA using a String value.
     */
    public void setCLICLA(String newvalue) {
        fieldCLICLA.setString(newvalue);
    }

    /**
     * Get value of field CLICLA as a String.
     */
    public String getCLICLA() {
        return fieldCLICLA.getString();
    }

    /**
     * Set numeric field CLICLA using a BigDecimal value.
     */
    public void setCLICLA(BigDecimal newvalue) {
        fieldCLICLA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLICLA as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLICLA() {
        return fieldCLICLA.getBigDecimal();
    }

    /**
     * Set field CLINIF using a String value.
     */
    public void setCLINIF(String newvalue) {
        fieldCLINIF.setString(newvalue);
    }

    /**
     * Get value of field CLINIF as a String.
     */
    public String getCLINIF() {
        return fieldCLINIF.getString();
    }

    /**
     * Set field CLIASO using a String value.
     */
    public void setCLIASO(String newvalue) {
        fieldCLIASO.setString(newvalue);
    }

    /**
     * Get value of field CLIASO as a String.
     */
    public String getCLIASO() {
        return fieldCLIASO.getString();
    }

    /**
     * Set numeric field CLIASO using a BigDecimal value.
     */
    public void setCLIASO(BigDecimal newvalue) {
        fieldCLIASO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIASO as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIASO() {
        return fieldCLIASO.getBigDecimal();
    }

    /**
     * Set field FECNAC using a String value.
     */
    public void setFECNAC(String newvalue) {
        fieldFECNAC.setString(newvalue);
    }

    /**
     * Get value of field FECNAC as a String.
     */
    public String getFECNAC() {
        return fieldFECNAC.getString();
    }

    /**
     * Set numeric field FECNAC using a BigDecimal value.
     */
    public void setFECNAC(BigDecimal newvalue) {
        fieldFECNAC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECNAC as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECNAC() {
        return fieldFECNAC.getBigDecimal();
    }

    /**
     * Set field CLINOM using a String value.
     */
    public void setCLINOM(String newvalue) {
        fieldCLINOM.setString(newvalue);
    }

    /**
     * Get value of field CLINOM as a String.
     */
    public String getCLINOM() {
        return fieldCLINOM.getString();
    }

    /**
     * Set field CLIAPE using a String value.
     */
    public void setCLIAPE(String newvalue) {
        fieldCLIAPE.setString(newvalue);
    }

    /**
     * Get value of field CLIAPE as a String.
     */
    public String getCLIAPE() {
        return fieldCLIAPE.getString();
    }

    /**
     * Set field CLIAP2 using a String value.
     */
    public void setCLIAP2(String newvalue) {
        fieldCLIAP2.setString(newvalue);
    }

    /**
     * Get value of field CLIAP2 as a String.
     */
    public String getCLIAP2() {
        return fieldCLIAP2.getString();
    }

    /**
     * Set field CLICAL using a String value.
     */
    public void setCLICAL(String newvalue) {
        fieldCLICAL.setString(newvalue);
    }

    /**
     * Get value of field CLICAL as a String.
     */
    public String getCLICAL() {
        return fieldCLICAL.getString();
    }

    /**
     * Set field CLIDI1 using a String value.
     */
    public void setCLIDI1(String newvalue) {
        fieldCLIDI1.setString(newvalue);
    }

    /**
     * Get value of field CLIDI1 as a String.
     */
    public String getCLIDI1() {
        return fieldCLIDI1.getString();
    }

    /**
     * Set field CLIDI2 using a String value.
     */
    public void setCLIDI2(String newvalue) {
        fieldCLIDI2.setString(newvalue);
    }

    /**
     * Get value of field CLIDI2 as a String.
     */
    public String getCLIDI2() {
        return fieldCLIDI2.getString();
    }

    /**
     * Set field CLIPOS1 using a String value.
     */
    public void setCLIPOS1(String newvalue) {
        fieldCLIPOS1.setString(newvalue);
    }

    /**
     * Get value of field CLIPOS1 as a String.
     */
    public String getCLIPOS1() {
        return fieldCLIPOS1.getString();
    }

    /**
     * Set numeric field CLIPOS1 using a BigDecimal value.
     */
    public void setCLIPOS1(BigDecimal newvalue) {
        fieldCLIPOS1.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIPOS1 as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIPOS1() {
        return fieldCLIPOS1.getBigDecimal();
    }

    /**
     * Set field CLIPOS2 using a String value.
     */
    public void setCLIPOS2(String newvalue) {
        fieldCLIPOS2.setString(newvalue);
    }

    /**
     * Get value of field CLIPOS2 as a String.
     */
    public String getCLIPOS2() {
        return fieldCLIPOS2.getString();
    }

    /**
     * Set numeric field CLIPOS2 using a BigDecimal value.
     */
    public void setCLIPOS2(BigDecimal newvalue) {
        fieldCLIPOS2.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIPOS2 as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIPOS2() {
        return fieldCLIPOS2.getBigDecimal();
    }

    /**
     * Set field CLIPOS3 using a String value.
     */
    public void setCLIPOS3(String newvalue) {
        fieldCLIPOS3.setString(newvalue);
    }

    /**
     * Get value of field CLIPOS3 as a String.
     */
    public String getCLIPOS3() {
        return fieldCLIPOS3.getString();
    }

    /**
     * Set numeric field CLIPOS3 using a BigDecimal value.
     */
    public void setCLIPOS3(BigDecimal newvalue) {
        fieldCLIPOS3.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIPOS3 as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIPOS3() {
        return fieldCLIPOS3.getBigDecimal();
    }

    /**
     * Set field CLIPRO using a String value.
     */
    public void setCLIPRO(String newvalue) {
        fieldCLIPRO.setString(newvalue);
    }

    /**
     * Get value of field CLIPRO as a String.
     */
    public String getCLIPRO() {
        return fieldCLIPRO.getString();
    }

    /**
     * Set field CLIPAI using a String value.
     */
    public void setCLIPAI(String newvalue) {
        fieldCLIPAI.setString(newvalue);
    }

    /**
     * Get value of field CLIPAI as a String.
     */
    public String getCLIPAI() {
        return fieldCLIPAI.getString();
    }

    /**
     * Set numeric field CLIPAI using a BigDecimal value.
     */
    public void setCLIPAI(BigDecimal newvalue) {
        fieldCLIPAI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIPAI as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIPAI() {
        return fieldCLIPAI.getBigDecimal();
    }

    /**
     * Set field CLIPOB using a String value.
     */
    public void setCLIPOB(String newvalue) {
        fieldCLIPOB.setString(newvalue);
    }

    /**
     * Get value of field CLIPOB as a String.
     */
    public String getCLIPOB() {
        return fieldCLIPOB.getString();
    }

    /**
     * Set field CLIGES using a String value.
     */
    public void setCLIGES(String newvalue) {
        fieldCLIGES.setString(newvalue);
    }

    /**
     * Get value of field CLIGES as a String.
     */
    public String getCLIGES() {
        return fieldCLIGES.getString();
    }

    /**
     * Set numeric field CLIGES using a BigDecimal value.
     */
    public void setCLIGES(BigDecimal newvalue) {
        fieldCLIGES.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIGES as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIGES() {
        return fieldCLIGES.getBigDecimal();
    }

    /**
     * Set field GESNOM using a String value.
     */
    public void setGESNOM(String newvalue) {
        fieldGESNOM.setString(newvalue);
    }

    /**
     * Get value of field GESNOM as a String.
     */
    public String getGESNOM() {
        return fieldGESNOM.getString();
    }

    /**
     * Set field CLITC1 using a String value.
     */
    public void setCLITC1(String newvalue) {
        fieldCLITC1.setString(newvalue);
    }

    /**
     * Get value of field CLITC1 as a String.
     */
    public String getCLITC1() {
        return fieldCLITC1.getString();
    }

    /**
     * Set numeric field CLITC1 using a BigDecimal value.
     */
    public void setCLITC1(BigDecimal newvalue) {
        fieldCLITC1.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLITC1 as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLITC1() {
        return fieldCLITC1.getBigDecimal();
    }

    /**
     * Set field TICNOM using a String value.
     */
    public void setTICNOM(String newvalue) {
        fieldTICNOM.setString(newvalue);
    }

    /**
     * Get value of field TICNOM as a String.
     */
    public String getTICNOM() {
        return fieldTICNOM.getString();
    }

    /**
     * Set field CLICLS using a String value.
     */
    public void setCLICLS(String newvalue) {
        fieldCLICLS.setString(newvalue);
    }

    /**
     * Get value of field CLICLS as a String.
     */
    public String getCLICLS() {
        return fieldCLICLS.getString();
    }

    /**
     * Set numeric field CLICLS using a BigDecimal value.
     */
    public void setCLICLS(BigDecimal newvalue) {
        fieldCLICLS.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLICLS as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLICLS() {
        return fieldCLICLS.getBigDecimal();
    }

    /**
     * Set field CLSTXT using a String value.
     */
    public void setCLSTXT(String newvalue) {
        fieldCLSTXT.setString(newvalue);
    }

    /**
     * Get value of field CLSTXT as a String.
     */
    public String getCLSTXT() {
        return fieldCLSTXT.getString();
    }

    /**
     * Set field CLISEX using a String value.
     */
    public void setCLISEX(String newvalue) {
        fieldCLISEX.setString(newvalue);
    }

    /**
     * Get value of field CLISEX as a String.
     */
    public String getCLISEX() {
        return fieldCLISEX.getString();
    }

    /**
     * Set field SEXTXT using a String value.
     */
    public void setSEXTXT(String newvalue) {
        fieldSEXTXT.setString(newvalue);
    }

    /**
     * Get value of field SEXTXT as a String.
     */
    public String getSEXTXT() {
        return fieldSEXTXT.getString();
    }

    /**
     * Set field CLITEL using a String value.
     */
    public void setCLITEL(String newvalue) {
        fieldCLITEL.setString(newvalue);
    }

    /**
     * Get value of field CLITEL as a String.
     */
    public String getCLITEL() {
        return fieldCLITEL.getString();
    }

    /**
     * Set numeric field CLITEL using a BigDecimal value.
     */
    public void setCLITEL(BigDecimal newvalue) {
        fieldCLITEL.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLITEL as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLITEL() {
        return fieldCLITEL.getBigDecimal();
    }

    /**
     * Set field CLITE2 using a String value.
     */
    public void setCLITE2(String newvalue) {
        fieldCLITE2.setString(newvalue);
    }

    /**
     * Get value of field CLITE2 as a String.
     */
    public String getCLITE2() {
        return fieldCLITE2.getString();
    }

    /**
     * Set numeric field CLITE2 using a BigDecimal value.
     */
    public void setCLITE2(BigDecimal newvalue) {
        fieldCLITE2.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLITE2 as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLITE2() {
        return fieldCLITE2.getBigDecimal();
    }

    /**
     * Set field CLITE3 using a String value.
     */
    public void setCLITE3(String newvalue) {
        fieldCLITE3.setString(newvalue);
    }

    /**
     * Get value of field CLITE3 as a String.
     */
    public String getCLITE3() {
        return fieldCLITE3.getString();
    }

    /**
     * Set numeric field CLITE3 using a BigDecimal value.
     */
    public void setCLITE3(BigDecimal newvalue) {
        fieldCLITE3.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLITE3 as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLITE3() {
        return fieldCLITE3.getBigDecimal();
    }

    /**
     * Set field CLIFAX using a String value.
     */
    public void setCLIFAX(String newvalue) {
        fieldCLIFAX.setString(newvalue);
    }

    /**
     * Get value of field CLIFAX as a String.
     */
    public String getCLIFAX() {
        return fieldCLIFAX.getString();
    }

    /**
     * Set field CLIFA2 using a String value.
     */
    public void setCLIFA2(String newvalue) {
        fieldCLIFA2.setString(newvalue);
    }

    /**
     * Get value of field CLIFA2 as a String.
     */
    public String getCLIFA2() {
        return fieldCLIFA2.getString();
    }

    /**
     * Set field CLIFA3 using a String value.
     */
    public void setCLIFA3(String newvalue) {
        fieldCLIFA3.setString(newvalue);
    }

    /**
     * Get value of field CLIFA3 as a String.
     */
    public String getCLIFA3() {
        return fieldCLIFA3.getString();
    }

    /**
     * Set field CLITC2 using a String value.
     */
    public void setCLITC2(String newvalue) {
        fieldCLITC2.setString(newvalue);
    }

    /**
     * Get value of field CLITC2 as a String.
     */
    public String getCLITC2() {
        return fieldCLITC2.getString();
    }

    /**
     * Set numeric field CLITC2 using a BigDecimal value.
     */
    public void setCLITC2(BigDecimal newvalue) {
        fieldCLITC2.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLITC2 as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLITC2() {
        return fieldCLITC2.getBigDecimal();
    }

    /**
     * Set field NOMDIV using a String value.
     */
    public void setNOMDIV(String newvalue) {
        fieldNOMDIV.setString(newvalue);
    }

    /**
     * Get value of field NOMDIV as a String.
     */
    public String getNOMDIV() {
        return fieldNOMDIV.getString();
    }

    /**
     * Set field CLIRES using a String value.
     */
    public void setCLIRES(String newvalue) {
        fieldCLIRES.setString(newvalue);
    }

    /**
     * Get value of field CLIRES as a String.
     */
    public String getCLIRES() {
        return fieldCLIRES.getString();
    }

    /**
     * Set numeric field CLIRES using a BigDecimal value.
     */
    public void setCLIRES(BigDecimal newvalue) {
        fieldCLIRES.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIRES as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIRES() {
        return fieldCLIRES.getBigDecimal();
    }

    /**
     * Set field CLICOR using a String value.
     */
    public void setCLICOR(String newvalue) {
        fieldCLICOR.setString(newvalue);
    }

    /**
     * Get value of field CLICOR as a String.
     */
    public String getCLICOR() {
        return fieldCLICOR.getString();
    }

    /**
     * Set numeric field CLICOR using a BigDecimal value.
     */
    public void setCLICOR(BigDecimal newvalue) {
        fieldCLICOR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLICOR as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLICOR() {
        return fieldCLICOR.getBigDecimal();
    }

    /**
     * Set field CLITCO using a String value.
     */
    public void setCLITCO(String newvalue) {
        fieldCLITCO.setString(newvalue);
    }

    /**
     * Get value of field CLITCO as a String.
     */
    public String getCLITCO() {
        return fieldCLITCO.getString();
    }

    /**
     * Set field CLIEXC using a String value.
     */
    public void setCLIEXC(String newvalue) {
        fieldCLIEXC.setString(newvalue);
    }

    /**
     * Get value of field CLIEXC as a String.
     */
    public String getCLIEXC() {
        return fieldCLIEXC.getString();
    }

    /**
     * Set field CLIUSU using a String value.
     */
    public void setCLIUSU(String newvalue) {
        fieldCLIUSU.setString(newvalue);
    }

    /**
     * Get value of field CLIUSU as a String.
     */
    public String getCLIUSU() {
        return fieldCLIUSU.getString();
    }

    /**
     * Set field CLIOBS using a String value.
     */
    public void setCLIOBS(String newvalue) {
        fieldCLIOBS.setString(newvalue);
    }

    /**
     * Get value of field CLIOBS as a String.
     */
    public String getCLIOBS() {
        return fieldCLIOBS.getString();
    }

    /**
     * Set field CLIDPR using a String value.
     */
    public void setCLIDPR(String newvalue) {
        fieldCLIDPR.setString(newvalue);
    }

    /**
     * Get value of field CLIDPR as a String.
     */
    public String getCLIDPR() {
        return fieldCLIDPR.getString();
    }

    /**
     * Set field CLIVOZ using a String value.
     */
    public void setCLIVOZ(String newvalue) {
        fieldCLIVOZ.setString(newvalue);
    }

    /**
     * Get value of field CLIVOZ as a String.
     */
    public String getCLIVOZ() {
        return fieldCLIVOZ.getString();
    }

    /**
     * Set numeric field CLIVOZ using a BigDecimal value.
     */
    public void setCLIVOZ(BigDecimal newvalue) {
        fieldCLIVOZ.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLIVOZ as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLIVOZ() {
        return fieldCLIVOZ.getBigDecimal();
    }

    /**
     * Set field SEX using a String value.
     */
    public void setSEX(String newvalue) {
        fieldSEX.setString(newvalue);
    }

    /**
     * Get value of field SEX as a String.
     */
    public String getSEX() {
        return fieldSEX.getString();
    }

    /**
     * Set field SEL using a String value.
     */
    public void setSEL(String newvalue) {
        fieldSEL.setString(newvalue);
    }

    /**
     * Get value of field SEL as a String.
     */
    public String getSEL() {
        return fieldSEL.getString();
    }

    /**
     * Set field SEL1 using a String value.
     */
    public void setSEL1(String newvalue) {
        fieldSEL1.setString(newvalue);
    }

    /**
     * Get value of field SEL1 as a String.
     */
    public String getSEL1() {
        return fieldSEL1.getString();
    }

}
