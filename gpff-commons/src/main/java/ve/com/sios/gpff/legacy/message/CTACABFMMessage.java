package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from CTACABFM physical file
 * definition.
 * 
* File level identifier is 1140315131328. Record format level identifier is
 * 4637398742000.
 */
public class CTACABFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "ARDESD",
        "ARHAST",
        "FECDES",
        "FECHAS",
        "CTAVIE",
        "NOMVIE",
        "CTADEB",
        "NOMDEB",
        "CTAHAB",
        "NOMHAB"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "ARDESD",
        "ARHAST",
        "FECDES",
        "FECHAS",
        "CTAVIE",
        "NOMVIE",
        "CTADEB",
        "NOMDEB",
        "CTAHAB",
        "NOMHAB"
    };
    final static String fid = "1140315131328";
    final static String rid = "4637398742000";
    final static String fmtname = "CTACABFM";
    final int FIELDCOUNT = 19;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldARDESD = null;
    private CharacterField fieldARHAST = null;
    private DecimalField fieldFECDES = null;
    private DecimalField fieldFECHAS = null;
    private DecimalField fieldCTAVIE = null;
    private CharacterField fieldNOMVIE = null;
    private DecimalField fieldCTADEB = null;
    private CharacterField fieldNOMDEB = null;
    private DecimalField fieldCTAHAB = null;
    private CharacterField fieldNOMHAB = null;

    /**
     * Constructor for CTACABFMMessage.
     */
    public CTACABFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 315;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldARDESD
                = new CharacterField(message, HEADERSIZE + 161, 4, "ARDESD");
        fields[10] = fieldARHAST
                = new CharacterField(message, HEADERSIZE + 165, 4, "ARHAST");
        fields[11] = fieldFECDES
                = new DecimalField(message, HEADERSIZE + 169, 7, 0, "FECDES");
        fields[12] = fieldFECHAS
                = new DecimalField(message, HEADERSIZE + 176, 7, 0, "FECHAS");
        fields[13] = fieldCTAVIE
                = new DecimalField(message, HEADERSIZE + 183, 4, 0, "CTAVIE");
        fields[14] = fieldNOMVIE
                = new CharacterField(message, HEADERSIZE + 187, 40, "NOMVIE");
        fields[15] = fieldCTADEB
                = new DecimalField(message, HEADERSIZE + 227, 4, 0, "CTADEB");
        fields[16] = fieldNOMDEB
                = new CharacterField(message, HEADERSIZE + 231, 40, "NOMDEB");
        fields[17] = fieldCTAHAB
                = new DecimalField(message, HEADERSIZE + 271, 4, 0, "CTAHAB");
        fields[18] = fieldNOMHAB
                = new CharacterField(message, HEADERSIZE + 275, 40, "NOMHAB");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field ARDESD using a String value.
     */
    public void setARDESD(String newvalue) {
        fieldARDESD.setString(newvalue);
    }

    /**
     * Get value of field ARDESD as a String.
     */
    public String getARDESD() {
        return fieldARDESD.getString();
    }

    /**
     * Set field ARHAST using a String value.
     */
    public void setARHAST(String newvalue) {
        fieldARHAST.setString(newvalue);
    }

    /**
     * Get value of field ARHAST as a String.
     */
    public String getARHAST() {
        return fieldARHAST.getString();
    }

    /**
     * Set field FECDES using a String value.
     */
    public void setFECDES(String newvalue) {
        fieldFECDES.setString(newvalue);
    }

    /**
     * Get value of field FECDES as a String.
     */
    public String getFECDES() {
        return fieldFECDES.getString();
    }

    /**
     * Set numeric field FECDES using a BigDecimal value.
     */
    public void setFECDES(BigDecimal newvalue) {
        fieldFECDES.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECDES as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECDES() {
        return fieldFECDES.getBigDecimal();
    }

    /**
     * Set field FECHAS using a String value.
     */
    public void setFECHAS(String newvalue) {
        fieldFECHAS.setString(newvalue);
    }

    /**
     * Get value of field FECHAS as a String.
     */
    public String getFECHAS() {
        return fieldFECHAS.getString();
    }

    /**
     * Set numeric field FECHAS using a BigDecimal value.
     */
    public void setFECHAS(BigDecimal newvalue) {
        fieldFECHAS.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECHAS as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECHAS() {
        return fieldFECHAS.getBigDecimal();
    }

    /**
     * Set field CTAVIE using a String value.
     */
    public void setCTAVIE(String newvalue) {
        fieldCTAVIE.setString(newvalue);
    }

    /**
     * Get value of field CTAVIE as a String.
     */
    public String getCTAVIE() {
        return fieldCTAVIE.getString();
    }

    /**
     * Set numeric field CTAVIE using a BigDecimal value.
     */
    public void setCTAVIE(BigDecimal newvalue) {
        fieldCTAVIE.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CTAVIE as a BigDecimal.
     */
    public BigDecimal getBigDecimalCTAVIE() {
        return fieldCTAVIE.getBigDecimal();
    }

    /**
     * Set field NOMVIE using a String value.
     */
    public void setNOMVIE(String newvalue) {
        fieldNOMVIE.setString(newvalue);
    }

    /**
     * Get value of field NOMVIE as a String.
     */
    public String getNOMVIE() {
        return fieldNOMVIE.getString();
    }

    /**
     * Set field CTADEB using a String value.
     */
    public void setCTADEB(String newvalue) {
        fieldCTADEB.setString(newvalue);
    }

    /**
     * Get value of field CTADEB as a String.
     */
    public String getCTADEB() {
        return fieldCTADEB.getString();
    }

    /**
     * Set numeric field CTADEB using a BigDecimal value.
     */
    public void setCTADEB(BigDecimal newvalue) {
        fieldCTADEB.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CTADEB as a BigDecimal.
     */
    public BigDecimal getBigDecimalCTADEB() {
        return fieldCTADEB.getBigDecimal();
    }

    /**
     * Set field NOMDEB using a String value.
     */
    public void setNOMDEB(String newvalue) {
        fieldNOMDEB.setString(newvalue);
    }

    /**
     * Get value of field NOMDEB as a String.
     */
    public String getNOMDEB() {
        return fieldNOMDEB.getString();
    }

    /**
     * Set field CTAHAB using a String value.
     */
    public void setCTAHAB(String newvalue) {
        fieldCTAHAB.setString(newvalue);
    }

    /**
     * Get value of field CTAHAB as a String.
     */
    public String getCTAHAB() {
        return fieldCTAHAB.getString();
    }

    /**
     * Set numeric field CTAHAB using a BigDecimal value.
     */
    public void setCTAHAB(BigDecimal newvalue) {
        fieldCTAHAB.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CTAHAB as a BigDecimal.
     */
    public BigDecimal getBigDecimalCTAHAB() {
        return fieldCTAHAB.getBigDecimal();
    }

    /**
     * Set field NOMHAB using a String value.
     */
    public void setNOMHAB(String newvalue) {
        fieldNOMHAB.setString(newvalue);
    }

    /**
     * Get value of field NOMHAB as a String.
     */
    public String getNOMHAB() {
        return fieldNOMHAB.getString();
    }

}
