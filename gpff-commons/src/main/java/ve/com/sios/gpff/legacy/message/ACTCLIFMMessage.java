package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from ACTCLIFM physical file
 * definition.
 * 
* File level identifier is 1140322120709. Record format level identifier is
 * 45B310DD5A2E3.
 */
public class ACTCLIFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "REGCUR",
        "CAMCUR",
        "POSCUR",
        "CLINIF",
        "FECAP",
        "NOMBRE",
        "CLVTOA",
        "CLVTON",
        "CLVTOP",
        "CLVTOG",
        "CLVTOB",
        "EMBARG",
        "CLVTOI",
        "CLVTOD",
        "FINPAR",
        "CAMACT",
        "FINCOM",
        "FINREN",
        "FINCAM"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "REGCUR",
        "CAMCUR",
        "POSCUR",
        "CLINIF",
        "FECAP",
        "NOMBRE",
        "CLVTOA",
        "CLVTON",
        "CLVTOP",
        "CLVTOG",
        "CLVTOB",
        "EMBARG",
        "CLVTOI",
        "CLVTOD",
        "FINPAR",
        "CAMACT",
        "FINCOM",
        "FINREN",
        "FINCAM"
    };
    final static String fid = "1140322120709";
    final static String rid = "45B310DD5A2E3";
    final static String fmtname = "ACTCLIFM";
    final int FIELDCOUNT = 28;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldREGCUR = null;
    private CharacterField fieldCAMCUR = null;
    private DecimalField fieldPOSCUR = null;
    private CharacterField fieldCLINIF = null;
    private DecimalField fieldFECAP = null;
    private CharacterField fieldNOMBRE = null;
    private DecimalField fieldCLVTOA = null;
    private DecimalField fieldCLVTON = null;
    private DecimalField fieldCLVTOP = null;
    private DecimalField fieldCLVTOG = null;
    private DecimalField fieldCLVTOB = null;
    private DecimalField fieldEMBARG = null;
    private DecimalField fieldCLVTOI = null;
    private DecimalField fieldCLVTOD = null;
    private DecimalField fieldFINPAR = null;
    private DecimalField fieldCAMACT = null;
    private DecimalField fieldFINCOM = null;
    private DecimalField fieldFINREN = null;
    private DecimalField fieldFINCAM = null;

    /**
     * Constructor for ACTCLIFMMessage.
     */
    public ACTCLIFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 488;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldREGCUR
                = new CharacterField(message, HEADERSIZE + 161, 10, "REGCUR");
        fields[10] = fieldCAMCUR
                = new CharacterField(message, HEADERSIZE + 171, 10, "CAMCUR");
        fields[11] = fieldPOSCUR
                = new DecimalField(message, HEADERSIZE + 181, 5, 0, "POSCUR");
        fields[12] = fieldCLINIF
                = new CharacterField(message, HEADERSIZE + 186, 12, "CLINIF");
        fields[13] = fieldFECAP
                = new DecimalField(message, HEADERSIZE + 198, 7, 0, "FECAP");
        fields[14] = fieldNOMBRE
                = new CharacterField(message, HEADERSIZE + 205, 50, "NOMBRE");
        fields[15] = fieldCLVTOA
                = new DecimalField(message, HEADERSIZE + 255, 17, 2, "CLVTOA");
        fields[16] = fieldCLVTON
                = new DecimalField(message, HEADERSIZE + 272, 17, 2, "CLVTON");
        fields[17] = fieldCLVTOP
                = new DecimalField(message, HEADERSIZE + 289, 17, 2, "CLVTOP");
        fields[18] = fieldCLVTOG
                = new DecimalField(message, HEADERSIZE + 306, 17, 2, "CLVTOG");
        fields[19] = fieldCLVTOB
                = new DecimalField(message, HEADERSIZE + 323, 17, 2, "CLVTOB");
        fields[20] = fieldEMBARG
                = new DecimalField(message, HEADERSIZE + 340, 17, 2, "EMBARG");
        fields[21] = fieldCLVTOI
                = new DecimalField(message, HEADERSIZE + 357, 17, 2, "CLVTOI");
        fields[22] = fieldCLVTOD
                = new DecimalField(message, HEADERSIZE + 374, 17, 2, "CLVTOD");
        fields[23] = fieldFINPAR
                = new DecimalField(message, HEADERSIZE + 391, 29, 7, "FINPAR");
        fields[24] = fieldCAMACT
                = new DecimalField(message, HEADERSIZE + 420, 17, 7, "CAMACT");
        fields[25] = fieldFINCOM
                = new DecimalField(message, HEADERSIZE + 437, 17, 2, "FINCOM");
        fields[26] = fieldFINREN
                = new DecimalField(message, HEADERSIZE + 454, 17, 2, "FINREN");
        fields[27] = fieldFINCAM
                = new DecimalField(message, HEADERSIZE + 471, 17, 7, "FINCAM");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field REGCUR using a String value.
     */
    public void setREGCUR(String newvalue) {
        fieldREGCUR.setString(newvalue);
    }

    /**
     * Get value of field REGCUR as a String.
     */
    public String getREGCUR() {
        return fieldREGCUR.getString();
    }

    /**
     * Set field CAMCUR using a String value.
     */
    public void setCAMCUR(String newvalue) {
        fieldCAMCUR.setString(newvalue);
    }

    /**
     * Get value of field CAMCUR as a String.
     */
    public String getCAMCUR() {
        return fieldCAMCUR.getString();
    }

    /**
     * Set field POSCUR using a String value.
     */
    public void setPOSCUR(String newvalue) {
        fieldPOSCUR.setString(newvalue);
    }

    /**
     * Get value of field POSCUR as a String.
     */
    public String getPOSCUR() {
        return fieldPOSCUR.getString();
    }

    /**
     * Set numeric field POSCUR using a BigDecimal value.
     */
    public void setPOSCUR(BigDecimal newvalue) {
        fieldPOSCUR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field POSCUR as a BigDecimal.
     */
    public BigDecimal getBigDecimalPOSCUR() {
        return fieldPOSCUR.getBigDecimal();
    }

    /**
     * Set field CLINIF using a String value.
     */
    public void setCLINIF(String newvalue) {
        fieldCLINIF.setString(newvalue);
    }

    /**
     * Get value of field CLINIF as a String.
     */
    public String getCLINIF() {
        return fieldCLINIF.getString();
    }

    /**
     * Set field FECAP using a String value.
     */
    public void setFECAP(String newvalue) {
        fieldFECAP.setString(newvalue);
    }

    /**
     * Get value of field FECAP as a String.
     */
    public String getFECAP() {
        return fieldFECAP.getString();
    }

    /**
     * Set numeric field FECAP using a BigDecimal value.
     */
    public void setFECAP(BigDecimal newvalue) {
        fieldFECAP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECAP as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECAP() {
        return fieldFECAP.getBigDecimal();
    }

    /**
     * Set field NOMBRE using a String value.
     */
    public void setNOMBRE(String newvalue) {
        fieldNOMBRE.setString(newvalue);
    }

    /**
     * Get value of field NOMBRE as a String.
     */
    public String getNOMBRE() {
        return fieldNOMBRE.getString();
    }

    /**
     * Set field CLVTOA using a String value.
     */
    public void setCLVTOA(String newvalue) {
        fieldCLVTOA.setString(newvalue);
    }

    /**
     * Get value of field CLVTOA as a String.
     */
    public String getCLVTOA() {
        return fieldCLVTOA.getString();
    }

    /**
     * Set numeric field CLVTOA using a BigDecimal value.
     */
    public void setCLVTOA(BigDecimal newvalue) {
        fieldCLVTOA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOA as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOA() {
        return fieldCLVTOA.getBigDecimal();
    }

    /**
     * Set field CLVTON using a String value.
     */
    public void setCLVTON(String newvalue) {
        fieldCLVTON.setString(newvalue);
    }

    /**
     * Get value of field CLVTON as a String.
     */
    public String getCLVTON() {
        return fieldCLVTON.getString();
    }

    /**
     * Set numeric field CLVTON using a BigDecimal value.
     */
    public void setCLVTON(BigDecimal newvalue) {
        fieldCLVTON.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTON as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTON() {
        return fieldCLVTON.getBigDecimal();
    }

    /**
     * Set field CLVTOP using a String value.
     */
    public void setCLVTOP(String newvalue) {
        fieldCLVTOP.setString(newvalue);
    }

    /**
     * Get value of field CLVTOP as a String.
     */
    public String getCLVTOP() {
        return fieldCLVTOP.getString();
    }

    /**
     * Set numeric field CLVTOP using a BigDecimal value.
     */
    public void setCLVTOP(BigDecimal newvalue) {
        fieldCLVTOP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOP as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOP() {
        return fieldCLVTOP.getBigDecimal();
    }

    /**
     * Set field CLVTOG using a String value.
     */
    public void setCLVTOG(String newvalue) {
        fieldCLVTOG.setString(newvalue);
    }

    /**
     * Get value of field CLVTOG as a String.
     */
    public String getCLVTOG() {
        return fieldCLVTOG.getString();
    }

    /**
     * Set numeric field CLVTOG using a BigDecimal value.
     */
    public void setCLVTOG(BigDecimal newvalue) {
        fieldCLVTOG.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOG as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOG() {
        return fieldCLVTOG.getBigDecimal();
    }

    /**
     * Set field CLVTOB using a String value.
     */
    public void setCLVTOB(String newvalue) {
        fieldCLVTOB.setString(newvalue);
    }

    /**
     * Get value of field CLVTOB as a String.
     */
    public String getCLVTOB() {
        return fieldCLVTOB.getString();
    }

    /**
     * Set numeric field CLVTOB using a BigDecimal value.
     */
    public void setCLVTOB(BigDecimal newvalue) {
        fieldCLVTOB.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOB as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOB() {
        return fieldCLVTOB.getBigDecimal();
    }

    /**
     * Set field EMBARG using a String value.
     */
    public void setEMBARG(String newvalue) {
        fieldEMBARG.setString(newvalue);
    }

    /**
     * Get value of field EMBARG as a String.
     */
    public String getEMBARG() {
        return fieldEMBARG.getString();
    }

    /**
     * Set numeric field EMBARG using a BigDecimal value.
     */
    public void setEMBARG(BigDecimal newvalue) {
        fieldEMBARG.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field EMBARG as a BigDecimal.
     */
    public BigDecimal getBigDecimalEMBARG() {
        return fieldEMBARG.getBigDecimal();
    }

    /**
     * Set field CLVTOI using a String value.
     */
    public void setCLVTOI(String newvalue) {
        fieldCLVTOI.setString(newvalue);
    }

    /**
     * Get value of field CLVTOI as a String.
     */
    public String getCLVTOI() {
        return fieldCLVTOI.getString();
    }

    /**
     * Set numeric field CLVTOI using a BigDecimal value.
     */
    public void setCLVTOI(BigDecimal newvalue) {
        fieldCLVTOI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOI as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOI() {
        return fieldCLVTOI.getBigDecimal();
    }

    /**
     * Set field CLVTOD using a String value.
     */
    public void setCLVTOD(String newvalue) {
        fieldCLVTOD.setString(newvalue);
    }

    /**
     * Get value of field CLVTOD as a String.
     */
    public String getCLVTOD() {
        return fieldCLVTOD.getString();
    }

    /**
     * Set numeric field CLVTOD using a BigDecimal value.
     */
    public void setCLVTOD(BigDecimal newvalue) {
        fieldCLVTOD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOD as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOD() {
        return fieldCLVTOD.getBigDecimal();
    }

    /**
     * Set field FINPAR using a String value.
     */
    public void setFINPAR(String newvalue) {
        fieldFINPAR.setString(newvalue);
    }

    /**
     * Get value of field FINPAR as a String.
     */
    public String getFINPAR() {
        return fieldFINPAR.getString();
    }

    /**
     * Set numeric field FINPAR using a BigDecimal value.
     */
    public void setFINPAR(BigDecimal newvalue) {
        fieldFINPAR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FINPAR as a BigDecimal.
     */
    public BigDecimal getBigDecimalFINPAR() {
        return fieldFINPAR.getBigDecimal();
    }

    /**
     * Set field CAMACT using a String value.
     */
    public void setCAMACT(String newvalue) {
        fieldCAMACT.setString(newvalue);
    }

    /**
     * Get value of field CAMACT as a String.
     */
    public String getCAMACT() {
        return fieldCAMACT.getString();
    }

    /**
     * Set numeric field CAMACT using a BigDecimal value.
     */
    public void setCAMACT(BigDecimal newvalue) {
        fieldCAMACT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CAMACT as a BigDecimal.
     */
    public BigDecimal getBigDecimalCAMACT() {
        return fieldCAMACT.getBigDecimal();
    }

    /**
     * Set field FINCOM using a String value.
     */
    public void setFINCOM(String newvalue) {
        fieldFINCOM.setString(newvalue);
    }

    /**
     * Get value of field FINCOM as a String.
     */
    public String getFINCOM() {
        return fieldFINCOM.getString();
    }

    /**
     * Set numeric field FINCOM using a BigDecimal value.
     */
    public void setFINCOM(BigDecimal newvalue) {
        fieldFINCOM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FINCOM as a BigDecimal.
     */
    public BigDecimal getBigDecimalFINCOM() {
        return fieldFINCOM.getBigDecimal();
    }

    /**
     * Set field FINREN using a String value.
     */
    public void setFINREN(String newvalue) {
        fieldFINREN.setString(newvalue);
    }

    /**
     * Get value of field FINREN as a String.
     */
    public String getFINREN() {
        return fieldFINREN.getString();
    }

    /**
     * Set numeric field FINREN using a BigDecimal value.
     */
    public void setFINREN(BigDecimal newvalue) {
        fieldFINREN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FINREN as a BigDecimal.
     */
    public BigDecimal getBigDecimalFINREN() {
        return fieldFINREN.getBigDecimal();
    }

    /**
     * Set field FINCAM using a String value.
     */
    public void setFINCAM(String newvalue) {
        fieldFINCAM.setString(newvalue);
    }

    /**
     * Get value of field FINCAM as a String.
     */
    public String getFINCAM() {
        return fieldFINCAM.getString();
    }

    /**
     * Set numeric field FINCAM using a BigDecimal value.
     */
    public void setFINCAM(BigDecimal newvalue) {
        fieldFINCAM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FINCAM as a BigDecimal.
     */
    public BigDecimal getBigDecimalFINCAM() {
        return fieldFINCAM.getBigDecimal();
    }

}
