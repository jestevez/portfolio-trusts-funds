package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from CONFBEFM physical file
 * definition.
 * 
* File level identifier is 1140322160421. Record format level identifier is
 * 4C9D4BA8BD4DE.
 */
public class CONFBEFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "SEL",
        "CLVNIF",
        "NOMBRE",
        "FECAUX",
        "CLVTOD",
        "CLAV1",
        "FIDMON",
        "TIPO",
        "ACCE01",
        "POSI01",
        "FIDTIP",
        "FECAP",
        "XXVTOA",
        "CLVTOP",
        "CLVTOA",
        "CLVTOB",
        "XXPAGA",
        "CLCTOA",
        "CLVTOI",
        "CLVTOG",
        "CLVTON",
        "EMBARG",
        "AUXMNT",
        "ANO001",
        "WOCON",
        "XXBENE"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "SEL",
        "CLVNIF",
        "NOMBRE",
        "FECAUX",
        "CLVTOD",
        "CLAV1",
        "FIDMON",
        "TIPO",
        "ACCE01",
        "POSI01",
        "FIDTIP",
        "FECAP",
        "XXVTOA",
        "CLVTOP",
        "CLVTOA",
        "CLVTOB",
        "XXPAGA",
        "CLCTOA",
        "CLVTOI",
        "CLVTOG",
        "CLVTON",
        "EMBARG",
        "AUXMNT",
        "ANO001",
        "WOCON",
        "XXBENE"
    };
    final static String fid = "1140322160421";
    final static String rid = "4C9D4BA8BD4DE";
    final static String fmtname = "CONFBEFM";
    final int FIELDCOUNT = 35;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldSEL = null;
    private CharacterField fieldCLVNIF = null;
    private CharacterField fieldNOMBRE = null;
    private DecimalField fieldFECAUX = null;
    private DecimalField fieldCLVTOD = null;
    private CharacterField fieldCLAV1 = null;
    private CharacterField fieldFIDMON = null;
    private CharacterField fieldTIPO = null;
    private CharacterField fieldACCE01 = null;
    private CharacterField fieldPOSI01 = null;
    private DecimalField fieldFIDTIP = null;
    private DecimalField fieldFECAP = null;
    private DecimalField fieldXXVTOA = null;
    private DecimalField fieldCLVTOP = null;
    private DecimalField fieldCLVTOA = null;
    private DecimalField fieldCLVTOB = null;
    private DecimalField fieldXXPAGA = null;
    private DecimalField fieldCLCTOA = null;
    private DecimalField fieldCLVTOI = null;
    private DecimalField fieldCLVTOG = null;
    private DecimalField fieldCLVTON = null;
    private DecimalField fieldEMBARG = null;
    private DecimalField fieldAUXMNT = null;
    private DecimalField fieldANO001 = null;
    private DecimalField fieldWOCON = null;
    private DecimalField fieldXXBENE = null;

    /**
     * Constructor for CONFBEFMMessage.
     */
    public CONFBEFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 538;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldSEL
                = new CharacterField(message, HEADERSIZE + 161, 1, "SEL");
        fields[10] = fieldCLVNIF
                = new CharacterField(message, HEADERSIZE + 162, 12, "CLVNIF");
        fields[11] = fieldNOMBRE
                = new CharacterField(message, HEADERSIZE + 174, 30, "NOMBRE");
        fields[12] = fieldFECAUX
                = new DecimalField(message, HEADERSIZE + 204, 7, 0, "FECAUX");
        fields[13] = fieldCLVTOD
                = new DecimalField(message, HEADERSIZE + 211, 17, 2, "CLVTOD");
        fields[14] = fieldCLAV1
                = new CharacterField(message, HEADERSIZE + 228, 4, "CLAV1");
        fields[15] = fieldFIDMON
                = new CharacterField(message, HEADERSIZE + 232, 40, "FIDMON");
        fields[16] = fieldTIPO
                = new CharacterField(message, HEADERSIZE + 272, 20, "TIPO");
        fields[17] = fieldACCE01
                = new CharacterField(message, HEADERSIZE + 292, 12, "ACCE01");
        fields[18] = fieldPOSI01
                = new CharacterField(message, HEADERSIZE + 304, 12, "POSI01");
        fields[19] = fieldFIDTIP
                = new DecimalField(message, HEADERSIZE + 316, 3, 0, "FIDTIP");
        fields[20] = fieldFECAP
                = new DecimalField(message, HEADERSIZE + 319, 7, 0, "FECAP");
        fields[21] = fieldXXVTOA
                = new DecimalField(message, HEADERSIZE + 326, 17, 2, "XXVTOA");
        fields[22] = fieldCLVTOP
                = new DecimalField(message, HEADERSIZE + 343, 17, 2, "CLVTOP");
        fields[23] = fieldCLVTOA
                = new DecimalField(message, HEADERSIZE + 360, 17, 2, "CLVTOA");
        fields[24] = fieldCLVTOB
                = new DecimalField(message, HEADERSIZE + 377, 17, 2, "CLVTOB");
        fields[25] = fieldXXPAGA
                = new DecimalField(message, HEADERSIZE + 394, 17, 2, "XXPAGA");
        fields[26] = fieldCLCTOA
                = new DecimalField(message, HEADERSIZE + 411, 17, 2, "CLCTOA");
        fields[27] = fieldCLVTOI
                = new DecimalField(message, HEADERSIZE + 428, 17, 2, "CLVTOI");
        fields[28] = fieldCLVTOG
                = new DecimalField(message, HEADERSIZE + 445, 17, 2, "CLVTOG");
        fields[29] = fieldCLVTON
                = new DecimalField(message, HEADERSIZE + 462, 17, 2, "CLVTON");
        fields[30] = fieldEMBARG
                = new DecimalField(message, HEADERSIZE + 479, 17, 2, "EMBARG");
        fields[31] = fieldAUXMNT
                = new DecimalField(message, HEADERSIZE + 496, 17, 2, "AUXMNT");
        fields[32] = fieldANO001
                = new DecimalField(message, HEADERSIZE + 513, 5, 0, "ANO001");
        fields[33] = fieldWOCON
                = new DecimalField(message, HEADERSIZE + 518, 3, 0, "WOCON");
        fields[34] = fieldXXBENE
                = new DecimalField(message, HEADERSIZE + 521, 17, 2, "XXBENE");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field SEL using a String value.
     */
    public void setSEL(String newvalue) {
        fieldSEL.setString(newvalue);
    }

    /**
     * Get value of field SEL as a String.
     */
    public String getSEL() {
        return fieldSEL.getString();
    }

    /**
     * Set field CLVNIF using a String value.
     */
    public void setCLVNIF(String newvalue) {
        fieldCLVNIF.setString(newvalue);
    }

    /**
     * Get value of field CLVNIF as a String.
     */
    public String getCLVNIF() {
        return fieldCLVNIF.getString();
    }

    /**
     * Set field NOMBRE using a String value.
     */
    public void setNOMBRE(String newvalue) {
        fieldNOMBRE.setString(newvalue);
    }

    /**
     * Get value of field NOMBRE as a String.
     */
    public String getNOMBRE() {
        return fieldNOMBRE.getString();
    }

    /**
     * Set field FECAUX using a String value.
     */
    public void setFECAUX(String newvalue) {
        fieldFECAUX.setString(newvalue);
    }

    /**
     * Get value of field FECAUX as a String.
     */
    public String getFECAUX() {
        return fieldFECAUX.getString();
    }

    /**
     * Set numeric field FECAUX using a BigDecimal value.
     */
    public void setFECAUX(BigDecimal newvalue) {
        fieldFECAUX.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECAUX as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECAUX() {
        return fieldFECAUX.getBigDecimal();
    }

    /**
     * Set field CLVTOD using a String value.
     */
    public void setCLVTOD(String newvalue) {
        fieldCLVTOD.setString(newvalue);
    }

    /**
     * Get value of field CLVTOD as a String.
     */
    public String getCLVTOD() {
        return fieldCLVTOD.getString();
    }

    /**
     * Set numeric field CLVTOD using a BigDecimal value.
     */
    public void setCLVTOD(BigDecimal newvalue) {
        fieldCLVTOD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOD as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOD() {
        return fieldCLVTOD.getBigDecimal();
    }

    /**
     * Set field CLAV1 using a String value.
     */
    public void setCLAV1(String newvalue) {
        fieldCLAV1.setString(newvalue);
    }

    /**
     * Get value of field CLAV1 as a String.
     */
    public String getCLAV1() {
        return fieldCLAV1.getString();
    }

    /**
     * Set field FIDMON using a String value.
     */
    public void setFIDMON(String newvalue) {
        fieldFIDMON.setString(newvalue);
    }

    /**
     * Get value of field FIDMON as a String.
     */
    public String getFIDMON() {
        return fieldFIDMON.getString();
    }

    /**
     * Set field TIPO using a String value.
     */
    public void setTIPO(String newvalue) {
        fieldTIPO.setString(newvalue);
    }

    /**
     * Get value of field TIPO as a String.
     */
    public String getTIPO() {
        return fieldTIPO.getString();
    }

    /**
     * Set field ACCE01 using a String value.
     */
    public void setACCE01(String newvalue) {
        fieldACCE01.setString(newvalue);
    }

    /**
     * Get value of field ACCE01 as a String.
     */
    public String getACCE01() {
        return fieldACCE01.getString();
    }

    /**
     * Set field POSI01 using a String value.
     */
    public void setPOSI01(String newvalue) {
        fieldPOSI01.setString(newvalue);
    }

    /**
     * Get value of field POSI01 as a String.
     */
    public String getPOSI01() {
        return fieldPOSI01.getString();
    }

    /**
     * Set field FIDTIP using a String value.
     */
    public void setFIDTIP(String newvalue) {
        fieldFIDTIP.setString(newvalue);
    }

    /**
     * Get value of field FIDTIP as a String.
     */
    public String getFIDTIP() {
        return fieldFIDTIP.getString();
    }

    /**
     * Set numeric field FIDTIP using a BigDecimal value.
     */
    public void setFIDTIP(BigDecimal newvalue) {
        fieldFIDTIP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FIDTIP as a BigDecimal.
     */
    public BigDecimal getBigDecimalFIDTIP() {
        return fieldFIDTIP.getBigDecimal();
    }

    /**
     * Set field FECAP using a String value.
     */
    public void setFECAP(String newvalue) {
        fieldFECAP.setString(newvalue);
    }

    /**
     * Get value of field FECAP as a String.
     */
    public String getFECAP() {
        return fieldFECAP.getString();
    }

    /**
     * Set numeric field FECAP using a BigDecimal value.
     */
    public void setFECAP(BigDecimal newvalue) {
        fieldFECAP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECAP as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECAP() {
        return fieldFECAP.getBigDecimal();
    }

    /**
     * Set field XXVTOA using a String value.
     */
    public void setXXVTOA(String newvalue) {
        fieldXXVTOA.setString(newvalue);
    }

    /**
     * Get value of field XXVTOA as a String.
     */
    public String getXXVTOA() {
        return fieldXXVTOA.getString();
    }

    /**
     * Set numeric field XXVTOA using a BigDecimal value.
     */
    public void setXXVTOA(BigDecimal newvalue) {
        fieldXXVTOA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field XXVTOA as a BigDecimal.
     */
    public BigDecimal getBigDecimalXXVTOA() {
        return fieldXXVTOA.getBigDecimal();
    }

    /**
     * Set field CLVTOP using a String value.
     */
    public void setCLVTOP(String newvalue) {
        fieldCLVTOP.setString(newvalue);
    }

    /**
     * Get value of field CLVTOP as a String.
     */
    public String getCLVTOP() {
        return fieldCLVTOP.getString();
    }

    /**
     * Set numeric field CLVTOP using a BigDecimal value.
     */
    public void setCLVTOP(BigDecimal newvalue) {
        fieldCLVTOP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOP as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOP() {
        return fieldCLVTOP.getBigDecimal();
    }

    /**
     * Set field CLVTOA using a String value.
     */
    public void setCLVTOA(String newvalue) {
        fieldCLVTOA.setString(newvalue);
    }

    /**
     * Get value of field CLVTOA as a String.
     */
    public String getCLVTOA() {
        return fieldCLVTOA.getString();
    }

    /**
     * Set numeric field CLVTOA using a BigDecimal value.
     */
    public void setCLVTOA(BigDecimal newvalue) {
        fieldCLVTOA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOA as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOA() {
        return fieldCLVTOA.getBigDecimal();
    }

    /**
     * Set field CLVTOB using a String value.
     */
    public void setCLVTOB(String newvalue) {
        fieldCLVTOB.setString(newvalue);
    }

    /**
     * Get value of field CLVTOB as a String.
     */
    public String getCLVTOB() {
        return fieldCLVTOB.getString();
    }

    /**
     * Set numeric field CLVTOB using a BigDecimal value.
     */
    public void setCLVTOB(BigDecimal newvalue) {
        fieldCLVTOB.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOB as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOB() {
        return fieldCLVTOB.getBigDecimal();
    }

    /**
     * Set field XXPAGA using a String value.
     */
    public void setXXPAGA(String newvalue) {
        fieldXXPAGA.setString(newvalue);
    }

    /**
     * Get value of field XXPAGA as a String.
     */
    public String getXXPAGA() {
        return fieldXXPAGA.getString();
    }

    /**
     * Set numeric field XXPAGA using a BigDecimal value.
     */
    public void setXXPAGA(BigDecimal newvalue) {
        fieldXXPAGA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field XXPAGA as a BigDecimal.
     */
    public BigDecimal getBigDecimalXXPAGA() {
        return fieldXXPAGA.getBigDecimal();
    }

    /**
     * Set field CLCTOA using a String value.
     */
    public void setCLCTOA(String newvalue) {
        fieldCLCTOA.setString(newvalue);
    }

    /**
     * Get value of field CLCTOA as a String.
     */
    public String getCLCTOA() {
        return fieldCLCTOA.getString();
    }

    /**
     * Set numeric field CLCTOA using a BigDecimal value.
     */
    public void setCLCTOA(BigDecimal newvalue) {
        fieldCLCTOA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLCTOA as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLCTOA() {
        return fieldCLCTOA.getBigDecimal();
    }

    /**
     * Set field CLVTOI using a String value.
     */
    public void setCLVTOI(String newvalue) {
        fieldCLVTOI.setString(newvalue);
    }

    /**
     * Get value of field CLVTOI as a String.
     */
    public String getCLVTOI() {
        return fieldCLVTOI.getString();
    }

    /**
     * Set numeric field CLVTOI using a BigDecimal value.
     */
    public void setCLVTOI(BigDecimal newvalue) {
        fieldCLVTOI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOI as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOI() {
        return fieldCLVTOI.getBigDecimal();
    }

    /**
     * Set field CLVTOG using a String value.
     */
    public void setCLVTOG(String newvalue) {
        fieldCLVTOG.setString(newvalue);
    }

    /**
     * Get value of field CLVTOG as a String.
     */
    public String getCLVTOG() {
        return fieldCLVTOG.getString();
    }

    /**
     * Set numeric field CLVTOG using a BigDecimal value.
     */
    public void setCLVTOG(BigDecimal newvalue) {
        fieldCLVTOG.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTOG as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTOG() {
        return fieldCLVTOG.getBigDecimal();
    }

    /**
     * Set field CLVTON using a String value.
     */
    public void setCLVTON(String newvalue) {
        fieldCLVTON.setString(newvalue);
    }

    /**
     * Get value of field CLVTON as a String.
     */
    public String getCLVTON() {
        return fieldCLVTON.getString();
    }

    /**
     * Set numeric field CLVTON using a BigDecimal value.
     */
    public void setCLVTON(BigDecimal newvalue) {
        fieldCLVTON.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLVTON as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLVTON() {
        return fieldCLVTON.getBigDecimal();
    }

    /**
     * Set field EMBARG using a String value.
     */
    public void setEMBARG(String newvalue) {
        fieldEMBARG.setString(newvalue);
    }

    /**
     * Get value of field EMBARG as a String.
     */
    public String getEMBARG() {
        return fieldEMBARG.getString();
    }

    /**
     * Set numeric field EMBARG using a BigDecimal value.
     */
    public void setEMBARG(BigDecimal newvalue) {
        fieldEMBARG.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field EMBARG as a BigDecimal.
     */
    public BigDecimal getBigDecimalEMBARG() {
        return fieldEMBARG.getBigDecimal();
    }

    /**
     * Set field AUXMNT using a String value.
     */
    public void setAUXMNT(String newvalue) {
        fieldAUXMNT.setString(newvalue);
    }

    /**
     * Get value of field AUXMNT as a String.
     */
    public String getAUXMNT() {
        return fieldAUXMNT.getString();
    }

    /**
     * Set numeric field AUXMNT using a BigDecimal value.
     */
    public void setAUXMNT(BigDecimal newvalue) {
        fieldAUXMNT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AUXMNT as a BigDecimal.
     */
    public BigDecimal getBigDecimalAUXMNT() {
        return fieldAUXMNT.getBigDecimal();
    }

    /**
     * Set field ANO001 using a String value.
     */
    public void setANO001(String newvalue) {
        fieldANO001.setString(newvalue);
    }

    /**
     * Get value of field ANO001 as a String.
     */
    public String getANO001() {
        return fieldANO001.getString();
    }

    /**
     * Set numeric field ANO001 using a BigDecimal value.
     */
    public void setANO001(BigDecimal newvalue) {
        fieldANO001.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field ANO001 as a BigDecimal.
     */
    public BigDecimal getBigDecimalANO001() {
        return fieldANO001.getBigDecimal();
    }

    /**
     * Set field WOCON using a String value.
     */
    public void setWOCON(String newvalue) {
        fieldWOCON.setString(newvalue);
    }

    /**
     * Get value of field WOCON as a String.
     */
    public String getWOCON() {
        return fieldWOCON.getString();
    }

    /**
     * Set numeric field WOCON using a BigDecimal value.
     */
    public void setWOCON(BigDecimal newvalue) {
        fieldWOCON.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field WOCON as a BigDecimal.
     */
    public BigDecimal getBigDecimalWOCON() {
        return fieldWOCON.getBigDecimal();
    }

    /**
     * Set field XXBENE using a String value.
     */
    public void setXXBENE(String newvalue) {
        fieldXXBENE.setString(newvalue);
    }

    /**
     * Get value of field XXBENE as a String.
     */
    public String getXXBENE() {
        return fieldXXBENE.getString();
    }

    /**
     * Set numeric field XXBENE using a BigDecimal value.
     */
    public void setXXBENE(BigDecimal newvalue) {
        fieldXXBENE.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field XXBENE as a BigDecimal.
     */
    public BigDecimal getBigDecimalXXBENE() {
        return fieldXXBENE.getBigDecimal();
    }

}
