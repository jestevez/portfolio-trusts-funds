package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from PAGBENFM physical file
 * definition.
 * 
* File level identifier is 1140315200713. Record format level identifier is
 * 3E82DE936076A.
 */
public class PAGBENFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "NOMTAB",
        "AREA",
        "FIDNOM",
        "FECPAG",
        "FECREA",
        "CANTIDAD"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "NOMTAB",
        "AREA",
        "FIDNOM",
        "FECPAG",
        "FECREA",
        "CANTIDAD"
    };
    final static String fid = "1140315200713";
    final static String rid = "3E82DE936076A";
    final static String fmtname = "PAGBENFM";
    final int FIELDCOUNT = 15;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldNOMTAB = null;
    private CharacterField fieldAREA = null;
    private CharacterField fieldFIDNOM = null;
    private DecimalField fieldFECPAG = null;
    private DecimalField fieldFECREA = null;
    private DecimalField fieldCANTIDAD = null;

    /**
     * Constructor for PAGBENFMMessage.
     */
    public PAGBENFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 276;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldNOMTAB
                = new CharacterField(message, HEADERSIZE + 161, 40, "NOMTAB");
        fields[10] = fieldAREA
                = new CharacterField(message, HEADERSIZE + 201, 4, "AREA");
        fields[11] = fieldFIDNOM
                = new CharacterField(message, HEADERSIZE + 205, 40, "FIDNOM");
        fields[12] = fieldFECPAG
                = new DecimalField(message, HEADERSIZE + 245, 7, 0, "FECPAG");
        fields[13] = fieldFECREA
                = new DecimalField(message, HEADERSIZE + 252, 7, 0, "FECREA");
        fields[14] = fieldCANTIDAD
                = new DecimalField(message, HEADERSIZE + 259, 17, 2, "CANTIDAD");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field NOMTAB using a String value.
     */
    public void setNOMTAB(String newvalue) {
        fieldNOMTAB.setString(newvalue);
    }

    /**
     * Get value of field NOMTAB as a String.
     */
    public String getNOMTAB() {
        return fieldNOMTAB.getString();
    }

    /**
     * Set field AREA using a String value.
     */
    public void setAREA(String newvalue) {
        fieldAREA.setString(newvalue);
    }

    /**
     * Get value of field AREA as a String.
     */
    public String getAREA() {
        return fieldAREA.getString();
    }

    /**
     * Set field FIDNOM using a String value.
     */
    public void setFIDNOM(String newvalue) {
        fieldFIDNOM.setString(newvalue);
    }

    /**
     * Get value of field FIDNOM as a String.
     */
    public String getFIDNOM() {
        return fieldFIDNOM.getString();
    }

    /**
     * Set field FECPAG using a String value.
     */
    public void setFECPAG(String newvalue) {
        fieldFECPAG.setString(newvalue);
    }

    /**
     * Get value of field FECPAG as a String.
     */
    public String getFECPAG() {
        return fieldFECPAG.getString();
    }

    /**
     * Set numeric field FECPAG using a BigDecimal value.
     */
    public void setFECPAG(BigDecimal newvalue) {
        fieldFECPAG.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECPAG as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECPAG() {
        return fieldFECPAG.getBigDecimal();
    }

    /**
     * Set field FECREA using a String value.
     */
    public void setFECREA(String newvalue) {
        fieldFECREA.setString(newvalue);
    }

    /**
     * Get value of field FECREA as a String.
     */
    public String getFECREA() {
        return fieldFECREA.getString();
    }

    /**
     * Set numeric field FECREA using a BigDecimal value.
     */
    public void setFECREA(BigDecimal newvalue) {
        fieldFECREA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECREA as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECREA() {
        return fieldFECREA.getBigDecimal();
    }

    /**
     * Set field CANTIDAD using a String value.
     */
    public void setCANTIDAD(String newvalue) {
        fieldCANTIDAD.setString(newvalue);
    }

    /**
     * Get value of field CANTIDAD as a String.
     */
    public String getCANTIDAD() {
        return fieldCANTIDAD.getString();
    }

    /**
     * Set numeric field CANTIDAD using a BigDecimal value.
     */
    public void setCANTIDAD(BigDecimal newvalue) {
        fieldCANTIDAD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CANTIDAD as a BigDecimal.
     */
    public BigDecimal getBigDecimalCANTIDAD() {
        return fieldCANTIDAD.getBigDecimal();
    }

}
