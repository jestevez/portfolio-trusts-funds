package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from ANARFIFM physical file
 * definition.
 * 
* File level identifier is 1140213203815. Record format level identifier is
 * 5B819A51C4D37.
 */
public class ANARFIFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "OPEEMP",
        "OPEDEL",
        "OPENUM",
        "OPC",
        "TXT",
        "BANOPE",
        "OPEMNT",
        "TIPTRA",
        "FIDNO2",
        "REGCUR",
        "CAMCUR",
        "POSCUR",
        "TABNOM",
        "CODFID",
        "FIDNO3",
        "FIDTXT",
        "FEC6DE",
        "FEC6HA",
        "BANOPC",
        "OP2FEC",
        "OP2FVL",
        "OPEREC",
        "OPECLI",
        "NOMAPP",
        "CIRIF",
        "DIVNO1",
        "OPECOM",
        "OPECTA",
        "OPEBAN",
        "TEXT2",
        "OPEUSU",
        "OPEOBS",
        "AP",
        "RE"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "OPEEMP",
        "OPEDEL",
        "OPENUM",
        "OPC",
        "TXT",
        "BANOPE",
        "OPEMNT",
        "TIPTRA",
        "FIDNO2",
        "REGCUR",
        "CAMCUR",
        "POSCUR",
        "TABNOM",
        "CODFID",
        "FIDNO3",
        "FIDTXT",
        "FEC6DE",
        "FEC6HA",
        "BANOPC",
        "OP2FEC",
        "OP2FVL",
        "OPEREC",
        "OPECLI",
        "NOMAPP",
        "CIRIF",
        "DIVNO1",
        "OPECOM",
        "OPECTA",
        "OPEBAN",
        "TEXT2",
        "OPEUSU",
        "OPEOBS",
        "AP",
        "RE"
    };
    final static String fid = "1140213203815";
    final static String rid = "5B819A51C4D37";
    final static String fmtname = "ANARFIFM";
    final int FIELDCOUNT = 43;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldOPEEMP = null;
    private CharacterField fieldOPEDEL = null;
    private DecimalField fieldOPENUM = null;
    private CharacterField fieldOPC = null;
    private CharacterField fieldTXT = null;
    private CharacterField fieldBANOPE = null;
    private DecimalField fieldOPEMNT = null;
    private CharacterField fieldTIPTRA = null;
    private CharacterField fieldFIDNO2 = null;
    private CharacterField fieldREGCUR = null;
    private CharacterField fieldCAMCUR = null;
    private DecimalField fieldPOSCUR = null;
    private CharacterField fieldTABNOM = null;
    private CharacterField fieldCODFID = null;
    private CharacterField fieldFIDNO3 = null;
    private CharacterField fieldFIDTXT = null;
    private DecimalField fieldFEC6DE = null;
    private DecimalField fieldFEC6HA = null;
    private CharacterField fieldBANOPC = null;
    private DecimalField fieldOP2FEC = null;
    private DecimalField fieldOP2FVL = null;
    private DecimalField fieldOPEREC = null;
    private DecimalField fieldOPECLI = null;
    private CharacterField fieldNOMAPP = null;
    private CharacterField fieldCIRIF = null;
    private CharacterField fieldDIVNO1 = null;
    private DecimalField fieldOPECOM = null;
    private CharacterField fieldOPECTA = null;
    private CharacterField fieldOPEBAN = null;
    private CharacterField fieldTEXT2 = null;
    private CharacterField fieldOPEUSU = null;
    private CharacterField fieldOPEOBS = null;
    private CharacterField fieldAP = null;
    private CharacterField fieldRE = null;

    /**
     * Constructor for ANARFIFMMessage.
     */
    public ANARFIFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 839;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldOPEEMP
                = new CharacterField(message, HEADERSIZE + 161, 2, "OPEEMP");
        fields[10] = fieldOPEDEL
                = new CharacterField(message, HEADERSIZE + 163, 2, "OPEDEL");
        fields[11] = fieldOPENUM
                = new DecimalField(message, HEADERSIZE + 165, 9, 0, "OPENUM");
        fields[12] = fieldOPC
                = new CharacterField(message, HEADERSIZE + 174, 1, "OPC");
        fields[13] = fieldTXT
                = new CharacterField(message, HEADERSIZE + 175, 2, "TXT");
        fields[14] = fieldBANOPE
                = new CharacterField(message, HEADERSIZE + 177, 12, "BANOPE");
        fields[15] = fieldOPEMNT
                = new DecimalField(message, HEADERSIZE + 189, 16, 2, "OPEMNT");
        fields[16] = fieldTIPTRA
                = new CharacterField(message, HEADERSIZE + 205, 20, "TIPTRA");
        fields[17] = fieldFIDNO2
                = new CharacterField(message, HEADERSIZE + 225, 20, "FIDNO2");
        fields[18] = fieldREGCUR
                = new CharacterField(message, HEADERSIZE + 245, 10, "REGCUR");
        fields[19] = fieldCAMCUR
                = new CharacterField(message, HEADERSIZE + 255, 10, "CAMCUR");
        fields[20] = fieldPOSCUR
                = new DecimalField(message, HEADERSIZE + 265, 5, 0, "POSCUR");
        fields[21] = fieldTABNOM
                = new CharacterField(message, HEADERSIZE + 270, 40, "TABNOM");
        fields[22] = fieldCODFID
                = new CharacterField(message, HEADERSIZE + 310, 4, "CODFID");
        fields[23] = fieldFIDNO3
                = new CharacterField(message, HEADERSIZE + 314, 40, "FIDNO3");
        fields[24] = fieldFIDTXT
                = new CharacterField(message, HEADERSIZE + 354, 14, "FIDTXT");
        fields[25] = fieldFEC6DE
                = new DecimalField(message, HEADERSIZE + 368, 7, 0, "FEC6DE");
        fields[26] = fieldFEC6HA
                = new DecimalField(message, HEADERSIZE + 375, 7, 0, "FEC6HA");
        fields[27] = fieldBANOPC
                = new CharacterField(message, HEADERSIZE + 382, 30, "BANOPC");
        fields[28] = fieldOP2FEC
                = new DecimalField(message, HEADERSIZE + 412, 7, 0, "OP2FEC");
        fields[29] = fieldOP2FVL
                = new DecimalField(message, HEADERSIZE + 419, 7, 0, "OP2FVL");
        fields[30] = fieldOPEREC
                = new DecimalField(message, HEADERSIZE + 426, 9, 0, "OPEREC");
        fields[31] = fieldOPECLI
                = new DecimalField(message, HEADERSIZE + 435, 8, 0, "OPECLI");
        fields[32] = fieldNOMAPP
                = new CharacterField(message, HEADERSIZE + 443, 50, "NOMAPP");
        fields[33] = fieldCIRIF
                = new CharacterField(message, HEADERSIZE + 493, 12, "CIRIF");
        fields[34] = fieldDIVNO1
                = new CharacterField(message, HEADERSIZE + 505, 40, "DIVNO1");
        fields[35] = fieldOPECOM
                = new DecimalField(message, HEADERSIZE + 545, 12, 2, "OPECOM");
        fields[36] = fieldOPECTA
                = new CharacterField(message, HEADERSIZE + 557, 20, "OPECTA");
        fields[37] = fieldOPEBAN
                = new CharacterField(message, HEADERSIZE + 577, 20, "OPEBAN");
        fields[38] = fieldTEXT2
                = new CharacterField(message, HEADERSIZE + 597, 30, "TEXT2");
        fields[39] = fieldOPEUSU
                = new CharacterField(message, HEADERSIZE + 627, 10, "OPEUSU");
        fields[40] = fieldOPEOBS
                = new CharacterField(message, HEADERSIZE + 637, 200, "OPEOBS");
        fields[41] = fieldAP
                = new CharacterField(message, HEADERSIZE + 837, 1, "AP");
        fields[42] = fieldRE
                = new CharacterField(message, HEADERSIZE + 838, 1, "RE");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field OPEEMP using a String value.
     */
    public void setOPEEMP(String newvalue) {
        fieldOPEEMP.setString(newvalue);
    }

    /**
     * Get value of field OPEEMP as a String.
     */
    public String getOPEEMP() {
        return fieldOPEEMP.getString();
    }

    /**
     * Set field OPEDEL using a String value.
     */
    public void setOPEDEL(String newvalue) {
        fieldOPEDEL.setString(newvalue);
    }

    /**
     * Get value of field OPEDEL as a String.
     */
    public String getOPEDEL() {
        return fieldOPEDEL.getString();
    }

    /**
     * Set field OPENUM using a String value.
     */
    public void setOPENUM(String newvalue) {
        fieldOPENUM.setString(newvalue);
    }

    /**
     * Get value of field OPENUM as a String.
     */
    public String getOPENUM() {
        return fieldOPENUM.getString();
    }

    /**
     * Set numeric field OPENUM using a BigDecimal value.
     */
    public void setOPENUM(BigDecimal newvalue) {
        fieldOPENUM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPENUM as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPENUM() {
        return fieldOPENUM.getBigDecimal();
    }

    /**
     * Set field OPC using a String value.
     */
    public void setOPC(String newvalue) {
        fieldOPC.setString(newvalue);
    }

    /**
     * Get value of field OPC as a String.
     */
    public String getOPC() {
        return fieldOPC.getString();
    }

    /**
     * Set field TXT using a String value.
     */
    public void setTXT(String newvalue) {
        fieldTXT.setString(newvalue);
    }

    /**
     * Get value of field TXT as a String.
     */
    public String getTXT() {
        return fieldTXT.getString();
    }

    /**
     * Set field BANOPE using a String value.
     */
    public void setBANOPE(String newvalue) {
        fieldBANOPE.setString(newvalue);
    }

    /**
     * Get value of field BANOPE as a String.
     */
    public String getBANOPE() {
        return fieldBANOPE.getString();
    }

    /**
     * Set field OPEMNT using a String value.
     */
    public void setOPEMNT(String newvalue) {
        fieldOPEMNT.setString(newvalue);
    }

    /**
     * Get value of field OPEMNT as a String.
     */
    public String getOPEMNT() {
        return fieldOPEMNT.getString();
    }

    /**
     * Set numeric field OPEMNT using a BigDecimal value.
     */
    public void setOPEMNT(BigDecimal newvalue) {
        fieldOPEMNT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPEMNT as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPEMNT() {
        return fieldOPEMNT.getBigDecimal();
    }

    /**
     * Set field TIPTRA using a String value.
     */
    public void setTIPTRA(String newvalue) {
        fieldTIPTRA.setString(newvalue);
    }

    /**
     * Get value of field TIPTRA as a String.
     */
    public String getTIPTRA() {
        return fieldTIPTRA.getString();
    }

    /**
     * Set field FIDNO2 using a String value.
     */
    public void setFIDNO2(String newvalue) {
        fieldFIDNO2.setString(newvalue);
    }

    /**
     * Get value of field FIDNO2 as a String.
     */
    public String getFIDNO2() {
        return fieldFIDNO2.getString();
    }

    /**
     * Set field REGCUR using a String value.
     */
    public void setREGCUR(String newvalue) {
        fieldREGCUR.setString(newvalue);
    }

    /**
     * Get value of field REGCUR as a String.
     */
    public String getREGCUR() {
        return fieldREGCUR.getString();
    }

    /**
     * Set field CAMCUR using a String value.
     */
    public void setCAMCUR(String newvalue) {
        fieldCAMCUR.setString(newvalue);
    }

    /**
     * Get value of field CAMCUR as a String.
     */
    public String getCAMCUR() {
        return fieldCAMCUR.getString();
    }

    /**
     * Set field POSCUR using a String value.
     */
    public void setPOSCUR(String newvalue) {
        fieldPOSCUR.setString(newvalue);
    }

    /**
     * Get value of field POSCUR as a String.
     */
    public String getPOSCUR() {
        return fieldPOSCUR.getString();
    }

    /**
     * Set numeric field POSCUR using a BigDecimal value.
     */
    public void setPOSCUR(BigDecimal newvalue) {
        fieldPOSCUR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field POSCUR as a BigDecimal.
     */
    public BigDecimal getBigDecimalPOSCUR() {
        return fieldPOSCUR.getBigDecimal();
    }

    /**
     * Set field TABNOM using a String value.
     */
    public void setTABNOM(String newvalue) {
        fieldTABNOM.setString(newvalue);
    }

    /**
     * Get value of field TABNOM as a String.
     */
    public String getTABNOM() {
        return fieldTABNOM.getString();
    }

    /**
     * Set field CODFID using a String value.
     */
    public void setCODFID(String newvalue) {
        fieldCODFID.setString(newvalue);
    }

    /**
     * Get value of field CODFID as a String.
     */
    public String getCODFID() {
        return fieldCODFID.getString();
    }

    /**
     * Set field FIDNO3 using a String value.
     */
    public void setFIDNO3(String newvalue) {
        fieldFIDNO3.setString(newvalue);
    }

    /**
     * Get value of field FIDNO3 as a String.
     */
    public String getFIDNO3() {
        return fieldFIDNO3.getString();
    }

    /**
     * Set field FIDTXT using a String value.
     */
    public void setFIDTXT(String newvalue) {
        fieldFIDTXT.setString(newvalue);
    }

    /**
     * Get value of field FIDTXT as a String.
     */
    public String getFIDTXT() {
        return fieldFIDTXT.getString();
    }

    /**
     * Set field FEC6DE using a String value.
     */
    public void setFEC6DE(String newvalue) {
        fieldFEC6DE.setString(newvalue);
    }

    /**
     * Get value of field FEC6DE as a String.
     */
    public String getFEC6DE() {
        return fieldFEC6DE.getString();
    }

    /**
     * Set numeric field FEC6DE using a BigDecimal value.
     */
    public void setFEC6DE(BigDecimal newvalue) {
        fieldFEC6DE.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FEC6DE as a BigDecimal.
     */
    public BigDecimal getBigDecimalFEC6DE() {
        return fieldFEC6DE.getBigDecimal();
    }

    /**
     * Set field FEC6HA using a String value.
     */
    public void setFEC6HA(String newvalue) {
        fieldFEC6HA.setString(newvalue);
    }

    /**
     * Get value of field FEC6HA as a String.
     */
    public String getFEC6HA() {
        return fieldFEC6HA.getString();
    }

    /**
     * Set numeric field FEC6HA using a BigDecimal value.
     */
    public void setFEC6HA(BigDecimal newvalue) {
        fieldFEC6HA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FEC6HA as a BigDecimal.
     */
    public BigDecimal getBigDecimalFEC6HA() {
        return fieldFEC6HA.getBigDecimal();
    }

    /**
     * Set field BANOPC using a String value.
     */
    public void setBANOPC(String newvalue) {
        fieldBANOPC.setString(newvalue);
    }

    /**
     * Get value of field BANOPC as a String.
     */
    public String getBANOPC() {
        return fieldBANOPC.getString();
    }

    /**
     * Set field OP2FEC using a String value.
     */
    public void setOP2FEC(String newvalue) {
        fieldOP2FEC.setString(newvalue);
    }

    /**
     * Get value of field OP2FEC as a String.
     */
    public String getOP2FEC() {
        return fieldOP2FEC.getString();
    }

    /**
     * Set numeric field OP2FEC using a BigDecimal value.
     */
    public void setOP2FEC(BigDecimal newvalue) {
        fieldOP2FEC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OP2FEC as a BigDecimal.
     */
    public BigDecimal getBigDecimalOP2FEC() {
        return fieldOP2FEC.getBigDecimal();
    }

    /**
     * Set field OP2FVL using a String value.
     */
    public void setOP2FVL(String newvalue) {
        fieldOP2FVL.setString(newvalue);
    }

    /**
     * Get value of field OP2FVL as a String.
     */
    public String getOP2FVL() {
        return fieldOP2FVL.getString();
    }

    /**
     * Set numeric field OP2FVL using a BigDecimal value.
     */
    public void setOP2FVL(BigDecimal newvalue) {
        fieldOP2FVL.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OP2FVL as a BigDecimal.
     */
    public BigDecimal getBigDecimalOP2FVL() {
        return fieldOP2FVL.getBigDecimal();
    }

    /**
     * Set field OPEREC using a String value.
     */
    public void setOPEREC(String newvalue) {
        fieldOPEREC.setString(newvalue);
    }

    /**
     * Get value of field OPEREC as a String.
     */
    public String getOPEREC() {
        return fieldOPEREC.getString();
    }

    /**
     * Set numeric field OPEREC using a BigDecimal value.
     */
    public void setOPEREC(BigDecimal newvalue) {
        fieldOPEREC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPEREC as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPEREC() {
        return fieldOPEREC.getBigDecimal();
    }

    /**
     * Set field OPECLI using a String value.
     */
    public void setOPECLI(String newvalue) {
        fieldOPECLI.setString(newvalue);
    }

    /**
     * Get value of field OPECLI as a String.
     */
    public String getOPECLI() {
        return fieldOPECLI.getString();
    }

    /**
     * Set numeric field OPECLI using a BigDecimal value.
     */
    public void setOPECLI(BigDecimal newvalue) {
        fieldOPECLI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPECLI as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPECLI() {
        return fieldOPECLI.getBigDecimal();
    }

    /**
     * Set field NOMAPP using a String value.
     */
    public void setNOMAPP(String newvalue) {
        fieldNOMAPP.setString(newvalue);
    }

    /**
     * Get value of field NOMAPP as a String.
     */
    public String getNOMAPP() {
        return fieldNOMAPP.getString();
    }

    /**
     * Set field CIRIF using a String value.
     */
    public void setCIRIF(String newvalue) {
        fieldCIRIF.setString(newvalue);
    }

    /**
     * Get value of field CIRIF as a String.
     */
    public String getCIRIF() {
        return fieldCIRIF.getString();
    }

    /**
     * Set field DIVNO1 using a String value.
     */
    public void setDIVNO1(String newvalue) {
        fieldDIVNO1.setString(newvalue);
    }

    /**
     * Get value of field DIVNO1 as a String.
     */
    public String getDIVNO1() {
        return fieldDIVNO1.getString();
    }

    /**
     * Set field OPECOM using a String value.
     */
    public void setOPECOM(String newvalue) {
        fieldOPECOM.setString(newvalue);
    }

    /**
     * Get value of field OPECOM as a String.
     */
    public String getOPECOM() {
        return fieldOPECOM.getString();
    }

    /**
     * Set numeric field OPECOM using a BigDecimal value.
     */
    public void setOPECOM(BigDecimal newvalue) {
        fieldOPECOM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPECOM as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPECOM() {
        return fieldOPECOM.getBigDecimal();
    }

    /**
     * Set field OPECTA using a String value.
     */
    public void setOPECTA(String newvalue) {
        fieldOPECTA.setString(newvalue);
    }

    /**
     * Get value of field OPECTA as a String.
     */
    public String getOPECTA() {
        return fieldOPECTA.getString();
    }

    /**
     * Set field OPEBAN using a String value.
     */
    public void setOPEBAN(String newvalue) {
        fieldOPEBAN.setString(newvalue);
    }

    /**
     * Get value of field OPEBAN as a String.
     */
    public String getOPEBAN() {
        return fieldOPEBAN.getString();
    }

    /**
     * Set field TEXT2 using a String value.
     */
    public void setTEXT2(String newvalue) {
        fieldTEXT2.setString(newvalue);
    }

    /**
     * Get value of field TEXT2 as a String.
     */
    public String getTEXT2() {
        return fieldTEXT2.getString();
    }

    /**
     * Set field OPEUSU using a String value.
     */
    public void setOPEUSU(String newvalue) {
        fieldOPEUSU.setString(newvalue);
    }

    /**
     * Get value of field OPEUSU as a String.
     */
    public String getOPEUSU() {
        return fieldOPEUSU.getString();
    }

    /**
     * Set field OPEOBS using a String value.
     */
    public void setOPEOBS(String newvalue) {
        fieldOPEOBS.setString(newvalue);
    }

    /**
     * Get value of field OPEOBS as a String.
     */
    public String getOPEOBS() {
        return fieldOPEOBS.getString();
    }

    /**
     * Set field AP using a String value.
     */
    public void setAP(String newvalue) {
        fieldAP.setString(newvalue);
    }

    /**
     * Get value of field AP as a String.
     */
    public String getAP() {
        return fieldAP.getString();
    }

    /**
     * Set field RE using a String value.
     */
    public void setRE(String newvalue) {
        fieldRE.setString(newvalue);
    }

    /**
     * Get value of field RE as a String.
     */
    public String getRE() {
        return fieldRE.getString();
    }

}
