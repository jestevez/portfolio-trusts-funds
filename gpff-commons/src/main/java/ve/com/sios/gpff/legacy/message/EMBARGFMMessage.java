package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from EMBARGFM physical file
 * definition.
 * 
* File level identifier is 1140315201756. Record format level identifier is
 * 3E274272EACFB.
 */
public class EMBARGFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "CLAV1",
        "FIDNOM",
        "FIDTXT",
        "OPCION",
        "EMOVNI",
        "EMONTO",
        "EMONTT",
        "FECHA",
        "NOMBRE",
        "BAJA",
        "FECALT",
        "FECHAB"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "CLAV1",
        "FIDNOM",
        "FIDTXT",
        "OPCION",
        "EMOVNI",
        "EMONTO",
        "EMONTT",
        "FECHA",
        "NOMBRE",
        "BAJA",
        "FECALT",
        "FECHAB"
    };
    final static String fid = "1140315201756";
    final static String rid = "3E274272EACFB";
    final static String fmtname = "EMBARGFM";
    final int FIELDCOUNT = 21;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldCLAV1 = null;
    private CharacterField fieldFIDNOM = null;
    private CharacterField fieldFIDTXT = null;
    private DecimalField fieldOPCION = null;
    private CharacterField fieldEMOVNI = null;
    private DecimalField fieldEMONTO = null;
    private DecimalField fieldEMONTT = null;
    private DecimalField fieldFECHA = null;
    private CharacterField fieldNOMBRE = null;
    private CharacterField fieldBAJA = null;
    private DecimalField fieldFECALT = null;
    private DecimalField fieldFECHAB = null;

    /**
     * Constructor for EMBARGFMMessage.
     */
    public EMBARGFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 304;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldCLAV1
                = new CharacterField(message, HEADERSIZE + 161, 4, "CLAV1");
        fields[10] = fieldFIDNOM
                = new CharacterField(message, HEADERSIZE + 165, 40, "FIDNOM");
        fields[11] = fieldFIDTXT
                = new CharacterField(message, HEADERSIZE + 205, 14, "FIDTXT");
        fields[12] = fieldOPCION
                = new DecimalField(message, HEADERSIZE + 219, 2, 0, "OPCION");
        fields[13] = fieldEMOVNI
                = new CharacterField(message, HEADERSIZE + 221, 12, "EMOVNI");
        fields[14] = fieldEMONTO
                = new DecimalField(message, HEADERSIZE + 233, 17, 2, "EMONTO");
        fields[15] = fieldEMONTT
                = new DecimalField(message, HEADERSIZE + 250, 11, 6, "EMONTT");
        fields[16] = fieldFECHA
                = new DecimalField(message, HEADERSIZE + 261, 7, 0, "FECHA");
        fields[17] = fieldNOMBRE
                = new CharacterField(message, HEADERSIZE + 268, 20, "NOMBRE");
        fields[18] = fieldBAJA
                = new CharacterField(message, HEADERSIZE + 288, 2, "BAJA");
        fields[19] = fieldFECALT
                = new DecimalField(message, HEADERSIZE + 290, 7, 0, "FECALT");
        fields[20] = fieldFECHAB
                = new DecimalField(message, HEADERSIZE + 297, 7, 0, "FECHAB");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field CLAV1 using a String value.
     */
    public void setCLAV1(String newvalue) {
        fieldCLAV1.setString(newvalue);
    }

    /**
     * Get value of field CLAV1 as a String.
     */
    public String getCLAV1() {
        return fieldCLAV1.getString();
    }

    /**
     * Set field FIDNOM using a String value.
     */
    public void setFIDNOM(String newvalue) {
        fieldFIDNOM.setString(newvalue);
    }

    /**
     * Get value of field FIDNOM as a String.
     */
    public String getFIDNOM() {
        return fieldFIDNOM.getString();
    }

    /**
     * Set field FIDTXT using a String value.
     */
    public void setFIDTXT(String newvalue) {
        fieldFIDTXT.setString(newvalue);
    }

    /**
     * Get value of field FIDTXT as a String.
     */
    public String getFIDTXT() {
        return fieldFIDTXT.getString();
    }

    /**
     * Set field OPCION using a String value.
     */
    public void setOPCION(String newvalue) {
        fieldOPCION.setString(newvalue);
    }

    /**
     * Get value of field OPCION as a String.
     */
    public String getOPCION() {
        return fieldOPCION.getString();
    }

    /**
     * Set numeric field OPCION using a BigDecimal value.
     */
    public void setOPCION(BigDecimal newvalue) {
        fieldOPCION.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPCION as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPCION() {
        return fieldOPCION.getBigDecimal();
    }

    /**
     * Set field EMOVNI using a String value.
     */
    public void setEMOVNI(String newvalue) {
        fieldEMOVNI.setString(newvalue);
    }

    /**
     * Get value of field EMOVNI as a String.
     */
    public String getEMOVNI() {
        return fieldEMOVNI.getString();
    }

    /**
     * Set field EMONTO using a String value.
     */
    public void setEMONTO(String newvalue) {
        fieldEMONTO.setString(newvalue);
    }

    /**
     * Get value of field EMONTO as a String.
     */
    public String getEMONTO() {
        return fieldEMONTO.getString();
    }

    /**
     * Set numeric field EMONTO using a BigDecimal value.
     */
    public void setEMONTO(BigDecimal newvalue) {
        fieldEMONTO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field EMONTO as a BigDecimal.
     */
    public BigDecimal getBigDecimalEMONTO() {
        return fieldEMONTO.getBigDecimal();
    }

    /**
     * Set field EMONTT using a String value.
     */
    public void setEMONTT(String newvalue) {
        fieldEMONTT.setString(newvalue);
    }

    /**
     * Get value of field EMONTT as a String.
     */
    public String getEMONTT() {
        return fieldEMONTT.getString();
    }

    /**
     * Set numeric field EMONTT using a BigDecimal value.
     */
    public void setEMONTT(BigDecimal newvalue) {
        fieldEMONTT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field EMONTT as a BigDecimal.
     */
    public BigDecimal getBigDecimalEMONTT() {
        return fieldEMONTT.getBigDecimal();
    }

    /**
     * Set field FECHA using a String value.
     */
    public void setFECHA(String newvalue) {
        fieldFECHA.setString(newvalue);
    }

    /**
     * Get value of field FECHA as a String.
     */
    public String getFECHA() {
        return fieldFECHA.getString();
    }

    /**
     * Set numeric field FECHA using a BigDecimal value.
     */
    public void setFECHA(BigDecimal newvalue) {
        fieldFECHA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECHA as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECHA() {
        return fieldFECHA.getBigDecimal();
    }

    /**
     * Set field NOMBRE using a String value.
     */
    public void setNOMBRE(String newvalue) {
        fieldNOMBRE.setString(newvalue);
    }

    /**
     * Get value of field NOMBRE as a String.
     */
    public String getNOMBRE() {
        return fieldNOMBRE.getString();
    }

    /**
     * Set field BAJA using a String value.
     */
    public void setBAJA(String newvalue) {
        fieldBAJA.setString(newvalue);
    }

    /**
     * Get value of field BAJA as a String.
     */
    public String getBAJA() {
        return fieldBAJA.getString();
    }

    /**
     * Set field FECALT using a String value.
     */
    public void setFECALT(String newvalue) {
        fieldFECALT.setString(newvalue);
    }

    /**
     * Get value of field FECALT as a String.
     */
    public String getFECALT() {
        return fieldFECALT.getString();
    }

    /**
     * Set numeric field FECALT using a BigDecimal value.
     */
    public void setFECALT(BigDecimal newvalue) {
        fieldFECALT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECALT as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECALT() {
        return fieldFECALT.getBigDecimal();
    }

    /**
     * Set field FECHAB using a String value.
     */
    public void setFECHAB(String newvalue) {
        fieldFECHAB.setString(newvalue);
    }

    /**
     * Get value of field FECHAB as a String.
     */
    public String getFECHAB() {
        return fieldFECHAB.getString();
    }

    /**
     * Set numeric field FECHAB using a BigDecimal value.
     */
    public void setFECHAB(BigDecimal newvalue) {
        fieldFECHAB.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECHAB as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECHAB() {
        return fieldFECHAB.getBigDecimal();
    }

}
