package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from GPPRPM04FM physical file
 * definition.
 * 
* File level identifier is 1140322123500. Record format level identifier is
 * 53D7E65409B78.
 */

public class GPPRPM04FMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "REGCUR",
        "CAMCUR",
        "CUR",
        "AREA",
        "FIDNOM",
        "OPCEDD",
        "OPCEDH",
        "CNDCLI",
        "NOMBRE",
        "TIPO",
        "TXTOPC",
        "CTA",
        "TIPCTA",
        "OFINOM",
        "CTCBAN",
        "NOPC",
        "AUTMAN",
        "CARGOC",
        "FPAGO",
        "TEXTO",
        "FAPORTE",
        "APORTE",
        "APOINI",
        "TOTANU",
        "PLAZO",
        "FRETIRO",
        "RETIRO",
        "FCONTRAT",
        "FSREV",
        "FVTO",
        "SFLFEC",
        "SFLIMP",
        "SFLFIJ",
        "SFLVAR",
        "SFLAOS",
        "CTLFEC",
        "CTLIMP"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "REGCUR",
        "CAMCUR",
        "CUR",
        "AREA",
        "FIDNOM",
        "OPCEDD",
        "OPCEDH",
        "CNDCLI",
        "NOMBRE",
        "TIPO",
        "TXTOPC",
        "CTA",
        "TIPCTA",
        "OFINOM",
        "CTCBAN",
        "NOPC",
        "AUTMAN",
        "CARGOC",
        "FPAGO",
        "TEXTO",
        "FAPORTE",
        "APORTE",
        "APOINI",
        "TOTANU",
        "PLAZO",
        "FRETIRO",
        "RETIRO",
        "FCONTRAT",
        "FSREV",
        "FVTO",
        "SFLFEC",
        "SFLIMP",
        "SFLFIJ",
        "SFLVAR",
        "SFLAOS",
        "CTLFEC",
        "CTLIMP"
    };
    final static String fid = "1140322123500";
    final static String rid = "53D7E65409B78";
    final static String fmtname = "GPPRPM04FM";
    final int FIELDCOUNT = 46;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldREGCUR = null;
    private CharacterField fieldCAMCUR = null;
    private DecimalField fieldCUR = null;
    private CharacterField fieldAREA = null;
    private CharacterField fieldFIDNOM = null;
    private DecimalField fieldOPCEDD = null;
    private DecimalField fieldOPCEDH = null;
    private CharacterField fieldCNDCLI = null;
    private CharacterField fieldNOMBRE = null;
    private CharacterField fieldTIPO = null;
    private CharacterField fieldTXTOPC = null;
    private CharacterField fieldCTA = null;
    private CharacterField fieldTIPCTA = null;
    private CharacterField fieldOFINOM = null;
    private CharacterField fieldCTCBAN = null;
    private CharacterField fieldNOPC = null;
    private CharacterField fieldAUTMAN = null;
    private CharacterField fieldCARGOC = null;
    private DecimalField fieldFPAGO = null;
    private CharacterField fieldTEXTO = null;
    private CharacterField fieldFAPORTE = null;
    private CharacterField fieldAPORTE = null;
    private DecimalField fieldAPOINI = null;
    private DecimalField fieldTOTANU = null;
    private DecimalField fieldPLAZO = null;
    private CharacterField fieldFRETIRO = null;
    private CharacterField fieldRETIRO = null;
    private DecimalField fieldFCONTRAT = null;
    private DecimalField fieldFSREV = null;
    private DecimalField fieldFVTO = null;
    private DecimalField fieldSFLFEC = null;
    private DecimalField fieldSFLIMP = null;
    private DecimalField fieldSFLFIJ = null;
    private DecimalField fieldSFLVAR = null;
    private CharacterField fieldSFLAOS = null;
    private DecimalField fieldCTLFEC = null;
    private DecimalField fieldCTLIMP = null;

    /**
     * Constructor for GPPRPM04FMMessage.
     */
    public GPPRPM04FMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 680;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldREGCUR
                = new CharacterField(message, HEADERSIZE + 161, 10, "REGCUR");
        fields[10] = fieldCAMCUR
                = new CharacterField(message, HEADERSIZE + 171, 10, "CAMCUR");
        fields[11] = fieldCUR
                = new DecimalField(message, HEADERSIZE + 181, 5, 0, "CUR");
        fields[12] = fieldAREA
                = new CharacterField(message, HEADERSIZE + 186, 4, "AREA");
        fields[13] = fieldFIDNOM
                = new CharacterField(message, HEADERSIZE + 190, 40, "FIDNOM");
        fields[14] = fieldOPCEDD
                = new DecimalField(message, HEADERSIZE + 230, 4, 0, "OPCEDD");
        fields[15] = fieldOPCEDH
                = new DecimalField(message, HEADERSIZE + 234, 4, 0, "OPCEDH");
        fields[16] = fieldCNDCLI
                = new CharacterField(message, HEADERSIZE + 238, 12, "CNDCLI");
        fields[17] = fieldNOMBRE
                = new CharacterField(message, HEADERSIZE + 250, 50, "NOMBRE");
        fields[18] = fieldTIPO
                = new CharacterField(message, HEADERSIZE + 300, 1, "TIPO");
        fields[19] = fieldTXTOPC
                = new CharacterField(message, HEADERSIZE + 301, 62, "TXTOPC");
        fields[20] = fieldCTA
                = new CharacterField(message, HEADERSIZE + 363, 20, "CTA");
        fields[21] = fieldTIPCTA
                = new CharacterField(message, HEADERSIZE + 383, 14, "TIPCTA");
        fields[22] = fieldOFINOM
                = new CharacterField(message, HEADERSIZE + 397, 50, "OFINOM");
        fields[23] = fieldCTCBAN
                = new CharacterField(message, HEADERSIZE + 447, 40, "CTCBAN");
        fields[24] = fieldNOPC
                = new CharacterField(message, HEADERSIZE + 487, 1, "NOPC");
        fields[25] = fieldAUTMAN
                = new CharacterField(message, HEADERSIZE + 488, 1, "AUTMAN");
        fields[26] = fieldCARGOC
                = new CharacterField(message, HEADERSIZE + 489, 1, "CARGOC");
        fields[27] = fieldFPAGO
                = new DecimalField(message, HEADERSIZE + 490, 3, 0, "FPAGO");
        fields[28] = fieldTEXTO
                = new CharacterField(message, HEADERSIZE + 493, 30, "TEXTO");
        fields[29] = fieldFAPORTE
                = new CharacterField(message, HEADERSIZE + 523, 1, "FAPORTE");
        fields[30] = fieldAPORTE
                = new CharacterField(message, HEADERSIZE + 524, 13, "APORTE");
        fields[31] = fieldAPOINI
                = new DecimalField(message, HEADERSIZE + 537, 17, 2, "APOINI");
        fields[32] = fieldTOTANU
                = new DecimalField(message, HEADERSIZE + 554, 17, 2, "TOTANU");
        fields[33] = fieldPLAZO
                = new DecimalField(message, HEADERSIZE + 571, 3, 0, "PLAZO");
        fields[34] = fieldFRETIRO
                = new CharacterField(message, HEADERSIZE + 574, 1, "FRETIRO");
        fields[35] = fieldRETIRO
                = new CharacterField(message, HEADERSIZE + 575, 13, "RETIRO");
        fields[36] = fieldFCONTRAT
                = new DecimalField(message, HEADERSIZE + 588, 7, 0, "FCONTRAT");
        fields[37] = fieldFSREV
                = new DecimalField(message, HEADERSIZE + 595, 7, 0, "FSREV");
        fields[38] = fieldFVTO
                = new DecimalField(message, HEADERSIZE + 602, 7, 0, "FVTO");
        fields[39] = fieldSFLFEC
                = new DecimalField(message, HEADERSIZE + 609, 7, 0, "SFLFEC");
        fields[40] = fieldSFLIMP
                = new DecimalField(message, HEADERSIZE + 616, 14, 2, "SFLIMP");
        fields[41] = fieldSFLFIJ
                = new DecimalField(message, HEADERSIZE + 630, 14, 2, "SFLFIJ");
        fields[42] = fieldSFLVAR
                = new DecimalField(message, HEADERSIZE + 644, 14, 2, "SFLVAR");
        fields[43] = fieldSFLAOS
                = new CharacterField(message, HEADERSIZE + 658, 1, "SFLAOS");
        fields[44] = fieldCTLFEC
                = new DecimalField(message, HEADERSIZE + 659, 7, 0, "CTLFEC");
        fields[45] = fieldCTLIMP
                = new DecimalField(message, HEADERSIZE + 666, 14, 2, "CTLIMP");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field REGCUR using a String value.
     */
    public void setREGCUR(String newvalue) {
        fieldREGCUR.setString(newvalue);
    }

    /**
     * Get value of field REGCUR as a String.
     */
    public String getREGCUR() {
        return fieldREGCUR.getString();
    }

    /**
     * Set field CAMCUR using a String value.
     */
    public void setCAMCUR(String newvalue) {
        fieldCAMCUR.setString(newvalue);
    }

    /**
     * Get value of field CAMCUR as a String.
     */
    public String getCAMCUR() {
        return fieldCAMCUR.getString();
    }

    /**
     * Set field CUR using a String value.
     */
    public void setCUR(String newvalue) {
        fieldCUR.setString(newvalue);
    }

    /**
     * Get value of field CUR as a String.
     */
    public String getCUR() {
        return fieldCUR.getString();
    }

    /**
     * Set numeric field CUR using a BigDecimal value.
     */
    public void setCUR(BigDecimal newvalue) {
        fieldCUR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CUR as a BigDecimal.
     */
    public BigDecimal getBigDecimalCUR() {
        return fieldCUR.getBigDecimal();
    }

    /**
     * Set field AREA using a String value.
     */
    public void setAREA(String newvalue) {
        fieldAREA.setString(newvalue);
    }

    /**
     * Get value of field AREA as a String.
     */
    public String getAREA() {
        return fieldAREA.getString();
    }

    /**
     * Set field FIDNOM using a String value.
     */
    public void setFIDNOM(String newvalue) {
        fieldFIDNOM.setString(newvalue);
    }

    /**
     * Get value of field FIDNOM as a String.
     */
    public String getFIDNOM() {
        return fieldFIDNOM.getString();
    }

    /**
     * Set field OPCEDD using a String value.
     */
    public void setOPCEDD(String newvalue) {
        fieldOPCEDD.setString(newvalue);
    }

    /**
     * Get value of field OPCEDD as a String.
     */
    public String getOPCEDD() {
        return fieldOPCEDD.getString();
    }

    /**
     * Set numeric field OPCEDD using a BigDecimal value.
     */
    public void setOPCEDD(BigDecimal newvalue) {
        fieldOPCEDD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPCEDD as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPCEDD() {
        return fieldOPCEDD.getBigDecimal();
    }

    /**
     * Set field OPCEDH using a String value.
     */
    public void setOPCEDH(String newvalue) {
        fieldOPCEDH.setString(newvalue);
    }

    /**
     * Get value of field OPCEDH as a String.
     */
    public String getOPCEDH() {
        return fieldOPCEDH.getString();
    }

    /**
     * Set numeric field OPCEDH using a BigDecimal value.
     */
    public void setOPCEDH(BigDecimal newvalue) {
        fieldOPCEDH.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field OPCEDH as a BigDecimal.
     */
    public BigDecimal getBigDecimalOPCEDH() {
        return fieldOPCEDH.getBigDecimal();
    }

    /**
     * Set field CNDCLI using a String value.
     */
    public void setCNDCLI(String newvalue) {
        fieldCNDCLI.setString(newvalue);
    }

    /**
     * Get value of field CNDCLI as a String.
     */
    public String getCNDCLI() {
        return fieldCNDCLI.getString();
    }

    /**
     * Set field NOMBRE using a String value.
     */
    public void setNOMBRE(String newvalue) {
        fieldNOMBRE.setString(newvalue);
    }

    /**
     * Get value of field NOMBRE as a String.
     */
    public String getNOMBRE() {
        return fieldNOMBRE.getString();
    }

    /**
     * Set field TIPO using a String value.
     */
    public void setTIPO(String newvalue) {
        fieldTIPO.setString(newvalue);
    }

    /**
     * Get value of field TIPO as a String.
     */
    public String getTIPO() {
        return fieldTIPO.getString();
    }

    /**
     * Set field TXTOPC using a String value.
     */
    public void setTXTOPC(String newvalue) {
        fieldTXTOPC.setString(newvalue);
    }

    /**
     * Get value of field TXTOPC as a String.
     */
    public String getTXTOPC() {
        return fieldTXTOPC.getString();
    }

    /**
     * Set field CTA using a String value.
     */
    public void setCTA(String newvalue) {
        fieldCTA.setString(newvalue);
    }

    /**
     * Get value of field CTA as a String.
     */
    public String getCTA() {
        return fieldCTA.getString();
    }

    /**
     * Set field TIPCTA using a String value.
     */
    public void setTIPCTA(String newvalue) {
        fieldTIPCTA.setString(newvalue);
    }

    /**
     * Get value of field TIPCTA as a String.
     */
    public String getTIPCTA() {
        return fieldTIPCTA.getString();
    }

    /**
     * Set field OFINOM using a String value.
     */
    public void setOFINOM(String newvalue) {
        fieldOFINOM.setString(newvalue);
    }

    /**
     * Get value of field OFINOM as a String.
     */
    public String getOFINOM() {
        return fieldOFINOM.getString();
    }

    /**
     * Set field CTCBAN using a String value.
     */
    public void setCTCBAN(String newvalue) {
        fieldCTCBAN.setString(newvalue);
    }

    /**
     * Get value of field CTCBAN as a String.
     */
    public String getCTCBAN() {
        return fieldCTCBAN.getString();
    }

    /**
     * Set field NOPC using a String value.
     */
    public void setNOPC(String newvalue) {
        fieldNOPC.setString(newvalue);
    }

    /**
     * Get value of field NOPC as a String.
     */
    public String getNOPC() {
        return fieldNOPC.getString();
    }

    /**
     * Set field AUTMAN using a String value.
     */
    public void setAUTMAN(String newvalue) {
        fieldAUTMAN.setString(newvalue);
    }

    /**
     * Get value of field AUTMAN as a String.
     */
    public String getAUTMAN() {
        return fieldAUTMAN.getString();
    }

    /**
     * Set field CARGOC using a String value.
     */
    public void setCARGOC(String newvalue) {
        fieldCARGOC.setString(newvalue);
    }

    /**
     * Get value of field CARGOC as a String.
     */
    public String getCARGOC() {
        return fieldCARGOC.getString();
    }

    /**
     * Set field FPAGO using a String value.
     */
    public void setFPAGO(String newvalue) {
        fieldFPAGO.setString(newvalue);
    }

    /**
     * Get value of field FPAGO as a String.
     */
    public String getFPAGO() {
        return fieldFPAGO.getString();
    }

    /**
     * Set numeric field FPAGO using a BigDecimal value.
     */
    public void setFPAGO(BigDecimal newvalue) {
        fieldFPAGO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FPAGO as a BigDecimal.
     */
    public BigDecimal getBigDecimalFPAGO() {
        return fieldFPAGO.getBigDecimal();
    }

    /**
     * Set field TEXTO using a String value.
     */
    public void setTEXTO(String newvalue) {
        fieldTEXTO.setString(newvalue);
    }

    /**
     * Get value of field TEXTO as a String.
     */
    public String getTEXTO() {
        return fieldTEXTO.getString();
    }

    /**
     * Set field FAPORTE using a String value.
     */
    public void setFAPORTE(String newvalue) {
        fieldFAPORTE.setString(newvalue);
    }

    /**
     * Get value of field FAPORTE as a String.
     */
    public String getFAPORTE() {
        return fieldFAPORTE.getString();
    }

    /**
     * Set field APORTE using a String value.
     */
    public void setAPORTE(String newvalue) {
        fieldAPORTE.setString(newvalue);
    }

    /**
     * Get value of field APORTE as a String.
     */
    public String getAPORTE() {
        return fieldAPORTE.getString();
    }

    /**
     * Set field APOINI using a String value.
     */
    public void setAPOINI(String newvalue) {
        fieldAPOINI.setString(newvalue);
    }

    /**
     * Get value of field APOINI as a String.
     */
    public String getAPOINI() {
        return fieldAPOINI.getString();
    }

    /**
     * Set numeric field APOINI using a BigDecimal value.
     */
    public void setAPOINI(BigDecimal newvalue) {
        fieldAPOINI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field APOINI as a BigDecimal.
     */
    public BigDecimal getBigDecimalAPOINI() {
        return fieldAPOINI.getBigDecimal();
    }

    /**
     * Set field TOTANU using a String value.
     */
    public void setTOTANU(String newvalue) {
        fieldTOTANU.setString(newvalue);
    }

    /**
     * Get value of field TOTANU as a String.
     */
    public String getTOTANU() {
        return fieldTOTANU.getString();
    }

    /**
     * Set numeric field TOTANU using a BigDecimal value.
     */
    public void setTOTANU(BigDecimal newvalue) {
        fieldTOTANU.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field TOTANU as a BigDecimal.
     */
    public BigDecimal getBigDecimalTOTANU() {
        return fieldTOTANU.getBigDecimal();
    }

    /**
     * Set field PLAZO using a String value.
     */
    public void setPLAZO(String newvalue) {
        fieldPLAZO.setString(newvalue);
    }

    /**
     * Get value of field PLAZO as a String.
     */
    public String getPLAZO() {
        return fieldPLAZO.getString();
    }

    /**
     * Set numeric field PLAZO using a BigDecimal value.
     */
    public void setPLAZO(BigDecimal newvalue) {
        fieldPLAZO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PLAZO as a BigDecimal.
     */
    public BigDecimal getBigDecimalPLAZO() {
        return fieldPLAZO.getBigDecimal();
    }

    /**
     * Set field FRETIRO using a String value.
     */
    public void setFRETIRO(String newvalue) {
        fieldFRETIRO.setString(newvalue);
    }

    /**
     * Get value of field FRETIRO as a String.
     */
    public String getFRETIRO() {
        return fieldFRETIRO.getString();
    }

    /**
     * Set field RETIRO using a String value.
     */
    public void setRETIRO(String newvalue) {
        fieldRETIRO.setString(newvalue);
    }

    /**
     * Get value of field RETIRO as a String.
     */
    public String getRETIRO() {
        return fieldRETIRO.getString();
    }

    /**
     * Set field FCONTRAT using a String value.
     */
    public void setFCONTRAT(String newvalue) {
        fieldFCONTRAT.setString(newvalue);
    }

    /**
     * Get value of field FCONTRAT as a String.
     */
    public String getFCONTRAT() {
        return fieldFCONTRAT.getString();
    }

    /**
     * Set numeric field FCONTRAT using a BigDecimal value.
     */
    public void setFCONTRAT(BigDecimal newvalue) {
        fieldFCONTRAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FCONTRAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalFCONTRAT() {
        return fieldFCONTRAT.getBigDecimal();
    }

    /**
     * Set field FSREV using a String value.
     */
    public void setFSREV(String newvalue) {
        fieldFSREV.setString(newvalue);
    }

    /**
     * Get value of field FSREV as a String.
     */
    public String getFSREV() {
        return fieldFSREV.getString();
    }

    /**
     * Set numeric field FSREV using a BigDecimal value.
     */
    public void setFSREV(BigDecimal newvalue) {
        fieldFSREV.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FSREV as a BigDecimal.
     */
    public BigDecimal getBigDecimalFSREV() {
        return fieldFSREV.getBigDecimal();
    }

    /**
     * Set field FVTO using a String value.
     */
    public void setFVTO(String newvalue) {
        fieldFVTO.setString(newvalue);
    }

    /**
     * Get value of field FVTO as a String.
     */
    public String getFVTO() {
        return fieldFVTO.getString();
    }

    /**
     * Set numeric field FVTO using a BigDecimal value.
     */
    public void setFVTO(BigDecimal newvalue) {
        fieldFVTO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FVTO as a BigDecimal.
     */
    public BigDecimal getBigDecimalFVTO() {
        return fieldFVTO.getBigDecimal();
    }

    /**
     * Set field SFLFEC using a String value.
     */
    public void setSFLFEC(String newvalue) {
        fieldSFLFEC.setString(newvalue);
    }

    /**
     * Get value of field SFLFEC as a String.
     */
    public String getSFLFEC() {
        return fieldSFLFEC.getString();
    }

    /**
     * Set numeric field SFLFEC using a BigDecimal value.
     */
    public void setSFLFEC(BigDecimal newvalue) {
        fieldSFLFEC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFLFEC as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFLFEC() {
        return fieldSFLFEC.getBigDecimal();
    }

    /**
     * Set field SFLIMP using a String value.
     */
    public void setSFLIMP(String newvalue) {
        fieldSFLIMP.setString(newvalue);
    }

    /**
     * Get value of field SFLIMP as a String.
     */
    public String getSFLIMP() {
        return fieldSFLIMP.getString();
    }

    /**
     * Set numeric field SFLIMP using a BigDecimal value.
     */
    public void setSFLIMP(BigDecimal newvalue) {
        fieldSFLIMP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFLIMP as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFLIMP() {
        return fieldSFLIMP.getBigDecimal();
    }

    /**
     * Set field SFLFIJ using a String value.
     */
    public void setSFLFIJ(String newvalue) {
        fieldSFLFIJ.setString(newvalue);
    }

    /**
     * Get value of field SFLFIJ as a String.
     */
    public String getSFLFIJ() {
        return fieldSFLFIJ.getString();
    }

    /**
     * Set numeric field SFLFIJ using a BigDecimal value.
     */
    public void setSFLFIJ(BigDecimal newvalue) {
        fieldSFLFIJ.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFLFIJ as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFLFIJ() {
        return fieldSFLFIJ.getBigDecimal();
    }

    /**
     * Set field SFLVAR using a String value.
     */
    public void setSFLVAR(String newvalue) {
        fieldSFLVAR.setString(newvalue);
    }

    /**
     * Get value of field SFLVAR as a String.
     */
    public String getSFLVAR() {
        return fieldSFLVAR.getString();
    }

    /**
     * Set numeric field SFLVAR using a BigDecimal value.
     */
    public void setSFLVAR(BigDecimal newvalue) {
        fieldSFLVAR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFLVAR as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFLVAR() {
        return fieldSFLVAR.getBigDecimal();
    }

    /**
     * Set field SFLAOS using a String value.
     */
    public void setSFLAOS(String newvalue) {
        fieldSFLAOS.setString(newvalue);
    }

    /**
     * Get value of field SFLAOS as a String.
     */
    public String getSFLAOS() {
        return fieldSFLAOS.getString();
    }

    /**
     * Set field CTLFEC using a String value.
     */
    public void setCTLFEC(String newvalue) {
        fieldCTLFEC.setString(newvalue);
    }

    /**
     * Get value of field CTLFEC as a String.
     */
    public String getCTLFEC() {
        return fieldCTLFEC.getString();
    }

    /**
     * Set numeric field CTLFEC using a BigDecimal value.
     */
    public void setCTLFEC(BigDecimal newvalue) {
        fieldCTLFEC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CTLFEC as a BigDecimal.
     */
    public BigDecimal getBigDecimalCTLFEC() {
        return fieldCTLFEC.getBigDecimal();
    }

    /**
     * Set field CTLIMP using a String value.
     */
    public void setCTLIMP(String newvalue) {
        fieldCTLIMP.setString(newvalue);
    }

    /**
     * Get value of field CTLIMP as a String.
     */
    public String getCTLIMP() {
        return fieldCTLIMP.getString();
    }

    /**
     * Set numeric field CTLIMP using a BigDecimal value.
     */
    public void setCTLIMP(BigDecimal newvalue) {
        fieldCTLIMP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CTLIMP as a BigDecimal.
     */
    public BigDecimal getBigDecimalCTLIMP() {
        return fieldCTLIMP.getBigDecimal();
    }

}
