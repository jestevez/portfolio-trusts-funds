package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from GPPRPM02FM physical file
 * definition.
 * 
* File level identifier is 1140202180029. Record format level identifier is
 * 3B06128A1B908.
 */
public class GPPRPM02FMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "REGCUR",
        "POSCUR",
        "CAMCUR",
        "NUCONT",
        "NUMOFI",
        "OFINOM",
        "CLINI1",
        "TOD1",
        "CLINI2",
        "TODO",
        "CLINIF",
        "COSDIV",
        "TEX2",
        "CONMNT",
        "NTAB",
        "NOMTAB",
        "FIJVAR",
        "COMANF",
        "MNTCO1",
        "COMAPF",
        "COMAEF",
        "COMCOF",
        "COMMOF",
        "MNTCOM",
        "TEXERR",
        "DATPCC",
        "DATREB",
        "COMAPO",
        "ICOAPO",
        "COMRET",
        "ICORET",
        "COMFIN",
        "ICOFIN",
        "GESCOD",
        "CODGES",
        "TOD3",
        "FECFIR",
        "FECEFE",
        "FECVT",
        "RENOV",
        "DATPER",
        "DATPRM",
        "DATMAX",
        "DATINT",
        "DATMIN",
        "DATMAE",
        "DATGA1",
        "DATGA2",
        "DATDE1",
        "DATDE2",
        "DATDE3",
        "AXCCAP",
        "AXCCPP",
        "AXCAMP",
        "AXCEDM",
        "AXCEMH",
        "AXCEMM",
        "AXCPRT"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "REGCUR",
        "POSCUR",
        "CAMCUR",
        "NUCONT",
        "NUMOFI",
        "OFINOM",
        "CLINI1",
        "TOD1",
        "CLINI2",
        "TODO",
        "CLINIF",
        "COSDIV",
        "TEX2",
        "CONMNT",
        "NTAB",
        "NOMTAB",
        "FIJVAR",
        "COMANF",
        "MNTCO1",
        "COMAPF",
        "COMAEF",
        "COMCOF",
        "COMMOF",
        "MNTCOM",
        "TEXERR",
        "DATPCC",
        "DATREB",
        "COMAPO",
        "ICOAPO",
        "COMRET",
        "ICORET",
        "COMFIN",
        "ICOFIN",
        "GESCOD",
        "CODGES",
        "TOD3",
        "FECFIR",
        "FECEFE",
        "FECVT",
        "RENOV",
        "DATPER",
        "DATPRM",
        "DATMAX",
        "DATINT",
        "DATMIN",
        "DATMAE",
        "DATGA1",
        "DATGA2",
        "DATDE1",
        "DATDE2",
        "DATDE3",
        "AXCCAP",
        "AXCCPP",
        "AXCAMP",
        "AXCEDM",
        "AXCEMH",
        "AXCEMM",
        "AXCPRT"
    };
    final static String fid = "1140202180029";
    final static String rid = "3B06128A1B908";
    final static String fmtname = "GPPRPM02FM";
    final int FIELDCOUNT = 67;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldREGCUR = null;
    private DecimalField fieldPOSCUR = null;
    private CharacterField fieldCAMCUR = null;
    private DecimalField fieldNUCONT = null;
    private DecimalField fieldNUMOFI = null;
    private CharacterField fieldOFINOM = null;
    private CharacterField fieldCLINI1 = null;
    private CharacterField fieldTOD1 = null;
    private CharacterField fieldCLINI2 = null;
    private CharacterField fieldTODO = null;
    private CharacterField fieldCLINIF = null;
    private DecimalField fieldCOSDIV = null;
    private CharacterField fieldTEX2 = null;
    private DecimalField fieldCONMNT = null;
    private DecimalField fieldNTAB = null;
    private CharacterField fieldNOMTAB = null;
    private CharacterField fieldFIJVAR = null;
    private DecimalField fieldCOMANF = null;
    private DecimalField fieldMNTCO1 = null;
    private DecimalField fieldCOMAPF = null;
    private DecimalField fieldCOMAEF = null;
    private DecimalField fieldCOMCOF = null;
    private DecimalField fieldCOMMOF = null;
    private DecimalField fieldMNTCOM = null;
    private CharacterField fieldTEXERR = null;
    private DecimalField fieldDATPCC = null;
    private CharacterField fieldDATREB = null;
    private DecimalField fieldCOMAPO = null;
    private DecimalField fieldICOAPO = null;
    private DecimalField fieldCOMRET = null;
    private DecimalField fieldICORET = null;
    private DecimalField fieldCOMFIN = null;
    private DecimalField fieldICOFIN = null;
    private DecimalField fieldGESCOD = null;
    private CharacterField fieldCODGES = null;
    private CharacterField fieldTOD3 = null;
    private DecimalField fieldFECFIR = null;
    private DecimalField fieldFECEFE = null;
    private DecimalField fieldFECVT = null;
    private CharacterField fieldRENOV = null;
    private CharacterField fieldDATPER = null;
    private DecimalField fieldDATPRM = null;
    private DecimalField fieldDATMAX = null;
    private DecimalField fieldDATINT = null;
    private DecimalField fieldDATMIN = null;
    private DecimalField fieldDATMAE = null;
    private DecimalField fieldDATGA1 = null;
    private DecimalField fieldDATGA2 = null;
    private DecimalField fieldDATDE1 = null;
    private DecimalField fieldDATDE2 = null;
    private DecimalField fieldDATDE3 = null;
    private DecimalField fieldAXCCAP = null;
    private DecimalField fieldAXCCPP = null;
    private DecimalField fieldAXCAMP = null;
    private DecimalField fieldAXCEDM = null;
    private DecimalField fieldAXCEMH = null;
    private DecimalField fieldAXCEMM = null;
    private DecimalField fieldAXCPRT = null;

    /**
     * Constructor for GPPRPM02FMMessage.
     */
    public GPPRPM02FMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 891;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldREGCUR
                = new CharacterField(message, HEADERSIZE + 161, 10, "REGCUR");
        fields[10] = fieldPOSCUR
                = new DecimalField(message, HEADERSIZE + 171, 5, 0, "POSCUR");
        fields[11] = fieldCAMCUR
                = new CharacterField(message, HEADERSIZE + 176, 10, "CAMCUR");
        fields[12] = fieldNUCONT
                = new DecimalField(message, HEADERSIZE + 186, 9, 0, "NUCONT");
        fields[13] = fieldNUMOFI
                = new DecimalField(message, HEADERSIZE + 195, 8, 0, "NUMOFI");
        fields[14] = fieldOFINOM
                = new CharacterField(message, HEADERSIZE + 203, 50, "OFINOM");
        fields[15] = fieldCLINI1
                = new CharacterField(message, HEADERSIZE + 253, 12, "CLINI1");
        fields[16] = fieldTOD1
                = new CharacterField(message, HEADERSIZE + 265, 50, "TOD1");
        fields[17] = fieldCLINI2
                = new CharacterField(message, HEADERSIZE + 315, 12, "CLINI2");
        fields[18] = fieldTODO
                = new CharacterField(message, HEADERSIZE + 327, 50, "TODO");
        fields[19] = fieldCLINIF
                = new CharacterField(message, HEADERSIZE + 377, 12, "CLINIF");
        fields[20] = fieldCOSDIV
                = new DecimalField(message, HEADERSIZE + 389, 4, 0, "COSDIV");
        fields[21] = fieldTEX2
                = new CharacterField(message, HEADERSIZE + 393, 30, "TEX2");
        fields[22] = fieldCONMNT
                = new DecimalField(message, HEADERSIZE + 423, 16, 2, "CONMNT");
        fields[23] = fieldNTAB
                = new DecimalField(message, HEADERSIZE + 439, 3, 0, "NTAB");
        fields[24] = fieldNOMTAB
                = new CharacterField(message, HEADERSIZE + 442, 30, "NOMTAB");
        fields[25] = fieldFIJVAR
                = new CharacterField(message, HEADERSIZE + 472, 1, "FIJVAR");
        fields[26] = fieldCOMANF
                = new DecimalField(message, HEADERSIZE + 473, 11, 6, "COMANF");
        fields[27] = fieldMNTCO1
                = new DecimalField(message, HEADERSIZE + 484, 11, 2, "MNTCO1");
        fields[28] = fieldCOMAPF
                = new DecimalField(message, HEADERSIZE + 495, 12, 2, "COMAPF");
        fields[29] = fieldCOMAEF
                = new DecimalField(message, HEADERSIZE + 507, 12, 2, "COMAEF");
        fields[30] = fieldCOMCOF
                = new DecimalField(message, HEADERSIZE + 519, 11, 6, "COMCOF");
        fields[31] = fieldCOMMOF
                = new DecimalField(message, HEADERSIZE + 530, 12, 2, "COMMOF");
        fields[32] = fieldMNTCOM
                = new DecimalField(message, HEADERSIZE + 542, 11, 2, "MNTCOM");
        fields[33] = fieldTEXERR
                = new CharacterField(message, HEADERSIZE + 553, 30, "TEXERR");
        fields[34] = fieldDATPCC
                = new DecimalField(message, HEADERSIZE + 583, 7, 2, "DATPCC");
        fields[35] = fieldDATREB
                = new CharacterField(message, HEADERSIZE + 590, 1, "DATREB");
        fields[36] = fieldCOMAPO
                = new DecimalField(message, HEADERSIZE + 591, 11, 6, "COMAPO");
        fields[37] = fieldICOAPO
                = new DecimalField(message, HEADERSIZE + 602, 17, 2, "ICOAPO");
        fields[38] = fieldCOMRET
                = new DecimalField(message, HEADERSIZE + 619, 11, 6, "COMRET");
        fields[39] = fieldICORET
                = new DecimalField(message, HEADERSIZE + 630, 17, 2, "ICORET");
        fields[40] = fieldCOMFIN
                = new DecimalField(message, HEADERSIZE + 647, 11, 6, "COMFIN");
        fields[41] = fieldICOFIN
                = new DecimalField(message, HEADERSIZE + 658, 17, 2, "ICOFIN");
        fields[42] = fieldGESCOD
                = new DecimalField(message, HEADERSIZE + 675, 3, 0, "GESCOD");
        fields[43] = fieldCODGES
                = new CharacterField(message, HEADERSIZE + 678, 12, "CODGES");
        fields[44] = fieldTOD3
                = new CharacterField(message, HEADERSIZE + 690, 50, "TOD3");
        fields[45] = fieldFECFIR
                = new DecimalField(message, HEADERSIZE + 740, 7, 0, "FECFIR");
        fields[46] = fieldFECEFE
                = new DecimalField(message, HEADERSIZE + 747, 7, 0, "FECEFE");
        fields[47] = fieldFECVT
                = new DecimalField(message, HEADERSIZE + 754, 7, 0, "FECVT");
        fields[48] = fieldRENOV
                = new CharacterField(message, HEADERSIZE + 761, 1, "RENOV");
        fields[49] = fieldDATPER
                = new CharacterField(message, HEADERSIZE + 762, 1, "DATPER");
        fields[50] = fieldDATPRM
                = new DecimalField(message, HEADERSIZE + 763, 7, 2, "DATPRM");
        fields[51] = fieldDATMAX
                = new DecimalField(message, HEADERSIZE + 770, 3, 0, "DATMAX");
        fields[52] = fieldDATINT
                = new DecimalField(message, HEADERSIZE + 773, 7, 2, "DATINT");
        fields[53] = fieldDATMIN
                = new DecimalField(message, HEADERSIZE + 780, 14, 2, "DATMIN");
        fields[54] = fieldDATMAE
                = new DecimalField(message, HEADERSIZE + 794, 14, 2, "DATMAE");
        fields[55] = fieldDATGA1
                = new DecimalField(message, HEADERSIZE + 808, 7, 2, "DATGA1");
        fields[56] = fieldDATGA2
                = new DecimalField(message, HEADERSIZE + 815, 14, 2, "DATGA2");
        fields[57] = fieldDATDE1
                = new DecimalField(message, HEADERSIZE + 829, 7, 2, "DATDE1");
        fields[58] = fieldDATDE2
                = new DecimalField(message, HEADERSIZE + 836, 14, 2, "DATDE2");
        fields[59] = fieldDATDE3
                = new DecimalField(message, HEADERSIZE + 850, 14, 2, "DATDE3");
        fields[60] = fieldAXCCAP
                = new DecimalField(message, HEADERSIZE + 864, 4, 0, "AXCCAP");
        fields[61] = fieldAXCCPP
                = new DecimalField(message, HEADERSIZE + 868, 4, 0, "AXCCPP");
        fields[62] = fieldAXCAMP
                = new DecimalField(message, HEADERSIZE + 872, 3, 0, "AXCAMP");
        fields[63] = fieldAXCEDM
                = new DecimalField(message, HEADERSIZE + 875, 3, 0, "AXCEDM");
        fields[64] = fieldAXCEMH
                = new DecimalField(message, HEADERSIZE + 878, 3, 0, "AXCEMH");
        fields[65] = fieldAXCEMM
                = new DecimalField(message, HEADERSIZE + 881, 3, 0, "AXCEMM");
        fields[66] = fieldAXCPRT
                = new DecimalField(message, HEADERSIZE + 884, 7, 2, "AXCPRT");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field REGCUR using a String value.
     */
    public void setREGCUR(String newvalue) {
        fieldREGCUR.setString(newvalue);
    }

    /**
     * Get value of field REGCUR as a String.
     */
    public String getREGCUR() {
        return fieldREGCUR.getString();
    }

    /**
     * Set field POSCUR using a String value.
     */
    public void setPOSCUR(String newvalue) {
        fieldPOSCUR.setString(newvalue);
    }

    /**
     * Get value of field POSCUR as a String.
     */
    public String getPOSCUR() {
        return fieldPOSCUR.getString();
    }

    /**
     * Set numeric field POSCUR using a BigDecimal value.
     */
    public void setPOSCUR(BigDecimal newvalue) {
        fieldPOSCUR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field POSCUR as a BigDecimal.
     */
    public BigDecimal getBigDecimalPOSCUR() {
        return fieldPOSCUR.getBigDecimal();
    }

    /**
     * Set field CAMCUR using a String value.
     */
    public void setCAMCUR(String newvalue) {
        fieldCAMCUR.setString(newvalue);
    }

    /**
     * Get value of field CAMCUR as a String.
     */
    public String getCAMCUR() {
        return fieldCAMCUR.getString();
    }

    /**
     * Set field NUCONT using a String value.
     */
    public void setNUCONT(String newvalue) {
        fieldNUCONT.setString(newvalue);
    }

    /**
     * Get value of field NUCONT as a String.
     */
    public String getNUCONT() {
        return fieldNUCONT.getString();
    }

    /**
     * Set numeric field NUCONT using a BigDecimal value.
     */
    public void setNUCONT(BigDecimal newvalue) {
        fieldNUCONT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field NUCONT as a BigDecimal.
     */
    public BigDecimal getBigDecimalNUCONT() {
        return fieldNUCONT.getBigDecimal();
    }

    /**
     * Set field NUMOFI using a String value.
     */
    public void setNUMOFI(String newvalue) {
        fieldNUMOFI.setString(newvalue);
    }

    /**
     * Get value of field NUMOFI as a String.
     */
    public String getNUMOFI() {
        return fieldNUMOFI.getString();
    }

    /**
     * Set numeric field NUMOFI using a BigDecimal value.
     */
    public void setNUMOFI(BigDecimal newvalue) {
        fieldNUMOFI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field NUMOFI as a BigDecimal.
     */
    public BigDecimal getBigDecimalNUMOFI() {
        return fieldNUMOFI.getBigDecimal();
    }

    /**
     * Set field OFINOM using a String value.
     */
    public void setOFINOM(String newvalue) {
        fieldOFINOM.setString(newvalue);
    }

    /**
     * Get value of field OFINOM as a String.
     */
    public String getOFINOM() {
        return fieldOFINOM.getString();
    }

    /**
     * Set field CLINI1 using a String value.
     */
    public void setCLINI1(String newvalue) {
        fieldCLINI1.setString(newvalue);
    }

    /**
     * Get value of field CLINI1 as a String.
     */
    public String getCLINI1() {
        return fieldCLINI1.getString();
    }

    /**
     * Set field TOD1 using a String value.
     */
    public void setTOD1(String newvalue) {
        fieldTOD1.setString(newvalue);
    }

    /**
     * Get value of field TOD1 as a String.
     */
    public String getTOD1() {
        return fieldTOD1.getString();
    }

    /**
     * Set field CLINI2 using a String value.
     */
    public void setCLINI2(String newvalue) {
        fieldCLINI2.setString(newvalue);
    }

    /**
     * Get value of field CLINI2 as a String.
     */
    public String getCLINI2() {
        return fieldCLINI2.getString();
    }

    /**
     * Set field TODO using a String value.
     */
    public void setTODO(String newvalue) {
        fieldTODO.setString(newvalue);
    }

    /**
     * Get value of field TODO as a String.
     */
    public String getTODO() {
        return fieldTODO.getString();
    }

    /**
     * Set field CLINIF using a String value.
     */
    public void setCLINIF(String newvalue) {
        fieldCLINIF.setString(newvalue);
    }

    /**
     * Get value of field CLINIF as a String.
     */
    public String getCLINIF() {
        return fieldCLINIF.getString();
    }

    /**
     * Set field COSDIV using a String value.
     */
    public void setCOSDIV(String newvalue) {
        fieldCOSDIV.setString(newvalue);
    }

    /**
     * Get value of field COSDIV as a String.
     */
    public String getCOSDIV() {
        return fieldCOSDIV.getString();
    }

    /**
     * Set numeric field COSDIV using a BigDecimal value.
     */
    public void setCOSDIV(BigDecimal newvalue) {
        fieldCOSDIV.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COSDIV as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOSDIV() {
        return fieldCOSDIV.getBigDecimal();
    }

    /**
     * Set field TEX2 using a String value.
     */
    public void setTEX2(String newvalue) {
        fieldTEX2.setString(newvalue);
    }

    /**
     * Get value of field TEX2 as a String.
     */
    public String getTEX2() {
        return fieldTEX2.getString();
    }

    /**
     * Set field CONMNT using a String value.
     */
    public void setCONMNT(String newvalue) {
        fieldCONMNT.setString(newvalue);
    }

    /**
     * Get value of field CONMNT as a String.
     */
    public String getCONMNT() {
        return fieldCONMNT.getString();
    }

    /**
     * Set numeric field CONMNT using a BigDecimal value.
     */
    public void setCONMNT(BigDecimal newvalue) {
        fieldCONMNT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CONMNT as a BigDecimal.
     */
    public BigDecimal getBigDecimalCONMNT() {
        return fieldCONMNT.getBigDecimal();
    }

    /**
     * Set field NTAB using a String value.
     */
    public void setNTAB(String newvalue) {
        fieldNTAB.setString(newvalue);
    }

    /**
     * Get value of field NTAB as a String.
     */
    public String getNTAB() {
        return fieldNTAB.getString();
    }

    /**
     * Set numeric field NTAB using a BigDecimal value.
     */
    public void setNTAB(BigDecimal newvalue) {
        fieldNTAB.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field NTAB as a BigDecimal.
     */
    public BigDecimal getBigDecimalNTAB() {
        return fieldNTAB.getBigDecimal();
    }

    /**
     * Set field NOMTAB using a String value.
     */
    public void setNOMTAB(String newvalue) {
        fieldNOMTAB.setString(newvalue);
    }

    /**
     * Get value of field NOMTAB as a String.
     */
    public String getNOMTAB() {
        return fieldNOMTAB.getString();
    }

    /**
     * Set field FIJVAR using a String value.
     */
    public void setFIJVAR(String newvalue) {
        fieldFIJVAR.setString(newvalue);
    }

    /**
     * Get value of field FIJVAR as a String.
     */
    public String getFIJVAR() {
        return fieldFIJVAR.getString();
    }

    /**
     * Set field COMANF using a String value.
     */
    public void setCOMANF(String newvalue) {
        fieldCOMANF.setString(newvalue);
    }

    /**
     * Get value of field COMANF as a String.
     */
    public String getCOMANF() {
        return fieldCOMANF.getString();
    }

    /**
     * Set numeric field COMANF using a BigDecimal value.
     */
    public void setCOMANF(BigDecimal newvalue) {
        fieldCOMANF.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMANF as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMANF() {
        return fieldCOMANF.getBigDecimal();
    }

    /**
     * Set field MNTCO1 using a String value.
     */
    public void setMNTCO1(String newvalue) {
        fieldMNTCO1.setString(newvalue);
    }

    /**
     * Get value of field MNTCO1 as a String.
     */
    public String getMNTCO1() {
        return fieldMNTCO1.getString();
    }

    /**
     * Set numeric field MNTCO1 using a BigDecimal value.
     */
    public void setMNTCO1(BigDecimal newvalue) {
        fieldMNTCO1.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field MNTCO1 as a BigDecimal.
     */
    public BigDecimal getBigDecimalMNTCO1() {
        return fieldMNTCO1.getBigDecimal();
    }

    /**
     * Set field COMAPF using a String value.
     */
    public void setCOMAPF(String newvalue) {
        fieldCOMAPF.setString(newvalue);
    }

    /**
     * Get value of field COMAPF as a String.
     */
    public String getCOMAPF() {
        return fieldCOMAPF.getString();
    }

    /**
     * Set numeric field COMAPF using a BigDecimal value.
     */
    public void setCOMAPF(BigDecimal newvalue) {
        fieldCOMAPF.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMAPF as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMAPF() {
        return fieldCOMAPF.getBigDecimal();
    }

    /**
     * Set field COMAEF using a String value.
     */
    public void setCOMAEF(String newvalue) {
        fieldCOMAEF.setString(newvalue);
    }

    /**
     * Get value of field COMAEF as a String.
     */
    public String getCOMAEF() {
        return fieldCOMAEF.getString();
    }

    /**
     * Set numeric field COMAEF using a BigDecimal value.
     */
    public void setCOMAEF(BigDecimal newvalue) {
        fieldCOMAEF.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMAEF as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMAEF() {
        return fieldCOMAEF.getBigDecimal();
    }

    /**
     * Set field COMCOF using a String value.
     */
    public void setCOMCOF(String newvalue) {
        fieldCOMCOF.setString(newvalue);
    }

    /**
     * Get value of field COMCOF as a String.
     */
    public String getCOMCOF() {
        return fieldCOMCOF.getString();
    }

    /**
     * Set numeric field COMCOF using a BigDecimal value.
     */
    public void setCOMCOF(BigDecimal newvalue) {
        fieldCOMCOF.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMCOF as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMCOF() {
        return fieldCOMCOF.getBigDecimal();
    }

    /**
     * Set field COMMOF using a String value.
     */
    public void setCOMMOF(String newvalue) {
        fieldCOMMOF.setString(newvalue);
    }

    /**
     * Get value of field COMMOF as a String.
     */
    public String getCOMMOF() {
        return fieldCOMMOF.getString();
    }

    /**
     * Set numeric field COMMOF using a BigDecimal value.
     */
    public void setCOMMOF(BigDecimal newvalue) {
        fieldCOMMOF.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMMOF as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMMOF() {
        return fieldCOMMOF.getBigDecimal();
    }

    /**
     * Set field MNTCOM using a String value.
     */
    public void setMNTCOM(String newvalue) {
        fieldMNTCOM.setString(newvalue);
    }

    /**
     * Get value of field MNTCOM as a String.
     */
    public String getMNTCOM() {
        return fieldMNTCOM.getString();
    }

    /**
     * Set numeric field MNTCOM using a BigDecimal value.
     */
    public void setMNTCOM(BigDecimal newvalue) {
        fieldMNTCOM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field MNTCOM as a BigDecimal.
     */
    public BigDecimal getBigDecimalMNTCOM() {
        return fieldMNTCOM.getBigDecimal();
    }

    /**
     * Set field TEXERR using a String value.
     */
    public void setTEXERR(String newvalue) {
        fieldTEXERR.setString(newvalue);
    }

    /**
     * Get value of field TEXERR as a String.
     */
    public String getTEXERR() {
        return fieldTEXERR.getString();
    }

    /**
     * Set field DATPCC using a String value.
     */
    public void setDATPCC(String newvalue) {
        fieldDATPCC.setString(newvalue);
    }

    /**
     * Get value of field DATPCC as a String.
     */
    public String getDATPCC() {
        return fieldDATPCC.getString();
    }

    /**
     * Set numeric field DATPCC using a BigDecimal value.
     */
    public void setDATPCC(BigDecimal newvalue) {
        fieldDATPCC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATPCC as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATPCC() {
        return fieldDATPCC.getBigDecimal();
    }

    /**
     * Set field DATREB using a String value.
     */
    public void setDATREB(String newvalue) {
        fieldDATREB.setString(newvalue);
    }

    /**
     * Get value of field DATREB as a String.
     */
    public String getDATREB() {
        return fieldDATREB.getString();
    }

    /**
     * Set field COMAPO using a String value.
     */
    public void setCOMAPO(String newvalue) {
        fieldCOMAPO.setString(newvalue);
    }

    /**
     * Get value of field COMAPO as a String.
     */
    public String getCOMAPO() {
        return fieldCOMAPO.getString();
    }

    /**
     * Set numeric field COMAPO using a BigDecimal value.
     */
    public void setCOMAPO(BigDecimal newvalue) {
        fieldCOMAPO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMAPO as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMAPO() {
        return fieldCOMAPO.getBigDecimal();
    }

    /**
     * Set field ICOAPO using a String value.
     */
    public void setICOAPO(String newvalue) {
        fieldICOAPO.setString(newvalue);
    }

    /**
     * Get value of field ICOAPO as a String.
     */
    public String getICOAPO() {
        return fieldICOAPO.getString();
    }

    /**
     * Set numeric field ICOAPO using a BigDecimal value.
     */
    public void setICOAPO(BigDecimal newvalue) {
        fieldICOAPO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field ICOAPO as a BigDecimal.
     */
    public BigDecimal getBigDecimalICOAPO() {
        return fieldICOAPO.getBigDecimal();
    }

    /**
     * Set field COMRET using a String value.
     */
    public void setCOMRET(String newvalue) {
        fieldCOMRET.setString(newvalue);
    }

    /**
     * Get value of field COMRET as a String.
     */
    public String getCOMRET() {
        return fieldCOMRET.getString();
    }

    /**
     * Set numeric field COMRET using a BigDecimal value.
     */
    public void setCOMRET(BigDecimal newvalue) {
        fieldCOMRET.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMRET as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMRET() {
        return fieldCOMRET.getBigDecimal();
    }

    /**
     * Set field ICORET using a String value.
     */
    public void setICORET(String newvalue) {
        fieldICORET.setString(newvalue);
    }

    /**
     * Get value of field ICORET as a String.
     */
    public String getICORET() {
        return fieldICORET.getString();
    }

    /**
     * Set numeric field ICORET using a BigDecimal value.
     */
    public void setICORET(BigDecimal newvalue) {
        fieldICORET.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field ICORET as a BigDecimal.
     */
    public BigDecimal getBigDecimalICORET() {
        return fieldICORET.getBigDecimal();
    }

    /**
     * Set field COMFIN using a String value.
     */
    public void setCOMFIN(String newvalue) {
        fieldCOMFIN.setString(newvalue);
    }

    /**
     * Get value of field COMFIN as a String.
     */
    public String getCOMFIN() {
        return fieldCOMFIN.getString();
    }

    /**
     * Set numeric field COMFIN using a BigDecimal value.
     */
    public void setCOMFIN(BigDecimal newvalue) {
        fieldCOMFIN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field COMFIN as a BigDecimal.
     */
    public BigDecimal getBigDecimalCOMFIN() {
        return fieldCOMFIN.getBigDecimal();
    }

    /**
     * Set field ICOFIN using a String value.
     */
    public void setICOFIN(String newvalue) {
        fieldICOFIN.setString(newvalue);
    }

    /**
     * Get value of field ICOFIN as a String.
     */
    public String getICOFIN() {
        return fieldICOFIN.getString();
    }

    /**
     * Set numeric field ICOFIN using a BigDecimal value.
     */
    public void setICOFIN(BigDecimal newvalue) {
        fieldICOFIN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field ICOFIN as a BigDecimal.
     */
    public BigDecimal getBigDecimalICOFIN() {
        return fieldICOFIN.getBigDecimal();
    }

    /**
     * Set field GESCOD using a String value.
     */
    public void setGESCOD(String newvalue) {
        fieldGESCOD.setString(newvalue);
    }

    /**
     * Get value of field GESCOD as a String.
     */
    public String getGESCOD() {
        return fieldGESCOD.getString();
    }

    /**
     * Set numeric field GESCOD using a BigDecimal value.
     */
    public void setGESCOD(BigDecimal newvalue) {
        fieldGESCOD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field GESCOD as a BigDecimal.
     */
    public BigDecimal getBigDecimalGESCOD() {
        return fieldGESCOD.getBigDecimal();
    }

    /**
     * Set field CODGES using a String value.
     */
    public void setCODGES(String newvalue) {
        fieldCODGES.setString(newvalue);
    }

    /**
     * Get value of field CODGES as a String.
     */
    public String getCODGES() {
        return fieldCODGES.getString();
    }

    /**
     * Set field TOD3 using a String value.
     */
    public void setTOD3(String newvalue) {
        fieldTOD3.setString(newvalue);
    }

    /**
     * Get value of field TOD3 as a String.
     */
    public String getTOD3() {
        return fieldTOD3.getString();
    }

    /**
     * Set field FECFIR using a String value.
     */
    public void setFECFIR(String newvalue) {
        fieldFECFIR.setString(newvalue);
    }

    /**
     * Get value of field FECFIR as a String.
     */
    public String getFECFIR() {
        return fieldFECFIR.getString();
    }

    /**
     * Set numeric field FECFIR using a BigDecimal value.
     */
    public void setFECFIR(BigDecimal newvalue) {
        fieldFECFIR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECFIR as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECFIR() {
        return fieldFECFIR.getBigDecimal();
    }

    /**
     * Set field FECEFE using a String value.
     */
    public void setFECEFE(String newvalue) {
        fieldFECEFE.setString(newvalue);
    }

    /**
     * Get value of field FECEFE as a String.
     */
    public String getFECEFE() {
        return fieldFECEFE.getString();
    }

    /**
     * Set numeric field FECEFE using a BigDecimal value.
     */
    public void setFECEFE(BigDecimal newvalue) {
        fieldFECEFE.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECEFE as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECEFE() {
        return fieldFECEFE.getBigDecimal();
    }

    /**
     * Set field FECVT using a String value.
     */
    public void setFECVT(String newvalue) {
        fieldFECVT.setString(newvalue);
    }

    /**
     * Get value of field FECVT as a String.
     */
    public String getFECVT() {
        return fieldFECVT.getString();
    }

    /**
     * Set numeric field FECVT using a BigDecimal value.
     */
    public void setFECVT(BigDecimal newvalue) {
        fieldFECVT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECVT as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECVT() {
        return fieldFECVT.getBigDecimal();
    }

    /**
     * Set field RENOV using a String value.
     */
    public void setRENOV(String newvalue) {
        fieldRENOV.setString(newvalue);
    }

    /**
     * Get value of field RENOV as a String.
     */
    public String getRENOV() {
        return fieldRENOV.getString();
    }

    /**
     * Set field DATPER using a String value.
     */
    public void setDATPER(String newvalue) {
        fieldDATPER.setString(newvalue);
    }

    /**
     * Get value of field DATPER as a String.
     */
    public String getDATPER() {
        return fieldDATPER.getString();
    }

    /**
     * Set field DATPRM using a String value.
     */
    public void setDATPRM(String newvalue) {
        fieldDATPRM.setString(newvalue);
    }

    /**
     * Get value of field DATPRM as a String.
     */
    public String getDATPRM() {
        return fieldDATPRM.getString();
    }

    /**
     * Set numeric field DATPRM using a BigDecimal value.
     */
    public void setDATPRM(BigDecimal newvalue) {
        fieldDATPRM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATPRM as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATPRM() {
        return fieldDATPRM.getBigDecimal();
    }

    /**
     * Set field DATMAX using a String value.
     */
    public void setDATMAX(String newvalue) {
        fieldDATMAX.setString(newvalue);
    }

    /**
     * Get value of field DATMAX as a String.
     */
    public String getDATMAX() {
        return fieldDATMAX.getString();
    }

    /**
     * Set numeric field DATMAX using a BigDecimal value.
     */
    public void setDATMAX(BigDecimal newvalue) {
        fieldDATMAX.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATMAX as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATMAX() {
        return fieldDATMAX.getBigDecimal();
    }

    /**
     * Set field DATINT using a String value.
     */
    public void setDATINT(String newvalue) {
        fieldDATINT.setString(newvalue);
    }

    /**
     * Get value of field DATINT as a String.
     */
    public String getDATINT() {
        return fieldDATINT.getString();
    }

    /**
     * Set numeric field DATINT using a BigDecimal value.
     */
    public void setDATINT(BigDecimal newvalue) {
        fieldDATINT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATINT as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATINT() {
        return fieldDATINT.getBigDecimal();
    }

    /**
     * Set field DATMIN using a String value.
     */
    public void setDATMIN(String newvalue) {
        fieldDATMIN.setString(newvalue);
    }

    /**
     * Get value of field DATMIN as a String.
     */
    public String getDATMIN() {
        return fieldDATMIN.getString();
    }

    /**
     * Set numeric field DATMIN using a BigDecimal value.
     */
    public void setDATMIN(BigDecimal newvalue) {
        fieldDATMIN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATMIN as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATMIN() {
        return fieldDATMIN.getBigDecimal();
    }

    /**
     * Set field DATMAE using a String value.
     */
    public void setDATMAE(String newvalue) {
        fieldDATMAE.setString(newvalue);
    }

    /**
     * Get value of field DATMAE as a String.
     */
    public String getDATMAE() {
        return fieldDATMAE.getString();
    }

    /**
     * Set numeric field DATMAE using a BigDecimal value.
     */
    public void setDATMAE(BigDecimal newvalue) {
        fieldDATMAE.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATMAE as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATMAE() {
        return fieldDATMAE.getBigDecimal();
    }

    /**
     * Set field DATGA1 using a String value.
     */
    public void setDATGA1(String newvalue) {
        fieldDATGA1.setString(newvalue);
    }

    /**
     * Get value of field DATGA1 as a String.
     */
    public String getDATGA1() {
        return fieldDATGA1.getString();
    }

    /**
     * Set numeric field DATGA1 using a BigDecimal value.
     */
    public void setDATGA1(BigDecimal newvalue) {
        fieldDATGA1.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATGA1 as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATGA1() {
        return fieldDATGA1.getBigDecimal();
    }

    /**
     * Set field DATGA2 using a String value.
     */
    public void setDATGA2(String newvalue) {
        fieldDATGA2.setString(newvalue);
    }

    /**
     * Get value of field DATGA2 as a String.
     */
    public String getDATGA2() {
        return fieldDATGA2.getString();
    }

    /**
     * Set numeric field DATGA2 using a BigDecimal value.
     */
    public void setDATGA2(BigDecimal newvalue) {
        fieldDATGA2.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATGA2 as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATGA2() {
        return fieldDATGA2.getBigDecimal();
    }

    /**
     * Set field DATDE1 using a String value.
     */
    public void setDATDE1(String newvalue) {
        fieldDATDE1.setString(newvalue);
    }

    /**
     * Get value of field DATDE1 as a String.
     */
    public String getDATDE1() {
        return fieldDATDE1.getString();
    }

    /**
     * Set numeric field DATDE1 using a BigDecimal value.
     */
    public void setDATDE1(BigDecimal newvalue) {
        fieldDATDE1.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATDE1 as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATDE1() {
        return fieldDATDE1.getBigDecimal();
    }

    /**
     * Set field DATDE2 using a String value.
     */
    public void setDATDE2(String newvalue) {
        fieldDATDE2.setString(newvalue);
    }

    /**
     * Get value of field DATDE2 as a String.
     */
    public String getDATDE2() {
        return fieldDATDE2.getString();
    }

    /**
     * Set numeric field DATDE2 using a BigDecimal value.
     */
    public void setDATDE2(BigDecimal newvalue) {
        fieldDATDE2.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATDE2 as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATDE2() {
        return fieldDATDE2.getBigDecimal();
    }

    /**
     * Set field DATDE3 using a String value.
     */
    public void setDATDE3(String newvalue) {
        fieldDATDE3.setString(newvalue);
    }

    /**
     * Get value of field DATDE3 as a String.
     */
    public String getDATDE3() {
        return fieldDATDE3.getString();
    }

    /**
     * Set numeric field DATDE3 using a BigDecimal value.
     */
    public void setDATDE3(BigDecimal newvalue) {
        fieldDATDE3.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field DATDE3 as a BigDecimal.
     */
    public BigDecimal getBigDecimalDATDE3() {
        return fieldDATDE3.getBigDecimal();
    }

    /**
     * Set field AXCCAP using a String value.
     */
    public void setAXCCAP(String newvalue) {
        fieldAXCCAP.setString(newvalue);
    }

    /**
     * Get value of field AXCCAP as a String.
     */
    public String getAXCCAP() {
        return fieldAXCCAP.getString();
    }

    /**
     * Set numeric field AXCCAP using a BigDecimal value.
     */
    public void setAXCCAP(BigDecimal newvalue) {
        fieldAXCCAP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AXCCAP as a BigDecimal.
     */
    public BigDecimal getBigDecimalAXCCAP() {
        return fieldAXCCAP.getBigDecimal();
    }

    /**
     * Set field AXCCPP using a String value.
     */
    public void setAXCCPP(String newvalue) {
        fieldAXCCPP.setString(newvalue);
    }

    /**
     * Get value of field AXCCPP as a String.
     */
    public String getAXCCPP() {
        return fieldAXCCPP.getString();
    }

    /**
     * Set numeric field AXCCPP using a BigDecimal value.
     */
    public void setAXCCPP(BigDecimal newvalue) {
        fieldAXCCPP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AXCCPP as a BigDecimal.
     */
    public BigDecimal getBigDecimalAXCCPP() {
        return fieldAXCCPP.getBigDecimal();
    }

    /**
     * Set field AXCAMP using a String value.
     */
    public void setAXCAMP(String newvalue) {
        fieldAXCAMP.setString(newvalue);
    }

    /**
     * Get value of field AXCAMP as a String.
     */
    public String getAXCAMP() {
        return fieldAXCAMP.getString();
    }

    /**
     * Set numeric field AXCAMP using a BigDecimal value.
     */
    public void setAXCAMP(BigDecimal newvalue) {
        fieldAXCAMP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AXCAMP as a BigDecimal.
     */
    public BigDecimal getBigDecimalAXCAMP() {
        return fieldAXCAMP.getBigDecimal();
    }

    /**
     * Set field AXCEDM using a String value.
     */
    public void setAXCEDM(String newvalue) {
        fieldAXCEDM.setString(newvalue);
    }

    /**
     * Get value of field AXCEDM as a String.
     */
    public String getAXCEDM() {
        return fieldAXCEDM.getString();
    }

    /**
     * Set numeric field AXCEDM using a BigDecimal value.
     */
    public void setAXCEDM(BigDecimal newvalue) {
        fieldAXCEDM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AXCEDM as a BigDecimal.
     */
    public BigDecimal getBigDecimalAXCEDM() {
        return fieldAXCEDM.getBigDecimal();
    }

    /**
     * Set field AXCEMH using a String value.
     */
    public void setAXCEMH(String newvalue) {
        fieldAXCEMH.setString(newvalue);
    }

    /**
     * Get value of field AXCEMH as a String.
     */
    public String getAXCEMH() {
        return fieldAXCEMH.getString();
    }

    /**
     * Set numeric field AXCEMH using a BigDecimal value.
     */
    public void setAXCEMH(BigDecimal newvalue) {
        fieldAXCEMH.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AXCEMH as a BigDecimal.
     */
    public BigDecimal getBigDecimalAXCEMH() {
        return fieldAXCEMH.getBigDecimal();
    }

    /**
     * Set field AXCEMM using a String value.
     */
    public void setAXCEMM(String newvalue) {
        fieldAXCEMM.setString(newvalue);
    }

    /**
     * Get value of field AXCEMM as a String.
     */
    public String getAXCEMM() {
        return fieldAXCEMM.getString();
    }

    /**
     * Set numeric field AXCEMM using a BigDecimal value.
     */
    public void setAXCEMM(BigDecimal newvalue) {
        fieldAXCEMM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AXCEMM as a BigDecimal.
     */
    public BigDecimal getBigDecimalAXCEMM() {
        return fieldAXCEMM.getBigDecimal();
    }

    /**
     * Set field AXCPRT using a String value.
     */
    public void setAXCPRT(String newvalue) {
        fieldAXCPRT.setString(newvalue);
    }

    /**
     * Get value of field AXCPRT as a String.
     */
    public String getAXCPRT() {
        return fieldAXCPRT.getString();
    }

    /**
     * Set numeric field AXCPRT using a BigDecimal value.
     */
    public void setAXCPRT(BigDecimal newvalue) {
        fieldAXCPRT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field AXCPRT as a BigDecimal.
     */
    public BigDecimal getBigDecimalAXCPRT() {
        return fieldAXCPRT.getBigDecimal();
    }

}
