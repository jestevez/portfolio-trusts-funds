package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from VALIDACTFM physical file
 * definition.
 * 
* File level identifier is 1140216164353. Record format level identifier is
 * 3938A53705008.
 */
public class VALIDACTFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "CLAAUT",
        "AREAACT",
        "FIDNOM",
        "FIDTXT",
        "VLOCOA",
        "VLONOM",
        "GRUNOM",
        "VLOFIS",
        "NOMBRE",
        "VLOSE1",
        "VLOUNI",
        "VLOUDE",
        "VLOUCA",
        "VLOTAS",
        "SINO"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "CLAAUT",
        "AREAACT",
        "FIDNOM",
        "FIDTXT",
        "VLOCOA",
        "VLONOM",
        "GRUNOM",
        "VLOFIS",
        "NOMBRE",
        "VLOSE1",
        "VLOUNI",
        "VLOUDE",
        "VLOUCA",
        "VLOTAS",
        "SINO"
    };
    final static String fid = "1140216164353";
    final static String rid = "3938A53705008";
    final static String fmtname = "VALIDACTFM";
    final int FIELDCOUNT = 24;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldCLAAUT = null;
    private CharacterField fieldAREAACT = null;
    private CharacterField fieldFIDNOM = null;
    private CharacterField fieldFIDTXT = null;
    private CharacterField fieldVLOCOA = null;
    private CharacterField fieldVLONOM = null;
    private CharacterField fieldGRUNOM = null;
    private DecimalField fieldVLOFIS = null;
    private CharacterField fieldNOMBRE = null;
    private DecimalField fieldVLOSE1 = null;
    private DecimalField fieldVLOUNI = null;
    private DecimalField fieldVLOUDE = null;
    private DecimalField fieldVLOUCA = null;
    private DecimalField fieldVLOTAS = null;
    private CharacterField fieldSINO = null;

    /**
     * Constructor for VALIDACTFMMessage.
     */
    public VALIDACTFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 433;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldCLAAUT
                = new CharacterField(message, HEADERSIZE + 161, 6, "CLAAUT");
        fields[10] = fieldAREAACT
                = new CharacterField(message, HEADERSIZE + 167, 4, "AREAACT");
        fields[11] = fieldFIDNOM
                = new CharacterField(message, HEADERSIZE + 171, 40, "FIDNOM");
        fields[12] = fieldFIDTXT
                = new CharacterField(message, HEADERSIZE + 211, 14, "FIDTXT");
        fields[13] = fieldVLOCOA
                = new CharacterField(message, HEADERSIZE + 225, 12, "VLOCOA");
        fields[14] = fieldVLONOM
                = new CharacterField(message, HEADERSIZE + 237, 40, "VLONOM");
        fields[15] = fieldGRUNOM
                = new CharacterField(message, HEADERSIZE + 277, 40, "GRUNOM");
        fields[16] = fieldVLOFIS
                = new DecimalField(message, HEADERSIZE + 317, 8, 0, "VLOFIS");
        fields[17] = fieldNOMBRE
                = new CharacterField(message, HEADERSIZE + 325, 50, "NOMBRE");
        fields[18] = fieldVLOSE1
                = new DecimalField(message, HEADERSIZE + 375, 17, 2, "VLOSE1");
        fields[19] = fieldVLOUNI
                = new DecimalField(message, HEADERSIZE + 392, 15, 2, "VLOUNI");
        fields[20] = fieldVLOUDE
                = new DecimalField(message, HEADERSIZE + 407, 7, 0, "VLOUDE");
        fields[21] = fieldVLOUCA
                = new DecimalField(message, HEADERSIZE + 414, 7, 0, "VLOUCA");
        fields[22] = fieldVLOTAS
                = new DecimalField(message, HEADERSIZE + 421, 11, 6, "VLOTAS");
        fields[23] = fieldSINO
                = new CharacterField(message, HEADERSIZE + 432, 1, "SINO");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field CLAAUT using a String value.
     */
    public void setCLAAUT(String newvalue) {
        fieldCLAAUT.setString(newvalue);
    }

    /**
     * Get value of field CLAAUT as a String.
     */
    public String getCLAAUT() {
        return fieldCLAAUT.getString();
    }

    /**
     * Set field AREAACT using a String value.
     */
    public void setAREAACT(String newvalue) {
        fieldAREAACT.setString(newvalue);
    }

    /**
     * Get value of field AREAACT as a String.
     */
    public String getAREAACT() {
        return fieldAREAACT.getString();
    }

    /**
     * Set field FIDNOM using a String value.
     */
    public void setFIDNOM(String newvalue) {
        fieldFIDNOM.setString(newvalue);
    }

    /**
     * Get value of field FIDNOM as a String.
     */
    public String getFIDNOM() {
        return fieldFIDNOM.getString();
    }

    /**
     * Set field FIDTXT using a String value.
     */
    public void setFIDTXT(String newvalue) {
        fieldFIDTXT.setString(newvalue);
    }

    /**
     * Get value of field FIDTXT as a String.
     */
    public String getFIDTXT() {
        return fieldFIDTXT.getString();
    }

    /**
     * Set field VLOCOA using a String value.
     */
    public void setVLOCOA(String newvalue) {
        fieldVLOCOA.setString(newvalue);
    }

    /**
     * Get value of field VLOCOA as a String.
     */
    public String getVLOCOA() {
        return fieldVLOCOA.getString();
    }

    /**
     * Set field VLONOM using a String value.
     */
    public void setVLONOM(String newvalue) {
        fieldVLONOM.setString(newvalue);
    }

    /**
     * Get value of field VLONOM as a String.
     */
    public String getVLONOM() {
        return fieldVLONOM.getString();
    }

    /**
     * Set field GRUNOM using a String value.
     */
    public void setGRUNOM(String newvalue) {
        fieldGRUNOM.setString(newvalue);
    }

    /**
     * Get value of field GRUNOM as a String.
     */
    public String getGRUNOM() {
        return fieldGRUNOM.getString();
    }

    /**
     * Set field VLOFIS using a String value.
     */
    public void setVLOFIS(String newvalue) {
        fieldVLOFIS.setString(newvalue);
    }

    /**
     * Get value of field VLOFIS as a String.
     */
    public String getVLOFIS() {
        return fieldVLOFIS.getString();
    }

    /**
     * Set numeric field VLOFIS using a BigDecimal value.
     */
    public void setVLOFIS(BigDecimal newvalue) {
        fieldVLOFIS.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field VLOFIS as a BigDecimal.
     */
    public BigDecimal getBigDecimalVLOFIS() {
        return fieldVLOFIS.getBigDecimal();
    }

    /**
     * Set field NOMBRE using a String value.
     */
    public void setNOMBRE(String newvalue) {
        fieldNOMBRE.setString(newvalue);
    }

    /**
     * Get value of field NOMBRE as a String.
     */
    public String getNOMBRE() {
        return fieldNOMBRE.getString();
    }

    /**
     * Set field VLOSE1 using a String value.
     */
    public void setVLOSE1(String newvalue) {
        fieldVLOSE1.setString(newvalue);
    }

    /**
     * Get value of field VLOSE1 as a String.
     */
    public String getVLOSE1() {
        return fieldVLOSE1.getString();
    }

    /**
     * Set numeric field VLOSE1 using a BigDecimal value.
     */
    public void setVLOSE1(BigDecimal newvalue) {
        fieldVLOSE1.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field VLOSE1 as a BigDecimal.
     */
    public BigDecimal getBigDecimalVLOSE1() {
        return fieldVLOSE1.getBigDecimal();
    }

    /**
     * Set field VLOUNI using a String value.
     */
    public void setVLOUNI(String newvalue) {
        fieldVLOUNI.setString(newvalue);
    }

    /**
     * Get value of field VLOUNI as a String.
     */
    public String getVLOUNI() {
        return fieldVLOUNI.getString();
    }

    /**
     * Set numeric field VLOUNI using a BigDecimal value.
     */
    public void setVLOUNI(BigDecimal newvalue) {
        fieldVLOUNI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field VLOUNI as a BigDecimal.
     */
    public BigDecimal getBigDecimalVLOUNI() {
        return fieldVLOUNI.getBigDecimal();
    }

    /**
     * Set field VLOUDE using a String value.
     */
    public void setVLOUDE(String newvalue) {
        fieldVLOUDE.setString(newvalue);
    }

    /**
     * Get value of field VLOUDE as a String.
     */
    public String getVLOUDE() {
        return fieldVLOUDE.getString();
    }

    /**
     * Set numeric field VLOUDE using a BigDecimal value.
     */
    public void setVLOUDE(BigDecimal newvalue) {
        fieldVLOUDE.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field VLOUDE as a BigDecimal.
     */
    public BigDecimal getBigDecimalVLOUDE() {
        return fieldVLOUDE.getBigDecimal();
    }

    /**
     * Set field VLOUCA using a String value.
     */
    public void setVLOUCA(String newvalue) {
        fieldVLOUCA.setString(newvalue);
    }

    /**
     * Get value of field VLOUCA as a String.
     */
    public String getVLOUCA() {
        return fieldVLOUCA.getString();
    }

    /**
     * Set numeric field VLOUCA using a BigDecimal value.
     */
    public void setVLOUCA(BigDecimal newvalue) {
        fieldVLOUCA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field VLOUCA as a BigDecimal.
     */
    public BigDecimal getBigDecimalVLOUCA() {
        return fieldVLOUCA.getBigDecimal();
    }

    /**
     * Set field VLOTAS using a String value.
     */
    public void setVLOTAS(String newvalue) {
        fieldVLOTAS.setString(newvalue);
    }

    /**
     * Get value of field VLOTAS as a String.
     */
    public String getVLOTAS() {
        return fieldVLOTAS.getString();
    }

    /**
     * Set numeric field VLOTAS using a BigDecimal value.
     */
    public void setVLOTAS(BigDecimal newvalue) {
        fieldVLOTAS.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field VLOTAS as a BigDecimal.
     */
    public BigDecimal getBigDecimalVLOTAS() {
        return fieldVLOTAS.getBigDecimal();
    }

    /**
     * Set field SINO using a String value.
     */
    public void setSINO(String newvalue) {
        fieldSINO.setString(newvalue);
    }

    /**
     * Get value of field SINO as a String.
     */
    public String getSINO() {
        return fieldSINO.getString();
    }

}
