package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from ACTMOVFM physical file
 * definition.
 * 
* File level identifier is 1140202175804. Record format level identifier is
 * 4A95C3C704D9C.
 */
public class ACTMOVFMMessage extends MessageRecord {

    final static String fldnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "FIDE",
        "CODFID",
        "PANDEP",
        "PANFEC",
        "SFNRO",
        "SFECV",
        "SFCLI",
        "SFBVI",
        "SFRE1",
        "SFRE2",
        "SFSEL",
        "SFDIV",
        "SFCTA",
        "SFIMD",
        "SFDH",
        "SFCON",
        "NRR",
        "SALDO",
        "SENT",
        "PANDDP",
        "PANDIV",
        "PANDDI",
        "PANDH",
        "PANRE1",
        "PANRE2",
        "BANVIS",
        "PANCTA",
        "CTANOM",
        "PANIMD",
        "PANIMP",
        "CLACON",
        "CONNOM",
        "FECVAL"
    };
    final static String tnames[] = {
        "HDAT",
        "HTIM",
        "HUSR",
        "HENV",
        "HXML",
        "HSEC",
        "HFIL",
        "HLEN",
        "INDICA",
        "FIDE",
        "CODFID",
        "PANDEP",
        "PANFEC",
        "SFNRO",
        "SFECV",
        "SFCLI",
        "SFBVI",
        "SFRE1",
        "SFRE2",
        "SFSEL",
        "SFDIV",
        "SFCTA",
        "SFIMD",
        "SFDH",
        "SFCON",
        "NRR",
        "SALDO",
        "SENT",
        "PANDDP",
        "PANDIV",
        "PANDDI",
        "PANDH",
        "PANRE1",
        "PANRE2",
        "BANVIS",
        "PANCTA",
        "CTANOM",
        "PANIMD",
        "PANIMP",
        "CLACON",
        "CONNOM",
        "FECVAL"
    };
    final static String fid = "1140514205600";
    final static String rid = "4A95C3C704D9C";
    final static String fmtname = "ACTMOVFM";
    final int FIELDCOUNT = 42;
    private static Hashtable tlookup = new Hashtable();
    private DecimalField fieldHDAT = null;
    private DecimalField fieldHTIM = null;
    private CharacterField fieldHUSR = null;
    private CharacterField fieldHENV = null;
    private CharacterField fieldHXML = null;
    private CharacterField fieldHSEC = null;
    private CharacterField fieldHFIL = null;
    private DecimalField fieldHLEN = null;
    private CharacterField fieldINDICA = null;
    private CharacterField fieldFIDE = null;
    private CharacterField fieldCODFID = null;
    private DecimalField fieldPANDEP = null;
    private DecimalField fieldPANFEC = null;
    private DecimalField fieldSFNRO = null;
    private DecimalField fieldSFECV = null;
    private DecimalField fieldSFCLI = null;
    private DecimalField fieldSFBVI = null;
    private CharacterField fieldSFRE1 = null;
    private DecimalField fieldSFRE2 = null;
    private CharacterField fieldSFSEL = null;
    private DecimalField fieldSFDIV = null;
    private DecimalField fieldSFCTA = null;
    private DecimalField fieldSFIMD = null;
    private CharacterField fieldSFDH = null;
    private CharacterField fieldSFCON = null;
    private DecimalField fieldNRR = null;
    private DecimalField fieldSALDO = null;
    private CharacterField fieldSENT = null;
    private CharacterField fieldPANDDP = null;
    private DecimalField fieldPANDIV = null;
    private CharacterField fieldPANDDI = null;
    private CharacterField fieldPANDH = null;
    private CharacterField fieldPANRE1 = null;
    private DecimalField fieldPANRE2 = null;
    private DecimalField fieldBANVIS = null;
    private DecimalField fieldPANCTA = null;
    private CharacterField fieldCTANOM = null;
    private DecimalField fieldPANIMD = null;
    private DecimalField fieldPANIMP = null;
    private DecimalField fieldCLACON = null;
    private CharacterField fieldCONNOM = null;
    private DecimalField fieldFECVAL = null;

    /**
     * Constructor for ACTMOVFMMessage.
     */
    public ACTMOVFMMessage() {
        createFields();
        initialize();
    }

    /**
     * Create fields for this message. This method implements the abstract
     * method in the MessageRecord superclass.
     */
    protected void createFields() {
        recordsize = 554;
        fileid = fid;
        recordid = rid;
        message = new byte[getByteLength()];
        formatname = fmtname;
        fieldnames = fldnames;
        tagnames = tnames;
        fields = new MessageField[FIELDCOUNT];

        fields[0] = fieldHDAT
                = new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
        fields[1] = fieldHTIM
                = new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
        fields[2] = fieldHUSR
                = new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
        fields[3] = fieldHENV
                = new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
        fields[4] = fieldHXML
                = new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
        fields[5] = fieldHSEC
                = new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
        fields[6] = fieldHFIL
                = new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
        fields[7] = fieldHLEN
                = new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
        fields[8] = fieldINDICA
                = new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
        fields[9] = fieldFIDE
                = new CharacterField(message, HEADERSIZE + 161, 35, "FIDE");
        fields[10] = fieldCODFID
                = new CharacterField(message, HEADERSIZE + 196, 4, "CODFID");
        fields[11] = fieldPANDEP
                = new DecimalField(message, HEADERSIZE + 200, 3, 0, "PANDEP");
        fields[12] = fieldPANFEC
                = new DecimalField(message, HEADERSIZE + 203, 7, 0, "PANFEC");
        fields[13] = fieldSFNRO
                = new DecimalField(message, HEADERSIZE + 210, 8, 0, "SFNRO");
        fields[14] = fieldSFECV
                = new DecimalField(message, HEADERSIZE + 218, 7, 0, "SFECV");
        fields[15] = fieldSFCLI
                = new DecimalField(message, HEADERSIZE + 225, 8, 0, "SFCLI");
        fields[16] = fieldSFBVI
                = new DecimalField(message, HEADERSIZE + 233, 6, 0, "SFBVI");
        fields[17] = fieldSFRE1
                = new CharacterField(message, HEADERSIZE + 239, 3, "SFRE1");
        fields[18] = fieldSFRE2
                = new DecimalField(message, HEADERSIZE + 242, 8, 0, "SFRE2");
        fields[19] = fieldSFSEL
                = new CharacterField(message, HEADERSIZE + 250, 1, "SFSEL");
        fields[20] = fieldSFDIV
                = new DecimalField(message, HEADERSIZE + 251, 4, 0, "SFDIV");
        fields[21] = fieldSFCTA
                = new DecimalField(message, HEADERSIZE + 255, 15, 0, "SFCTA");
        fields[22] = fieldSFIMD
                = new DecimalField(message, HEADERSIZE + 270, 15, 2, "SFIMD");
        fields[23] = fieldSFDH
                = new CharacterField(message, HEADERSIZE + 285, 1, "SFDH");
        fields[24] = fieldSFCON
                = new CharacterField(message, HEADERSIZE + 286, 30, "SFCON");
        fields[25] = fieldNRR
                = new DecimalField(message, HEADERSIZE + 316, 5, 0, "NRR");
        fields[26] = fieldSALDO
                = new DecimalField(message, HEADERSIZE + 321, 17, 2, "SALDO");
        fields[27] = fieldSENT
                = new CharacterField(message, HEADERSIZE + 338, 1, "SENT");
        fields[28] = fieldPANDDP
                = new CharacterField(message, HEADERSIZE + 339, 15, "PANDDP");
        fields[29] = fieldPANDIV
                = new DecimalField(message, HEADERSIZE + 354, 4, 0, "PANDIV");
        fields[30] = fieldPANDDI
                = new CharacterField(message, HEADERSIZE + 358, 40, "PANDDI");
        fields[31] = fieldPANDH
                = new CharacterField(message, HEADERSIZE + 398, 1, "PANDH");
        fields[32] = fieldPANRE1
                = new CharacterField(message, HEADERSIZE + 399, 3, "PANRE1");
        fields[33] = fieldPANRE2
                = new DecimalField(message, HEADERSIZE + 402, 8, 0, "PANRE2");
        fields[34] = fieldBANVIS
                = new DecimalField(message, HEADERSIZE + 410, 8, 0, "BANVIS");
        fields[35] = fieldPANCTA
                = new DecimalField(message, HEADERSIZE + 418, 15, 0, "PANCTA");
        fields[36] = fieldCTANOM
                = new CharacterField(message, HEADERSIZE + 433, 40, "CTANOM");
        fields[37] = fieldPANIMD
                = new DecimalField(message, HEADERSIZE + 473, 15, 2, "PANIMD");
        fields[38] = fieldPANIMP
                = new DecimalField(message, HEADERSIZE + 488, 15, 2, "PANIMP");
        fields[39] = fieldCLACON
                = new DecimalField(message, HEADERSIZE + 503, 4, 0, "CLACON");
        fields[40] = fieldCONNOM
                = new CharacterField(message, HEADERSIZE + 507, 40, "CONNOM");
        fields[41] = fieldFECVAL
                = new DecimalField(message, HEADERSIZE + 547, 7, 0, "FECVAL");

        synchronized (tlookup) {
            if (tlookup.isEmpty()) {
                for (int i = 0; i < tnames.length; i++) {
                    tlookup.put(tnames[i], new Integer(i));
                }
            }
        }

        taglookup = tlookup;
    }

    /**
     * Set field HDAT using a String value.
     */
    public void setHDAT(String newvalue) {
        fieldHDAT.setString(newvalue);
    }

    /**
     * Get value of field HDAT as a String.
     */
    public String getHDAT() {
        return fieldHDAT.getString();
    }

    /**
     * Set numeric field HDAT using a BigDecimal value.
     */
    public void setHDAT(BigDecimal newvalue) {
        fieldHDAT.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HDAT as a BigDecimal.
     */
    public BigDecimal getBigDecimalHDAT() {
        return fieldHDAT.getBigDecimal();
    }

    /**
     * Set field HTIM using a String value.
     */
    public void setHTIM(String newvalue) {
        fieldHTIM.setString(newvalue);
    }

    /**
     * Get value of field HTIM as a String.
     */
    public String getHTIM() {
        return fieldHTIM.getString();
    }

    /**
     * Set numeric field HTIM using a BigDecimal value.
     */
    public void setHTIM(BigDecimal newvalue) {
        fieldHTIM.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HTIM as a BigDecimal.
     */
    public BigDecimal getBigDecimalHTIM() {
        return fieldHTIM.getBigDecimal();
    }

    /**
     * Set field HUSR using a String value.
     */
    public void setHUSR(String newvalue) {
        fieldHUSR.setString(newvalue);
    }

    /**
     * Get value of field HUSR as a String.
     */
    public String getHUSR() {
        return fieldHUSR.getString();
    }

    /**
     * Set field HENV using a String value.
     */
    public void setHENV(String newvalue) {
        fieldHENV.setString(newvalue);
    }

    /**
     * Get value of field HENV as a String.
     */
    public String getHENV() {
        return fieldHENV.getString();
    }

    /**
     * Set field HXML using a String value.
     */
    public void setHXML(String newvalue) {
        fieldHXML.setString(newvalue);
    }

    /**
     * Get value of field HXML as a String.
     */
    public String getHXML() {
        return fieldHXML.getString();
    }

    /**
     * Set field HSEC using a String value.
     */
    public void setHSEC(String newvalue) {
        fieldHSEC.setString(newvalue);
    }

    /**
     * Get value of field HSEC as a String.
     */
    public String getHSEC() {
        return fieldHSEC.getString();
    }

    /**
     * Set field HFIL using a String value.
     */
    public void setHFIL(String newvalue) {
        fieldHFIL.setString(newvalue);
    }

    /**
     * Get value of field HFIL as a String.
     */
    public String getHFIL() {
        return fieldHFIL.getString();
    }

    /**
     * Set field HLEN using a String value.
     */
    public void setHLEN(String newvalue) {
        fieldHLEN.setString(newvalue);
    }

    /**
     * Get value of field HLEN as a String.
     */
    public String getHLEN() {
        return fieldHLEN.getString();
    }

    /**
     * Set numeric field HLEN using a BigDecimal value.
     */
    public void setHLEN(BigDecimal newvalue) {
        fieldHLEN.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field HLEN as a BigDecimal.
     */
    public BigDecimal getBigDecimalHLEN() {
        return fieldHLEN.getBigDecimal();
    }

    /**
     * Set field INDICA using a String value.
     */
    public void setINDICA(String newvalue) {
        fieldINDICA.setString(newvalue);
    }

    /**
     * Get value of field INDICA as a String.
     */
    public String getINDICA() {
        return fieldINDICA.getString();
    }

    /**
     * Set field FIDE using a String value.
     */
    public void setFIDE(String newvalue) {
        fieldFIDE.setString(newvalue);
    }

    /**
     * Get value of field FIDE as a String.
     */
    public String getFIDE() {
        return fieldFIDE.getString();
    }

    /**
     * Set field CODFID using a String value.
     */
    public void setCODFID(String newvalue) {
        fieldCODFID.setString(newvalue);
    }

    /**
     * Get value of field CODFID as a String.
     */
    public String getCODFID() {
        return fieldCODFID.getString();
    }

    /**
     * Set field PANDEP using a String value.
     */
    public void setPANDEP(String newvalue) {
        fieldPANDEP.setString(newvalue);
    }

    /**
     * Get value of field PANDEP as a String.
     */
    public String getPANDEP() {
        return fieldPANDEP.getString();
    }

    /**
     * Set numeric field PANDEP using a BigDecimal value.
     */
    public void setPANDEP(BigDecimal newvalue) {
        fieldPANDEP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PANDEP as a BigDecimal.
     */
    public BigDecimal getBigDecimalPANDEP() {
        return fieldPANDEP.getBigDecimal();
    }

    /**
     * Set field PANFEC using a String value.
     */
    public void setPANFEC(String newvalue) {
        fieldPANFEC.setString(newvalue);
    }

    /**
     * Get value of field PANFEC as a String.
     */
    public String getPANFEC() {
        return fieldPANFEC.getString();
    }

    /**
     * Set numeric field PANFEC using a BigDecimal value.
     */
    public void setPANFEC(BigDecimal newvalue) {
        fieldPANFEC.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PANFEC as a BigDecimal.
     */
    public BigDecimal getBigDecimalPANFEC() {
        return fieldPANFEC.getBigDecimal();
    }

    /**
     * Set field SFNRO using a String value.
     */
    public void setSFNRO(String newvalue) {
        fieldSFNRO.setString(newvalue);
    }

    /**
     * Get value of field SFNRO as a String.
     */
    public String getSFNRO() {
        return fieldSFNRO.getString();
    }

    /**
     * Set numeric field SFNRO using a BigDecimal value.
     */
    public void setSFNRO(BigDecimal newvalue) {
        fieldSFNRO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFNRO as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFNRO() {
        return fieldSFNRO.getBigDecimal();
    }

    /**
     * Set field SFECV using a String value.
     */
    public void setSFECV(String newvalue) {
        fieldSFECV.setString(newvalue);
    }

    /**
     * Get value of field SFECV as a String.
     */
    public String getSFECV() {
        return fieldSFECV.getString();
    }

    /**
     * Set numeric field SFECV using a BigDecimal value.
     */
    public void setSFECV(BigDecimal newvalue) {
        fieldSFECV.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFECV as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFECV() {
        return fieldSFECV.getBigDecimal();
    }

    /**
     * Set field SFCLI using a String value.
     */
    public void setSFCLI(String newvalue) {
        fieldSFCLI.setString(newvalue);
    }

    /**
     * Get value of field SFCLI as a String.
     */
    public String getSFCLI() {
        return fieldSFCLI.getString();
    }

    /**
     * Set numeric field SFCLI using a BigDecimal value.
     */
    public void setSFCLI(BigDecimal newvalue) {
        fieldSFCLI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFCLI as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFCLI() {
        return fieldSFCLI.getBigDecimal();
    }

    /**
     * Set field SFBVI using a String value.
     */
    public void setSFBVI(String newvalue) {
        fieldSFBVI.setString(newvalue);
    }

    /**
     * Get value of field SFBVI as a String.
     */
    public String getSFBVI() {
        return fieldSFBVI.getString();
    }

    /**
     * Set numeric field SFBVI using a BigDecimal value.
     */
    public void setSFBVI(BigDecimal newvalue) {
        fieldSFBVI.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFBVI as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFBVI() {
        return fieldSFBVI.getBigDecimal();
    }

    /**
     * Set field SFRE1 using a String value.
     */
    public void setSFRE1(String newvalue) {
        fieldSFRE1.setString(newvalue);
    }

    /**
     * Get value of field SFRE1 as a String.
     */
    public String getSFRE1() {
        return fieldSFRE1.getString();
    }

    /**
     * Set field SFRE2 using a String value.
     */
    public void setSFRE2(String newvalue) {
        fieldSFRE2.setString(newvalue);
    }

    /**
     * Get value of field SFRE2 as a String.
     */
    public String getSFRE2() {
        return fieldSFRE2.getString();
    }

    /**
     * Set numeric field SFRE2 using a BigDecimal value.
     */
    public void setSFRE2(BigDecimal newvalue) {
        fieldSFRE2.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFRE2 as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFRE2() {
        return fieldSFRE2.getBigDecimal();
    }

    /**
     * Set field SFSEL using a String value.
     */
    public void setSFSEL(String newvalue) {
        fieldSFSEL.setString(newvalue);
    }

    /**
     * Get value of field SFSEL as a String.
     */
    public String getSFSEL() {
        return fieldSFSEL.getString();
    }

    /**
     * Set field SFDIV using a String value.
     */
    public void setSFDIV(String newvalue) {
        fieldSFDIV.setString(newvalue);
    }

    /**
     * Get value of field SFDIV as a String.
     */
    public String getSFDIV() {
        return fieldSFDIV.getString();
    }

    /**
     * Set numeric field SFDIV using a BigDecimal value.
     */
    public void setSFDIV(BigDecimal newvalue) {
        fieldSFDIV.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFDIV as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFDIV() {
        return fieldSFDIV.getBigDecimal();
    }

    /**
     * Set field SFCTA using a String value.
     */
    public void setSFCTA(String newvalue) {
        fieldSFCTA.setString(newvalue);
    }

    /**
     * Get value of field SFCTA as a String.
     */
    public String getSFCTA() {
        return fieldSFCTA.getString();
    }

    /**
     * Set numeric field SFCTA using a BigDecimal value.
     */
    public void setSFCTA(BigDecimal newvalue) {
        fieldSFCTA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFCTA as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFCTA() {
        return fieldSFCTA.getBigDecimal();
    }

    /**
     * Set field SFIMD using a String value.
     */
    public void setSFIMD(String newvalue) {
        fieldSFIMD.setString(newvalue);
    }

    /**
     * Get value of field SFIMD as a String.
     */
    public String getSFIMD() {
        return fieldSFIMD.getString();
    }

    /**
     * Set numeric field SFIMD using a BigDecimal value.
     */
    public void setSFIMD(BigDecimal newvalue) {
        fieldSFIMD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SFIMD as a BigDecimal.
     */
    public BigDecimal getBigDecimalSFIMD() {
        return fieldSFIMD.getBigDecimal();
    }

    /**
     * Set field SFDH using a String value.
     */
    public void setSFDH(String newvalue) {
        fieldSFDH.setString(newvalue);
    }

    /**
     * Get value of field SFDH as a String.
     */
    public String getSFDH() {
        return fieldSFDH.getString();
    }

    /**
     * Set field SFCON using a String value.
     */
    public void setSFCON(String newvalue) {
        fieldSFCON.setString(newvalue);
    }

    /**
     * Get value of field SFCON as a String.
     */
    public String getSFCON() {
        return fieldSFCON.getString();
    }

    /**
     * Set field NRR using a String value.
     */
    public void setNRR(String newvalue) {
        fieldNRR.setString(newvalue);
    }

    /**
     * Get value of field NRR as a String.
     */
    public String getNRR() {
        return fieldNRR.getString();
    }

    /**
     * Set numeric field NRR using a BigDecimal value.
     */
    public void setNRR(BigDecimal newvalue) {
        fieldNRR.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field NRR as a BigDecimal.
     */
    public BigDecimal getBigDecimalNRR() {
        return fieldNRR.getBigDecimal();
    }

    /**
     * Set field SALDO using a String value.
     */
    public void setSALDO(String newvalue) {
        fieldSALDO.setString(newvalue);
    }

    /**
     * Get value of field SALDO as a String.
     */
    public String getSALDO() {
        return fieldSALDO.getString();
    }

    /**
     * Set numeric field SALDO using a BigDecimal value.
     */
    public void setSALDO(BigDecimal newvalue) {
        fieldSALDO.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field SALDO as a BigDecimal.
     */
    public BigDecimal getBigDecimalSALDO() {
        return fieldSALDO.getBigDecimal();
    }

    /**
     * Set field SENT using a String value.
     */
    public void setSENT(String newvalue) {
        fieldSENT.setString(newvalue);
    }

    /**
     * Get value of field SENT as a String.
     */
    public String getSENT() {
        return fieldSENT.getString();
    }

    /**
     * Set field PANDDP using a String value.
     */
    public void setPANDDP(String newvalue) {
        fieldPANDDP.setString(newvalue);
    }

    /**
     * Get value of field PANDDP as a String.
     */
    public String getPANDDP() {
        return fieldPANDDP.getString();
    }

    /**
     * Set field PANDIV using a String value.
     */
    public void setPANDIV(String newvalue) {
        fieldPANDIV.setString(newvalue);
    }

    /**
     * Get value of field PANDIV as a String.
     */
    public String getPANDIV() {
        return fieldPANDIV.getString();
    }

    /**
     * Set numeric field PANDIV using a BigDecimal value.
     */
    public void setPANDIV(BigDecimal newvalue) {
        fieldPANDIV.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PANDIV as a BigDecimal.
     */
    public BigDecimal getBigDecimalPANDIV() {
        return fieldPANDIV.getBigDecimal();
    }

    /**
     * Set field PANDDI using a String value.
     */
    public void setPANDDI(String newvalue) {
        fieldPANDDI.setString(newvalue);
    }

    /**
     * Get value of field PANDDI as a String.
     */
    public String getPANDDI() {
        return fieldPANDDI.getString();
    }

    /**
     * Set field PANDH using a String value.
     */
    public void setPANDH(String newvalue) {
        fieldPANDH.setString(newvalue);
    }

    /**
     * Get value of field PANDH as a String.
     */
    public String getPANDH() {
        return fieldPANDH.getString();
    }

    /**
     * Set field PANRE1 using a String value.
     */
    public void setPANRE1(String newvalue) {
        fieldPANRE1.setString(newvalue);
    }

    /**
     * Get value of field PANRE1 as a String.
     */
    public String getPANRE1() {
        return fieldPANRE1.getString();
    }

    /**
     * Set field PANRE2 using a String value.
     */
    public void setPANRE2(String newvalue) {
        fieldPANRE2.setString(newvalue);
    }

    /**
     * Get value of field PANRE2 as a String.
     */
    public String getPANRE2() {
        return fieldPANRE2.getString();
    }

    /**
     * Set numeric field PANRE2 using a BigDecimal value.
     */
    public void setPANRE2(BigDecimal newvalue) {
        fieldPANRE2.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PANRE2 as a BigDecimal.
     */
    public BigDecimal getBigDecimalPANRE2() {
        return fieldPANRE2.getBigDecimal();
    }

    /**
     * Set field BANVIS using a String value.
     */
    public void setBANVIS(String newvalue) {
        fieldBANVIS.setString(newvalue);
    }

    /**
     * Get value of field BANVIS as a String.
     */
    public String getBANVIS() {
        return fieldBANVIS.getString();
    }

    /**
     * Set numeric field BANVIS using a BigDecimal value.
     */
    public void setBANVIS(BigDecimal newvalue) {
        fieldBANVIS.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field BANVIS as a BigDecimal.
     */
    public BigDecimal getBigDecimalBANVIS() {
        return fieldBANVIS.getBigDecimal();
    }

    /**
     * Set field PANCTA using a String value.
     */
    public void setPANCTA(String newvalue) {
        fieldPANCTA.setString(newvalue);
    }

    /**
     * Get value of field PANCTA as a String.
     */
    public String getPANCTA() {
        return fieldPANCTA.getString();
    }

    /**
     * Set numeric field PANCTA using a BigDecimal value.
     */
    public void setPANCTA(BigDecimal newvalue) {
        fieldPANCTA.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PANCTA as a BigDecimal.
     */
    public BigDecimal getBigDecimalPANCTA() {
        return fieldPANCTA.getBigDecimal();
    }

    /**
     * Set field CTANOM using a String value.
     */
    public void setCTANOM(String newvalue) {
        fieldCTANOM.setString(newvalue);
    }

    /**
     * Get value of field CTANOM as a String.
     */
    public String getCTANOM() {
        return fieldCTANOM.getString();
    }

    /**
     * Set field PANIMD using a String value.
     */
    public void setPANIMD(String newvalue) {
        fieldPANIMD.setString(newvalue);
    }

    /**
     * Get value of field PANIMD as a String.
     */
    public String getPANIMD() {
        return fieldPANIMD.getString();
    }

    /**
     * Set numeric field PANIMD using a BigDecimal value.
     */
    public void setPANIMD(BigDecimal newvalue) {
        fieldPANIMD.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PANIMD as a BigDecimal.
     */
    public BigDecimal getBigDecimalPANIMD() {
        return fieldPANIMD.getBigDecimal();
    }

    /**
     * Set field PANIMP using a String value.
     */
    public void setPANIMP(String newvalue) {
        fieldPANIMP.setString(newvalue);
    }

    /**
     * Get value of field PANIMP as a String.
     */
    public String getPANIMP() {
        return fieldPANIMP.getString();
    }

    /**
     * Set numeric field PANIMP using a BigDecimal value.
     */
    public void setPANIMP(BigDecimal newvalue) {
        fieldPANIMP.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field PANIMP as a BigDecimal.
     */
    public BigDecimal getBigDecimalPANIMP() {
        return fieldPANIMP.getBigDecimal();
    }

    /**
     * Set field CLACON using a String value.
     */
    public void setCLACON(String newvalue) {
        fieldCLACON.setString(newvalue);
    }

    /**
     * Get value of field CLACON as a String.
     */
    public String getCLACON() {
        return fieldCLACON.getString();
    }

    /**
     * Set numeric field CLACON using a BigDecimal value.
     */
    public void setCLACON(BigDecimal newvalue) {
        fieldCLACON.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field CLACON as a BigDecimal.
     */
    public BigDecimal getBigDecimalCLACON() {
        return fieldCLACON.getBigDecimal();
    }

    /**
     * Set field CONNOM using a String value.
     */
    public void setCONNOM(String newvalue) {
        fieldCONNOM.setString(newvalue);
    }

    /**
     * Get value of field CONNOM as a String.
     */
    public String getCONNOM() {
        return fieldCONNOM.getString();
    }

    /**
     * Set field FECVAL using a String value.
     */
    public void setFECVAL(String newvalue) {
        fieldFECVAL.setString(newvalue);
    }

    /**
     * Get value of field FECVAL as a String.
     */
    public String getFECVAL() {
        return fieldFECVAL.getString();
    }

    /**
     * Set numeric field FECVAL using a BigDecimal value.
     */
    public void setFECVAL(BigDecimal newvalue) {
        fieldFECVAL.setBigDecimal(newvalue);
    }

    /**
     * Return value of numeric field FECVAL as a BigDecimal.
     */
    public BigDecimal getBigDecimalFECVAL() {
        return fieldFECVAL.getBigDecimal();
    }

}
