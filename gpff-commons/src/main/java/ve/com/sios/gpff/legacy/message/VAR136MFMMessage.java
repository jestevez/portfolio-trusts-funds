package ve.com.sios.gpff.legacy.message;

import java.math.BigDecimal;
import java.util.Hashtable;
import ve.com.sios.gpff.legacy.sockets.CharacterField;
import ve.com.sios.gpff.legacy.sockets.DecimalField;
import ve.com.sios.gpff.legacy.sockets.MessageField;
import ve.com.sios.gpff.legacy.sockets.MessageRecord;


/**
* Class generated by AS/400 CRTCLASS command from VAR136MFM physical file definition.
* 
* File level identifier is 1140204211218.
* Record format level identifier is 3F3D1906B1BAF.
*/

public class VAR136MFMMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "HDAT",
                                     "HTIM",
                                     "HUSR",
                                     "HENV",
                                     "HXML",
                                     "HSEC",
                                     "HFIL",
                                     "HLEN",
                                     "INDICA",
                                     "SEL",
                                     "MNVVAL",
                                     "MNVINI",
                                     "MNVVTO",
                                     "MNVVNO",
                                     "MNVPOP",
                                     "MNVCLI",
                                     "MNVNOP",
                                     "MNVEMP",
                                     "MNVDEL",
                                     "CODCLI",
                                     "NOMCLI",
                                     "NOMDIV",
                                     "FECINI",
                                     "MNVBAD",
                                     "FECVTO",
                                     "DIHOYC",
                                     "VALOR",
                                     "MNVPRE",
                                     "COMVEN",
                                     "NOMCV",
                                     "NUMTIT",
                                     "REFINV",
                                     "RETENC",
                                     "COD36",
                                     "VALCAP",
                                     "INACUM",
                                     "EFEINI",
                                     "DIAPAGX",
                                     "PREPAG",
                                     "PRCX",
                                     "EFEFIN",
                                     "OK1",
                                     "TEXERR"
                                   };
  final static String tnames[] = {
                                   "HDAT",
                                   "HTIM",
                                   "HUSR",
                                   "HENV",
                                   "HXML",
                                   "HSEC",
                                   "HFIL",
                                   "HLEN",
                                   "INDICA",
                                   "SEL",
                                   "MNVVAL",
                                   "MNVINI",
                                   "MNVVTO",
                                   "MNVVNO",
                                   "MNVPOP",
                                   "MNVCLI",
                                   "MNVNOP",
                                   "MNVEMP",
                                   "MNVDEL",
                                   "CODCLI",
                                   "NOMCLI",
                                   "NOMDIV",
                                   "FECINI",
                                   "MNVBAD",
                                   "FECVTO",
                                   "DIHOYC",
                                   "VALOR",
                                   "MNVPRE",
                                   "COMVEN",
                                   "NOMCV",
                                   "NUMTIT",
                                   "REFINV",
                                   "RETENC",
                                   "COD36",
                                   "VALCAP",
                                   "INACUM",
                                   "EFEINI",
                                   "DIAPAGX",
                                   "PREPAG",
                                   "PRCX",
                                   "EFEFIN",
                                   "OK1",
                                   "TEXERR"
                                 };
  final static String fid = "1140204211218";
  final static String rid = "3F3D1906B1BAF";
  final static String fmtname = "VAR136MFM";
  final int FIELDCOUNT = 43;
  private static Hashtable tlookup = new Hashtable();
  private DecimalField fieldHDAT = null;
  private DecimalField fieldHTIM = null;
  private CharacterField fieldHUSR = null;
  private CharacterField fieldHENV = null;
  private CharacterField fieldHXML = null;
  private CharacterField fieldHSEC = null;
  private CharacterField fieldHFIL = null;
  private DecimalField fieldHLEN = null;
  private CharacterField fieldINDICA = null;
  private CharacterField fieldSEL = null;
  private CharacterField fieldMNVVAL = null;
  private DecimalField fieldMNVINI = null;
  private DecimalField fieldMNVVTO = null;
  private DecimalField fieldMNVVNO = null;
  private DecimalField fieldMNVPOP = null;
  private DecimalField fieldMNVCLI = null;
  private DecimalField fieldMNVNOP = null;
  private CharacterField fieldMNVEMP = null;
  private CharacterField fieldMNVDEL = null;
  private DecimalField fieldCODCLI = null;
  private CharacterField fieldNOMCLI = null;
  private CharacterField fieldNOMDIV = null;
  private DecimalField fieldFECINI = null;
  private DecimalField fieldMNVBAD = null;
  private DecimalField fieldFECVTO = null;
  private DecimalField fieldDIHOYC = null;
  private CharacterField fieldVALOR = null;
  private DecimalField fieldMNVPRE = null;
  private CharacterField fieldCOMVEN = null;
  private CharacterField fieldNOMCV = null;
  private DecimalField fieldNUMTIT = null;
  private CharacterField fieldREFINV = null;
  private CharacterField fieldRETENC = null;
  private DecimalField fieldCOD36 = null;
  private DecimalField fieldVALCAP = null;
  private DecimalField fieldINACUM = null;
  private DecimalField fieldEFEINI = null;
  private DecimalField fieldDIAPAGX = null;
  private DecimalField fieldPREPAG = null;
  private DecimalField fieldPRCX = null;
  private DecimalField fieldEFEFIN = null;
  private CharacterField fieldOK1 = null;
  private CharacterField fieldTEXERR = null;

  /**
  * Constructor for VAR136MFMMessage.
  */
  public VAR136MFMMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
  protected void createFields()
  {
    recordsize = 554;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldHDAT =
    new DecimalField(message, HEADERSIZE + 0, 7, 0, "HDAT");
    fields[1] = fieldHTIM =
    new DecimalField(message, HEADERSIZE + 7, 7, 0, "HTIM");
    fields[2] = fieldHUSR =
    new CharacterField(message, HEADERSIZE + 14, 10, "HUSR");
    fields[3] = fieldHENV =
    new CharacterField(message, HEADERSIZE + 24, 1, "HENV");
    fields[4] = fieldHXML =
    new CharacterField(message, HEADERSIZE + 25, 10, "HXML");
    fields[5] = fieldHSEC =
    new CharacterField(message, HEADERSIZE + 35, 10, "HSEC");
    fields[6] = fieldHFIL =
    new CharacterField(message, HEADERSIZE + 45, 10, "HFIL");
    fields[7] = fieldHLEN =
    new DecimalField(message, HEADERSIZE + 55, 6, 0, "HLEN");
    fields[8] = fieldINDICA =
    new CharacterField(message, HEADERSIZE + 61, 100, "INDICA");
    fields[9] = fieldSEL =
    new CharacterField(message, HEADERSIZE + 161, 1, "SEL");
    fields[10] = fieldMNVVAL =
    new CharacterField(message, HEADERSIZE + 162, 12, "MNVVAL");
    fields[11] = fieldMNVINI =
    new DecimalField(message, HEADERSIZE + 174, 7, 0, "MNVINI");
    fields[12] = fieldMNVVTO =
    new DecimalField(message, HEADERSIZE + 181, 7, 0, "MNVVTO");
    fields[13] = fieldMNVVNO =
    new DecimalField(message, HEADERSIZE + 188, 17, 2, "MNVVNO");
    fields[14] = fieldMNVPOP =
    new DecimalField(message, HEADERSIZE + 205, 11, 6, "MNVPOP");
    fields[15] = fieldMNVCLI =
    new DecimalField(message, HEADERSIZE + 216, 8, 0, "MNVCLI");
    fields[16] = fieldMNVNOP =
    new DecimalField(message, HEADERSIZE + 224, 11, 0, "MNVNOP");
    fields[17] = fieldMNVEMP =
    new CharacterField(message, HEADERSIZE + 235, 2, "MNVEMP");
    fields[18] = fieldMNVDEL =
    new CharacterField(message, HEADERSIZE + 237, 2, "MNVDEL");
    fields[19] = fieldCODCLI =
    new DecimalField(message, HEADERSIZE + 239, 8, 0, "CODCLI");
    fields[20] = fieldNOMCLI =
    new CharacterField(message, HEADERSIZE + 247, 39, "NOMCLI");
    fields[21] = fieldNOMDIV =
    new CharacterField(message, HEADERSIZE + 286, 20, "NOMDIV");
    fields[22] = fieldFECINI =
    new DecimalField(message, HEADERSIZE + 306, 7, 0, "FECINI");
    fields[23] = fieldMNVBAD =
    new DecimalField(message, HEADERSIZE + 313, 2, 0, "MNVBAD");
    fields[24] = fieldFECVTO =
    new DecimalField(message, HEADERSIZE + 315, 7, 0, "FECVTO");
    fields[25] = fieldDIHOYC =
    new DecimalField(message, HEADERSIZE + 322, 5, 0, "DIHOYC");
    fields[26] = fieldVALOR =
    new CharacterField(message, HEADERSIZE + 327, 12, "VALOR");
    fields[27] = fieldMNVPRE =
    new DecimalField(message, HEADERSIZE + 339, 11, 6, "MNVPRE");
    fields[28] = fieldCOMVEN =
    new CharacterField(message, HEADERSIZE + 350, 1, "COMVEN");
    fields[29] = fieldNOMCV =
    new CharacterField(message, HEADERSIZE + 351, 6, "NOMCV");
    fields[30] = fieldNUMTIT =
    new DecimalField(message, HEADERSIZE + 357, 29, 7, "NUMTIT");
    fields[31] = fieldREFINV =
    new CharacterField(message, HEADERSIZE + 386, 3, "REFINV");
    fields[32] = fieldRETENC =
    new CharacterField(message, HEADERSIZE + 389, 1, "RETENC");
    fields[33] = fieldCOD36 =
    new DecimalField(message, HEADERSIZE + 390, 2, 0, "COD36");
    fields[34] = fieldVALCAP =
    new DecimalField(message, HEADERSIZE + 392, 17, 2, "VALCAP");
    fields[35] = fieldINACUM =
    new DecimalField(message, HEADERSIZE + 409, 17, 2, "INACUM");
    fields[36] = fieldEFEINI =
    new DecimalField(message, HEADERSIZE + 426, 17, 2, "EFEINI");
    fields[37] = fieldDIAPAGX =
    new DecimalField(message, HEADERSIZE + 443, 5, 0, "DIAPAGX");
    fields[38] = fieldPREPAG =
    new DecimalField(message, HEADERSIZE + 448, 11, 6, "PREPAG");
    fields[39] = fieldPRCX =
    new DecimalField(message, HEADERSIZE + 459, 17, 2, "PRCX");
    fields[40] = fieldEFEFIN =
    new DecimalField(message, HEADERSIZE + 476, 17, 2, "EFEFIN");
    fields[41] = fieldOK1 =
    new CharacterField(message, HEADERSIZE + 493, 1, "OK1");
    fields[42] = fieldTEXERR =
    new CharacterField(message, HEADERSIZE + 494, 60, "TEXERR");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field HDAT using a String value.
  */
  public void setHDAT(String newvalue)
  {
    fieldHDAT.setString(newvalue);
  }

  /**
  * Get value of field HDAT as a String.
  */
  public String getHDAT()
  {
    return fieldHDAT.getString();
  }

  /**
  * Set numeric field HDAT using a BigDecimal value.
  */
  public void setHDAT(BigDecimal newvalue)
  {
    fieldHDAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HDAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalHDAT()
  {
    return fieldHDAT.getBigDecimal();
  }

  /**
  * Set field HTIM using a String value.
  */
  public void setHTIM(String newvalue)
  {
    fieldHTIM.setString(newvalue);
  }

  /**
  * Get value of field HTIM as a String.
  */
  public String getHTIM()
  {
    return fieldHTIM.getString();
  }

  /**
  * Set numeric field HTIM using a BigDecimal value.
  */
  public void setHTIM(BigDecimal newvalue)
  {
    fieldHTIM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HTIM as a BigDecimal.
  */
  public BigDecimal getBigDecimalHTIM()
  {
    return fieldHTIM.getBigDecimal();
  }

  /**
  * Set field HUSR using a String value.
  */
  public void setHUSR(String newvalue)
  {
    fieldHUSR.setString(newvalue);
  }

  /**
  * Get value of field HUSR as a String.
  */
  public String getHUSR()
  {
    return fieldHUSR.getString();
  }

  /**
  * Set field HENV using a String value.
  */
  public void setHENV(String newvalue)
  {
    fieldHENV.setString(newvalue);
  }

  /**
  * Get value of field HENV as a String.
  */
  public String getHENV()
  {
    return fieldHENV.getString();
  }

  /**
  * Set field HXML using a String value.
  */
  public void setHXML(String newvalue)
  {
    fieldHXML.setString(newvalue);
  }

  /**
  * Get value of field HXML as a String.
  */
  public String getHXML()
  {
    return fieldHXML.getString();
  }

  /**
  * Set field HSEC using a String value.
  */
  public void setHSEC(String newvalue)
  {
    fieldHSEC.setString(newvalue);
  }

  /**
  * Get value of field HSEC as a String.
  */
  public String getHSEC()
  {
    return fieldHSEC.getString();
  }

  /**
  * Set field HFIL using a String value.
  */
  public void setHFIL(String newvalue)
  {
    fieldHFIL.setString(newvalue);
  }

  /**
  * Get value of field HFIL as a String.
  */
  public String getHFIL()
  {
    return fieldHFIL.getString();
  }

  /**
  * Set field HLEN using a String value.
  */
  public void setHLEN(String newvalue)
  {
    fieldHLEN.setString(newvalue);
  }

  /**
  * Get value of field HLEN as a String.
  */
  public String getHLEN()
  {
    return fieldHLEN.getString();
  }

  /**
  * Set numeric field HLEN using a BigDecimal value.
  */
  public void setHLEN(BigDecimal newvalue)
  {
    fieldHLEN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field HLEN as a BigDecimal.
  */
  public BigDecimal getBigDecimalHLEN()
  {
    return fieldHLEN.getBigDecimal();
  }

  /**
  * Set field INDICA using a String value.
  */
  public void setINDICA(String newvalue)
  {
    fieldINDICA.setString(newvalue);
  }

  /**
  * Get value of field INDICA as a String.
  */
  public String getINDICA()
  {
    return fieldINDICA.getString();
  }

  /**
  * Set field SEL using a String value.
  */
  public void setSEL(String newvalue)
  {
    fieldSEL.setString(newvalue);
  }

  /**
  * Get value of field SEL as a String.
  */
  public String getSEL()
  {
    return fieldSEL.getString();
  }

  /**
  * Set field MNVVAL using a String value.
  */
  public void setMNVVAL(String newvalue)
  {
    fieldMNVVAL.setString(newvalue);
  }

  /**
  * Get value of field MNVVAL as a String.
  */
  public String getMNVVAL()
  {
    return fieldMNVVAL.getString();
  }

  /**
  * Set field MNVINI using a String value.
  */
  public void setMNVINI(String newvalue)
  {
    fieldMNVINI.setString(newvalue);
  }

  /**
  * Get value of field MNVINI as a String.
  */
  public String getMNVINI()
  {
    return fieldMNVINI.getString();
  }

  /**
  * Set numeric field MNVINI using a BigDecimal value.
  */
  public void setMNVINI(BigDecimal newvalue)
  {
    fieldMNVINI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVINI as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVINI()
  {
    return fieldMNVINI.getBigDecimal();
  }

  /**
  * Set field MNVVTO using a String value.
  */
  public void setMNVVTO(String newvalue)
  {
    fieldMNVVTO.setString(newvalue);
  }

  /**
  * Get value of field MNVVTO as a String.
  */
  public String getMNVVTO()
  {
    return fieldMNVVTO.getString();
  }

  /**
  * Set numeric field MNVVTO using a BigDecimal value.
  */
  public void setMNVVTO(BigDecimal newvalue)
  {
    fieldMNVVTO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVVTO as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVVTO()
  {
    return fieldMNVVTO.getBigDecimal();
  }

  /**
  * Set field MNVVNO using a String value.
  */
  public void setMNVVNO(String newvalue)
  {
    fieldMNVVNO.setString(newvalue);
  }

  /**
  * Get value of field MNVVNO as a String.
  */
  public String getMNVVNO()
  {
    return fieldMNVVNO.getString();
  }

  /**
  * Set numeric field MNVVNO using a BigDecimal value.
  */
  public void setMNVVNO(BigDecimal newvalue)
  {
    fieldMNVVNO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVVNO as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVVNO()
  {
    return fieldMNVVNO.getBigDecimal();
  }

  /**
  * Set field MNVPOP using a String value.
  */
  public void setMNVPOP(String newvalue)
  {
    fieldMNVPOP.setString(newvalue);
  }

  /**
  * Get value of field MNVPOP as a String.
  */
  public String getMNVPOP()
  {
    return fieldMNVPOP.getString();
  }

  /**
  * Set numeric field MNVPOP using a BigDecimal value.
  */
  public void setMNVPOP(BigDecimal newvalue)
  {
    fieldMNVPOP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVPOP as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVPOP()
  {
    return fieldMNVPOP.getBigDecimal();
  }

  /**
  * Set field MNVCLI using a String value.
  */
  public void setMNVCLI(String newvalue)
  {
    fieldMNVCLI.setString(newvalue);
  }

  /**
  * Get value of field MNVCLI as a String.
  */
  public String getMNVCLI()
  {
    return fieldMNVCLI.getString();
  }

  /**
  * Set numeric field MNVCLI using a BigDecimal value.
  */
  public void setMNVCLI(BigDecimal newvalue)
  {
    fieldMNVCLI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVCLI as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVCLI()
  {
    return fieldMNVCLI.getBigDecimal();
  }

  /**
  * Set field MNVNOP using a String value.
  */
  public void setMNVNOP(String newvalue)
  {
    fieldMNVNOP.setString(newvalue);
  }

  /**
  * Get value of field MNVNOP as a String.
  */
  public String getMNVNOP()
  {
    return fieldMNVNOP.getString();
  }

  /**
  * Set numeric field MNVNOP using a BigDecimal value.
  */
  public void setMNVNOP(BigDecimal newvalue)
  {
    fieldMNVNOP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVNOP as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVNOP()
  {
    return fieldMNVNOP.getBigDecimal();
  }

  /**
  * Set field MNVEMP using a String value.
  */
  public void setMNVEMP(String newvalue)
  {
    fieldMNVEMP.setString(newvalue);
  }

  /**
  * Get value of field MNVEMP as a String.
  */
  public String getMNVEMP()
  {
    return fieldMNVEMP.getString();
  }

  /**
  * Set field MNVDEL using a String value.
  */
  public void setMNVDEL(String newvalue)
  {
    fieldMNVDEL.setString(newvalue);
  }

  /**
  * Get value of field MNVDEL as a String.
  */
  public String getMNVDEL()
  {
    return fieldMNVDEL.getString();
  }

  /**
  * Set field CODCLI using a String value.
  */
  public void setCODCLI(String newvalue)
  {
    fieldCODCLI.setString(newvalue);
  }

  /**
  * Get value of field CODCLI as a String.
  */
  public String getCODCLI()
  {
    return fieldCODCLI.getString();
  }

  /**
  * Set numeric field CODCLI using a BigDecimal value.
  */
  public void setCODCLI(BigDecimal newvalue)
  {
    fieldCODCLI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CODCLI as a BigDecimal.
  */
  public BigDecimal getBigDecimalCODCLI()
  {
    return fieldCODCLI.getBigDecimal();
  }

  /**
  * Set field NOMCLI using a String value.
  */
  public void setNOMCLI(String newvalue)
  {
    fieldNOMCLI.setString(newvalue);
  }

  /**
  * Get value of field NOMCLI as a String.
  */
  public String getNOMCLI()
  {
    return fieldNOMCLI.getString();
  }

  /**
  * Set field NOMDIV using a String value.
  */
  public void setNOMDIV(String newvalue)
  {
    fieldNOMDIV.setString(newvalue);
  }

  /**
  * Get value of field NOMDIV as a String.
  */
  public String getNOMDIV()
  {
    return fieldNOMDIV.getString();
  }

  /**
  * Set field FECINI using a String value.
  */
  public void setFECINI(String newvalue)
  {
    fieldFECINI.setString(newvalue);
  }

  /**
  * Get value of field FECINI as a String.
  */
  public String getFECINI()
  {
    return fieldFECINI.getString();
  }

  /**
  * Set numeric field FECINI using a BigDecimal value.
  */
  public void setFECINI(BigDecimal newvalue)
  {
    fieldFECINI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field FECINI as a BigDecimal.
  */
  public BigDecimal getBigDecimalFECINI()
  {
    return fieldFECINI.getBigDecimal();
  }

  /**
  * Set field MNVBAD using a String value.
  */
  public void setMNVBAD(String newvalue)
  {
    fieldMNVBAD.setString(newvalue);
  }

  /**
  * Get value of field MNVBAD as a String.
  */
  public String getMNVBAD()
  {
    return fieldMNVBAD.getString();
  }

  /**
  * Set numeric field MNVBAD using a BigDecimal value.
  */
  public void setMNVBAD(BigDecimal newvalue)
  {
    fieldMNVBAD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVBAD as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVBAD()
  {
    return fieldMNVBAD.getBigDecimal();
  }

  /**
  * Set field FECVTO using a String value.
  */
  public void setFECVTO(String newvalue)
  {
    fieldFECVTO.setString(newvalue);
  }

  /**
  * Get value of field FECVTO as a String.
  */
  public String getFECVTO()
  {
    return fieldFECVTO.getString();
  }

  /**
  * Set numeric field FECVTO using a BigDecimal value.
  */
  public void setFECVTO(BigDecimal newvalue)
  {
    fieldFECVTO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field FECVTO as a BigDecimal.
  */
  public BigDecimal getBigDecimalFECVTO()
  {
    return fieldFECVTO.getBigDecimal();
  }

  /**
  * Set field DIHOYC using a String value.
  */
  public void setDIHOYC(String newvalue)
  {
    fieldDIHOYC.setString(newvalue);
  }

  /**
  * Get value of field DIHOYC as a String.
  */
  public String getDIHOYC()
  {
    return fieldDIHOYC.getString();
  }

  /**
  * Set numeric field DIHOYC using a BigDecimal value.
  */
  public void setDIHOYC(BigDecimal newvalue)
  {
    fieldDIHOYC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field DIHOYC as a BigDecimal.
  */
  public BigDecimal getBigDecimalDIHOYC()
  {
    return fieldDIHOYC.getBigDecimal();
  }

  /**
  * Set field VALOR using a String value.
  */
  public void setVALOR(String newvalue)
  {
    fieldVALOR.setString(newvalue);
  }

  /**
  * Get value of field VALOR as a String.
  */
  public String getVALOR()
  {
    return fieldVALOR.getString();
  }

  /**
  * Set field MNVPRE using a String value.
  */
  public void setMNVPRE(String newvalue)
  {
    fieldMNVPRE.setString(newvalue);
  }

  /**
  * Get value of field MNVPRE as a String.
  */
  public String getMNVPRE()
  {
    return fieldMNVPRE.getString();
  }

  /**
  * Set numeric field MNVPRE using a BigDecimal value.
  */
  public void setMNVPRE(BigDecimal newvalue)
  {
    fieldMNVPRE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field MNVPRE as a BigDecimal.
  */
  public BigDecimal getBigDecimalMNVPRE()
  {
    return fieldMNVPRE.getBigDecimal();
  }

  /**
  * Set field COMVEN using a String value.
  */
  public void setCOMVEN(String newvalue)
  {
    fieldCOMVEN.setString(newvalue);
  }

  /**
  * Get value of field COMVEN as a String.
  */
  public String getCOMVEN()
  {
    return fieldCOMVEN.getString();
  }

  /**
  * Set field NOMCV using a String value.
  */
  public void setNOMCV(String newvalue)
  {
    fieldNOMCV.setString(newvalue);
  }

  /**
  * Get value of field NOMCV as a String.
  */
  public String getNOMCV()
  {
    return fieldNOMCV.getString();
  }

  /**
  * Set field NUMTIT using a String value.
  */
  public void setNUMTIT(String newvalue)
  {
    fieldNUMTIT.setString(newvalue);
  }

  /**
  * Get value of field NUMTIT as a String.
  */
  public String getNUMTIT()
  {
    return fieldNUMTIT.getString();
  }

  /**
  * Set numeric field NUMTIT using a BigDecimal value.
  */
  public void setNUMTIT(BigDecimal newvalue)
  {
    fieldNUMTIT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field NUMTIT as a BigDecimal.
  */
  public BigDecimal getBigDecimalNUMTIT()
  {
    return fieldNUMTIT.getBigDecimal();
  }

  /**
  * Set field REFINV using a String value.
  */
  public void setREFINV(String newvalue)
  {
    fieldREFINV.setString(newvalue);
  }

  /**
  * Get value of field REFINV as a String.
  */
  public String getREFINV()
  {
    return fieldREFINV.getString();
  }

  /**
  * Set field RETENC using a String value.
  */
  public void setRETENC(String newvalue)
  {
    fieldRETENC.setString(newvalue);
  }

  /**
  * Get value of field RETENC as a String.
  */
  public String getRETENC()
  {
    return fieldRETENC.getString();
  }

  /**
  * Set field COD36 using a String value.
  */
  public void setCOD36(String newvalue)
  {
    fieldCOD36.setString(newvalue);
  }

  /**
  * Get value of field COD36 as a String.
  */
  public String getCOD36()
  {
    return fieldCOD36.getString();
  }

  /**
  * Set numeric field COD36 using a BigDecimal value.
  */
  public void setCOD36(BigDecimal newvalue)
  {
    fieldCOD36.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field COD36 as a BigDecimal.
  */
  public BigDecimal getBigDecimalCOD36()
  {
    return fieldCOD36.getBigDecimal();
  }

  /**
  * Set field VALCAP using a String value.
  */
  public void setVALCAP(String newvalue)
  {
    fieldVALCAP.setString(newvalue);
  }

  /**
  * Get value of field VALCAP as a String.
  */
  public String getVALCAP()
  {
    return fieldVALCAP.getString();
  }

  /**
  * Set numeric field VALCAP using a BigDecimal value.
  */
  public void setVALCAP(BigDecimal newvalue)
  {
    fieldVALCAP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field VALCAP as a BigDecimal.
  */
  public BigDecimal getBigDecimalVALCAP()
  {
    return fieldVALCAP.getBigDecimal();
  }

  /**
  * Set field INACUM using a String value.
  */
  public void setINACUM(String newvalue)
  {
    fieldINACUM.setString(newvalue);
  }

  /**
  * Get value of field INACUM as a String.
  */
  public String getINACUM()
  {
    return fieldINACUM.getString();
  }

  /**
  * Set numeric field INACUM using a BigDecimal value.
  */
  public void setINACUM(BigDecimal newvalue)
  {
    fieldINACUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INACUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalINACUM()
  {
    return fieldINACUM.getBigDecimal();
  }

  /**
  * Set field EFEINI using a String value.
  */
  public void setEFEINI(String newvalue)
  {
    fieldEFEINI.setString(newvalue);
  }

  /**
  * Get value of field EFEINI as a String.
  */
  public String getEFEINI()
  {
    return fieldEFEINI.getString();
  }

  /**
  * Set numeric field EFEINI using a BigDecimal value.
  */
  public void setEFEINI(BigDecimal newvalue)
  {
    fieldEFEINI.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EFEINI as a BigDecimal.
  */
  public BigDecimal getBigDecimalEFEINI()
  {
    return fieldEFEINI.getBigDecimal();
  }

  /**
  * Set field DIAPAGX using a String value.
  */
  public void setDIAPAGX(String newvalue)
  {
    fieldDIAPAGX.setString(newvalue);
  }

  /**
  * Get value of field DIAPAGX as a String.
  */
  public String getDIAPAGX()
  {
    return fieldDIAPAGX.getString();
  }

  /**
  * Set numeric field DIAPAGX using a BigDecimal value.
  */
  public void setDIAPAGX(BigDecimal newvalue)
  {
    fieldDIAPAGX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field DIAPAGX as a BigDecimal.
  */
  public BigDecimal getBigDecimalDIAPAGX()
  {
    return fieldDIAPAGX.getBigDecimal();
  }

  /**
  * Set field PREPAG using a String value.
  */
  public void setPREPAG(String newvalue)
  {
    fieldPREPAG.setString(newvalue);
  }

  /**
  * Get value of field PREPAG as a String.
  */
  public String getPREPAG()
  {
    return fieldPREPAG.getString();
  }

  /**
  * Set numeric field PREPAG using a BigDecimal value.
  */
  public void setPREPAG(BigDecimal newvalue)
  {
    fieldPREPAG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PREPAG as a BigDecimal.
  */
  public BigDecimal getBigDecimalPREPAG()
  {
    return fieldPREPAG.getBigDecimal();
  }

  /**
  * Set field PRCX using a String value.
  */
  public void setPRCX(String newvalue)
  {
    fieldPRCX.setString(newvalue);
  }

  /**
  * Get value of field PRCX as a String.
  */
  public String getPRCX()
  {
    return fieldPRCX.getString();
  }

  /**
  * Set numeric field PRCX using a BigDecimal value.
  */
  public void setPRCX(BigDecimal newvalue)
  {
    fieldPRCX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field PRCX as a BigDecimal.
  */
  public BigDecimal getBigDecimalPRCX()
  {
    return fieldPRCX.getBigDecimal();
  }

  /**
  * Set field EFEFIN using a String value.
  */
  public void setEFEFIN(String newvalue)
  {
    fieldEFEFIN.setString(newvalue);
  }

  /**
  * Get value of field EFEFIN as a String.
  */
  public String getEFEFIN()
  {
    return fieldEFEFIN.getString();
  }

  /**
  * Set numeric field EFEFIN using a BigDecimal value.
  */
  public void setEFEFIN(BigDecimal newvalue)
  {
    fieldEFEFIN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field EFEFIN as a BigDecimal.
  */
  public BigDecimal getBigDecimalEFEFIN()
  {
    return fieldEFEFIN.getBigDecimal();
  }

  /**
  * Set field OK1 using a String value.
  */
  public void setOK1(String newvalue)
  {
    fieldOK1.setString(newvalue);
  }

  /**
  * Get value of field OK1 as a String.
  */
  public String getOK1()
  {
    return fieldOK1.getString();
  }

  /**
  * Set field TEXERR using a String value.
  */
  public void setTEXERR(String newvalue)
  {
    fieldTEXERR.setString(newvalue);
  }

  /**
  * Get value of field TEXERR as a String.
  */
  public String getTEXERR()
  {
    return fieldTEXERR.getString();
  }

}
